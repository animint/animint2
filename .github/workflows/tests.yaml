name: Test Suite
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      R_SETUP_PATH: ${{ steps.r-setup.outputs.r-path }}
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update -y -qq
          sudo DEBIAN_FRONTEND=noninteractive apt install -y tidy texlive texlive-fonts-extra

      - uses: r-lib/actions/setup-r@v2
        id: r-setup

      - uses: r-lib/actions/setup-r-dependencies@v2

      - name: Configure git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "toby.hocking@r-project.org"

      - name: Install package
        run: R CMD INSTALL .

  r-tests:
    needs: setup
    runs-on: ubuntu-latest
    name: R coverage tests
    env:
      TEST_SUITE: R_coverage
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      GH_ACTION: "ENABLED"
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Run R tests and write lcov
        run: |
          echo "Generating R test coverage lcov file"
          Rscript -e "if (!requireNamespace('covr', quietly=TRUE)) install.packages('covr'); library(covr); cov <- covr::package_coverage(path='.', type='tests'); covr:::to_lcov(cov, file='r-coverage.lcov')"
      - name: Upload R coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: r-coverage
          path: r-coverage.lcov

  js-tests:
    needs: setup
    runs-on: ubuntu-latest
    name: JS coverage tests
    env:
      TEST_SUITE: JS_coverage
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      GH_ACTION: "ENABLED"
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Node.js dependencies
        run: npm install v8-to-istanbul
      - name: Run JS tests (R + JS coverage)
        run: Rscript -e "source('tests/testthat.R', chdir = TRUE)"
      - name: Convert JS coverage to Istanbul format
        run: |
          if [ -f "tests/testthat/js-coverage.json" ]; then
            node v8-to-istanbul.js
          else
            echo "No JS coverage file found" >&2
            exit 1
          fi
      - name: Upload JS coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: js-coverage
          path: coverage-istanbul.json

  CRAN:
    needs: setup
    runs-on: ubuntu-latest
    name: CRAN checks
    env:
      TEST_SUITE: CRAN
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      GH_ACTION: "ENABLED"
    steps:
      - uses: actions/checkout@v3
      - name: Run CRAN build
        run: bash build.sh

  upload-coverage:
    needs: [r-tests, js-tests]
    runs-on: ubuntu-latest
    name: Upload combined coverage to Codecov
    if: always()
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Download R coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: r-coverage
          path: ./artifacts

      - name: Download JS coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: js-coverage
          path: ./artifacts

      - name: Show downloaded files
        run: ls -la artifacts || true

      - name: Upload to Codecov
        run: |
          if [ -f "artifacts/r-coverage.lcov" ] && [ -f "artifacts/coverage-istanbul.json" ]; then
            echo "Uploading both R and JS coverage to Codecov"
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -f artifacts/r-coverage.lcov -f artifacts/coverage-istanbul.json -t $CODECOV_TOKEN --flags "r,javascript"
          else
            echo "Missing one or both coverage files. Abort upload." >&2
            exit 1
          fi
