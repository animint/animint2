name: Test Suite
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  r-tests:
    runs-on: ubuntu-latest
    name: R coverage tests
    env:
      TEST_SUITE: R_coverage
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      GH_ACTION: "ENABLED"
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: install and update texlive
        run: /usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt update -y -qq
      - run: /usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt install tidy texlive texlive-fonts-extra -y
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2

      - name: install package
        run: R CMD INSTALL .

      - name: git config user.name
        run: git config --global user.name "GitHub Actions"

      - name: git config user.email
        run: git config --global user.email toby.hocking@r-project.org

      - name: Run R tests and write lcov
        run: |
          echo "Generating R test coverage lcov file"
          Rscript -e "library(covr); cov <- covr::package_coverage(path='.', type='tests'); covr::to_lcov(cov, file='r-coverage.lcov')"

      - name: Upload R coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: r-coverage
          path: r-coverage.lcov

  js-tests:
    runs-on: ubuntu-latest
    name: JS coverage tests
    env:
      TEST_SUITE: JS_coverage
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      GH_ACTION: "ENABLED"
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: install and update texlive
        run: /usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt update -y -qq
      - run: /usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt install tidy texlive texlive-fonts-extra -y
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2

      - name: install package
        run: R CMD INSTALL .

      - name: git config user.name 
        run: git config --global user.name "GitHub Actions"

      - name: git config user.email
        run: git config --global user.email toby.hocking@r-project.org

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Node.js dependencies
        run: |
          npm install v8-to-istanbul
          echo "Node modules installed"
      - name: Run JS tests (R + JS coverage collection)
        run: |
          echo "Running testthat with JS coverage collection..."
          Rscript -e "source('tests/testthat.R', chdir = TRUE)"

      - name: Convert JS coverage to Istanbul format
        run: |
          if [ -f "tests/testthat/js-coverage.json" ]; then
            echo "Converting JS coverage to Istanbul format..."
            node v8-to-istanbul.js
          else
            echo "No JS coverage file found"
            exit 1
          fi

      - name: Upload JS coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: js-coverage
          path: coverage-istanbul.json

  CRAN:
    runs-on: ubuntu-latest
    name: CRAN checks
    env:
      TEST_SUITE: CRAN
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      GH_ACTION: "ENABLED"
    steps:
      - uses: actions/checkout@v3
      - name: install and update texlive
        run: /usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt update -y -qq
      - run: /usr/bin/sudo DEBIAN_FRONTEND=noninteractive apt install tidy texlive texlive-fonts-extra -y
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2

      - name: install package
        run: R CMD INSTALL .

      - name: git config user.name
        run: git config --global user.name "GitHub Actions"

      - name: git config user.email
        run: git config --global user.email toby.hocking@r-project.org

      - name: run CRAN build
        run: bash build.sh

  upload-coverage:
    runs-on: ubuntu-latest
    name: Upload combined coverage to Codecov
    needs: [r-tests, js-tests]
    if: always()
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Download R coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: r-coverage
          path: ./artifacts

      - name: Download JS coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: js-coverage
          path: ./artifacts

      - name: Show downloaded files
        run: ls -la artifacts || true

      - name: Upload to Codecov
        run: |
          if [ -f "artifacts/r-coverage.lcov" ] && [ -f "artifacts/coverage-istanbul.json" ]; then
            echo "Uploading both R and JS coverage to Codecov"
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov
            ./codecov -f artifacts/r-coverage.lcov -f artifacts/coverage-istanbul.json -t $CODECOV_TOKEN --flags "r,javascript"
          else
            echo "Missing one or both coverage files. Abort upload." >&2
            exit 1
          fi
