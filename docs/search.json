[{"path":[]},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"introduction","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Introduction","title":"","text":"Welcome quick start guide. goal introduce animint2 way brief easy understand. assume nothing except basic familiarity R, data visualizations, little bit statistics. familiarity ggplot2 package helpful unnecessary. reading , ’ll leave sense animint2 works. ’ll also know make interactive data visualizations, sometimes referred animints. basic animints, quick start guide ’ll need. learn make sophisticated animints, take look animint2 Manual. may also want take look animint gallery, showcases sophisticated powerful animints can .","code":""},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"datasets","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Datasets","title":"","text":"readers may want follow along interactively. animint2 R datasets may use. Access dataset list data(). Alternatively, may already dataset ’d like use experiment animint2. use custom dataset guide, ’ve named meowtrics. data dataset simulated, fancy way saying forced computer make . data ten different housecats ’re perceived time.’s glimpse:","code":"head(meowtrics) ##   Day        Cat Coolness Cuteness               Kind ## 1   1   Clifford     0.16     4.50 Domestic Shorthair ## 2   1    Junebug     0.36     3.70  Domestic Longhair ## 3   1     Muffin     0.41     0.47        Cornish Rex ## 4   1 Teddy Bear     0.47     5.10 Domestic Shorthair ## 5   1      Diana     0.61     9.60 Domestic Shorthair ## 6   1      Bello     0.71     1.90 Domestic Shorthair"},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"anatomy-of-a-data-visualization","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Anatomy of a Data Visualization","title":"","text":"Data visualizations commonplace, good reason. Large tables data difficult parse. good data visualization can illuminate patterns otherwise hard spot. contrast, poor (deliberately misleading) data visualization can obscure even obvious patterns. design good data visualizations avoiding bad ones? start understanding data visualizations made ’re arranged. arrangement often called grammar graphics.ii quick start guide won’t teach grammar, don’t need know get started animint2. know syntax animint2—, way code written—modelled grammar. Let’s see example. Say want visualize people rate cat cuteness time. want y-axis depict cuteness ratings, x-axis days. also want scatterplot. ? First, haven’t already, need install animint2: load animint2: Next, search functions ’ll need put together. First, need ggplot(), like blank sheet paper (computer screen) program draws make graph.iii make scatterplot, ’ll use either geom_point() geom_jitter(). Finally, axes, ’ll need aes(). name graph put together:  ’re unfamiliar syntax, code can get confusing.iv Let’s go code block line line: name data visualization. Since ’s scatterplot cat cuteness, name cute_plot. can name data visualizations whatever like, ’s best name something make sense future self. Next, call ggplot() function, since ’m making data visualization. call geom_point(), ’m making scatterplot. want use meowtrics dataset draw points scatterplot, set data = meowtrics. aes() controls aesthetics data visualization, including axes. place inside geom_point() tell program Day Cuteness variables x- y-axes, respectively. repeat name data visualization, tells program display graph. Look plot. can see ’s lot variance data, seems upward trend cat cuteness ratings. graph better. animint2 gives us tools improve . Take look slightly modified data visualization:  cat differentiated one another color, ’s now legend. Codewise, ’s changed? data visualization different name. two plots name, one override . ’ve added new arguments aes(): ’ve grouped points scatterplot cat, ’ve also differentiated cats’ data points color.v Using labs(), ’ve given graph title. new graph communicates information, ’s also somewhat overwhelming. move data way? compare subset cat cuteness ratings instead seeing everything ? Reader, good news.","code":"install.packages(\"animint2\") library(animint2) cute_plot <-                    #1   ggplot() +                    #2   geom_point(                   #3     data = meowtrics,           #4     aes(x = Day, y = Cuteness)) #5 cute_plot                       #6 cute_plot_colored <-                             #1   ggplot() +   geom_point(     data = meowtrics,     aes(x = Day, y = Cuteness,         group = Cat, color = Cat)) +             #2   labs(title = \"Cat Cuteness Ratings Over Time\") #3 cute_plot_colored"},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"making-animints","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Making Animints","title":"","text":"good news : animint2 makes easy render static data visualization interactive. Just use animint() function previous plot argument:  animint second static data visualization. clicking legend using selection menu, can control subjects data graphed, well many.vi allows explore data without needing facet possible cat combinations. exploratory data analysis, level control may need. cases, may want control. Say want emphasize Archibald Muffin’s cuteness ratings time. animint2, use first argument specify cats present:  useful situations ’re showcasing presenting animint. Pay attention syntax: first argument accepts list()s. specified cats must character vector. ’s ’re c() function.","code":"animint(cute_plot_colored) cute_present <-    animint(cute_plot_colored,            first = list( #1             Cat = c(    #2               \"Archibald\", \"Muffin\"))) cute_present"},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"using-showselected","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Using showSelected","title":"","text":"animint2 Firefox interact strangely. animints seem cause webpage scroll . get around , either: Click “Hide selection menus” button see present; Click “Show animation control” button hit pause. current animints use three variables: Day, Cuteness, Cat. want explore present fourth?vii static data visualization, require multiple graphs addition unwieldy third dimension. Luckily, animints subject restrictions. animint(), can use showSelected time arguments show Coolness Cuteness variables interact day--day. First, let’s look animint showSelected variable:  showSelected = \"Day\" lets adjust day selection menu. real-world datasets missing values. key accounts transitioning different days. can use selection menu see different associations cuteness coolness ratings per day.viii Next, let’s see animint time duration options applied:  duration specifies quickly points move old location new location.ix shorter duration, quicker movement. takes list uses milliseconds unit measurement. time also takes list. contrast duration, time = list(ms) specifies long points stay place. also uses milliseconds unit measurement. can also click “Show animation controls” button manually adjust time duration. Try .","code":"associations <-    ggplot() +   geom_point(     data = meowtrics,     showSelected = \"Day\",           #1     aes(x = Coolness, y = Cuteness,          color = Cat, group = Cat,          key = Cat)) +               #2   labs(title = \"Associations Between Cuteness and Coolness\") animint(associations) animated_associations <-    animint(associations,            duration = list(Day = 1000), #1           time = list(                 #2             variable = \"Day\",              ms = 1000))                #3 animated_associations"},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"using-clickselects","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Using clickSelects","title":"","text":"far, ’ve interacting animints clicking legend using selection menus animation controls. interact animint directly? Using clickSelects, can just . Let’s return data visualization depicting cuteness ratings time, time animint:  clickSelects takes variable quotations. variable clickSelects group : ’re Cat. Hover click data points. ’ll notice effect clicking legend: removes data animint. Now, let’s interact similar animint:  ’ve swapped Cat Kind. Now variables clickSelects group different. useful way adding another variable data visualizations. interact animint, ’ll notice three differences: Hover animints. , ’ll notice hover box appear. first animint, hover box repeats cat’s name. second, hover box describes kind cat . second animint, additional variable selection menu. can use highlight data points depicting certain kind cat. click data point, doesn’t disappear. Instead, like selection menu, highlights data points depicting certain kinds cats.","code":"cute_colored_again <-   ggplot() +   geom_point(     data = meowtrics,     clickSelects = \"Cat\", #1     aes(x = Day, y = Cuteness,         group = Cat, color = Cat)) animint(cute_colored_again) cute_plot_kind <-   ggplot() +   geom_point(     data = meowtrics,     clickSelects = \"Kind\", #1     aes(x = Day, y = Cuteness,         group = Cat, color = Cat)) animint(cute_plot_kind)"},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"linked-plots","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Linked Plots","title":"","text":"animint2 also allows us link multiple plots together one animint. two plots linked, change one plot can cause changes another. Let’s return two interactive data visualizations ’ve already looked : associations coolness cuteness, cuteness ratings time. ’s first data visualization , lightly altered: want link plot cuteness ratings time. way, can see coolness ratings change time, . linking process little involved usual:  ’m taking Day column meowtrics (meowtrics$Day), stripping redundant days viaunique(), renaming , making data.frame(). Now dataframe 30 days meowtrics. geom_tallrect(), ’ll use later. take associations_2 make animint. duration controls long takes data points move one part animint another. mentioned, ’s optional. take previously-created animint attach new animints . name list animint overtime. geom_tallrect() function. creates vertical bar allows manipulate time variables clicking plot. geom_tallrect() requires new dataset contains time variable. ’s using dataset constructed earlier. xmin xmax control wide tallrect , affects appearance selected time variable. case, controls much day takes tallrect. clickSelects necessary , since need able select day plot. alpha controls transparency tallrect. Lower numbers increase transparency. Using +, attach tallrect plot cuteness ratings time. ’re back using meowtrics dataset. Finally, intitate animint. Try . adjust day bottom plot, top plot also readjusts. click legend top plot, bottom plot also affected. linked plots can get much complex. examples, see animint gallery.","code":"associations_again <-   ggplot() +   geom_point(     data = meowtrics,     showSelected = \"Day\",     clickSelects = \"Kind\",     aes(x = Coolness, y = Cuteness,         color = Cat, group = Cat,         key = Cat)) md <- data.frame(Day = unique(meowtrics$Day))  #1  linked <- animint(associations_again,          #2                   duration = list(Day = 1000)) #3  linked$overtime <-                             #4   ggplot() +    geom_tallrect(                               #5     data = md,                                 #6     aes(xmin = Day-0.5, xmax = Day+0.5),       #7     clickSelects = \"Day\",                      #8     alpha = 0.5                                #9     ) +                                        #10   geom_point(     data = meowtrics,                          #11     clickSelects = \"Cat\",     aes(x = Day, y = Cuteness,          group = Cat, color = Cat)) linked                                         #12"},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"conclusion","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Conclusion","title":"","text":"’s . ’re now reasonably competent animint2 user. like learn , please read animint2 Manual—especially chapters 1 4, go material greater depth. Feel free post questions GitHub issues. Thanks reading!","code":""},{"path":"https://animint.github.io/animint2/articles/animint2.html","id":"footnotes","dir":"Articles","previous_headings":"Animint2 Quick Start Guide","what":"Footnotes","title":"","text":"Fun science fact: Cats objectively best animal. ’re interested learning grammar want get right primary source, see Leland Wilkinson’s Grammar Graphics. data visualizations use ggplot(). Notice also ggplot() geom_point() functions held together + symbol. words: begin blank data visualization add scatterplot atop . functions animint2 held together +. ’ll using lot. ’s possible differentiate data points different manner. example, instead different colors, used different shapes. Play around animint. See can can’t interact . Recall meowtrics dataset Coolness variable haven’t looked yet. Play around see can . Fun fact: duration argument optional. decide use duration set 0 milliseconds, points teleport one location another.","code":""},{"path":"https://animint.github.io/animint2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Toby Hocking. Author, maintainer.           Original animint code Hadley Wickham. Author.           Forked ggplot2 code Winston Chang. Author.           Forked ggplot2 code RStudio. Copyright holder.           Forked ggplot2 code Nicholas Lewin-Koh. Author.           hexGrob Martin Maechler. Author.           hexGrob Randall Prium. Author.           cut_width Susan VanderPlas. Author.           Animint GSOC 2013 Carson Sievert. Author.           Animint GSOC 2014 Kevin Ferris. Author.           Animint GSOC 2015 Jun Cai. Author.           Animint GSOC 2015 Faizan Khan. Author.           Animint GSOC 2016-2017 Vivek Kumar. Author.           Animint GSOC 2018 Himanshu Singh. Author.           Animint2 GSoC 2020 Yufan Fei. Author.           Animint2 GSoC 2022 Jocelyne Chen. Author.           Animint2 GSoC 2023 Siddhesh Deodhar. Author.           Animint2 GSoC 2024 Biplab Sutradhar. Contributor.           bug fixer: id issue","code":""},{"path":"https://animint.github.io/animint2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hocking T, Wickham H, Chang W, Lewin-Koh N, Maechler M, Prium R, VanderPlas S, Sievert C, Ferris K, Cai J, Khan F, Kumar V, Singh H, Fei Y, Chen J, Deodhar S (2024). animint2: Animated Interactive Grammar Graphics. R package version 2024.10.11, https://animint.github.io/animint2/.","code":"@Manual{,   title = {animint2: Animated Interactive Grammar of Graphics},   author = {Toby Hocking and Hadley Wickham and Winston Chang and Nicholas Lewin-Koh and Martin Maechler and Randall Prium and Susan VanderPlas and Carson Sievert and Kevin Ferris and Jun Cai and Faizan Khan and Vivek Kumar and Himanshu Singh and Yufan Fei and Jocelyne Chen and Siddhesh Deodhar},   year = {2024},   note = {R package version 2024.10.11},   url = {https://animint.github.io/animint2/}, }"},{"path":[]},{"path":"https://animint.github.io/animint2/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Animated Interactive Grammar of Graphics","text":"Animint2 R package generating sharing animated interactive data visualizations, sometimes referred animints. fork , uses similar syntax , ggplot2. Animint2 especially useful large datasets, smaller datasets can made interactive, . also capable generating static data visualizations.  Play around interactive data visualization data World Bank. examples, see galleries, screenshots along links interactive data viz, source code: * NAU rcdata animint gallery 50+ big data viz examples dating back animint’s inception 2014. * GitHub Pages animint gallery newer collection animints published using animint2pages function. learn generate interactive data visualizations, go official Animint2 Manual. encounter problems, please see animint2 wiki report .","code":""},{"path":"https://animint.github.io/animint2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Animated Interactive Grammar of Graphics","text":"","code":"# Install the official package from CRAN. # This is the option most people should choose: install.packages(\"animint2\")  # If you want to install the development version: devtools::install_github(\"animint/animint2\")"},{"path":"https://animint.github.io/animint2/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Animated Interactive Grammar of Graphics","text":"Animint2 uses implementation ggplot2’s grammar graphics—additions. ’re familiar ggplot2, using animint2 easy. ’re , worries. get started, see brief Animint2 Quick Start Guide read first chapters Animint2 Manual. animint2 renders animates data visualizations. can neither manipulate datasets give generate data.","code":""},{"path":"https://animint.github.io/animint2/index.html","id":"similar-packages","dir":"","previous_headings":"","what":"Similar Packages","title":"Animated Interactive Grammar of Graphics","text":"animint2 isn’t R package can create animated interactive data visualizations. animation gganimate can animate changes variables time. loon package specializes exploratory data analysis. plotly probably similar animint2 terms functionality. comparisons aforementioned packages animint2, see differences wiki page.","code":""},{"path":"https://animint.github.io/animint2/index.html","id":"problems","dir":"","previous_headings":"","what":"Problems?","title":"Animated Interactive Grammar of Graphics","text":"animint2 package work progress. spot bugs unexpected behaviors, please let us know reporting issue GitHub. Thanks! great day.","code":""},{"path":"https://animint.github.io/animint2/index.html","id":"other-galleries","dir":"","previous_headings":"","what":"Other galleries","title":"Animated Interactive Grammar of Graphics","text":"Vatsal-Rajput created small gallery different index.Rmd file. nhintruong created gallery several example adapted animation package, like wiki page.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/readme_website.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Maintaining & Debugging the Animint2 Website","text":"First written 2023-06-28. Last revised 2023-08-22. internal document intended animint2 contributors. explains maintain debug animint2 reference website gives reasons might need . Feel free add edit document. Maintaining site neither hard annoying, ’s also automatic. time, can leave website alone. circumstances need maintain update website: added new function animint2. ’re getting errors GitHub access token PAT. made changes quick start guide. wanna change reference website’s URL. wanna change reference website’s typeface font. website messed stopped working way. made changes file animint2 repository effect website. Examples include NEWS.md, _pkgdown.yml, pkgdown/extra.css.","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"have-you-tried-re-building-it","dir":"","previous_headings":"","what":"Have You Tried Re-Building It?","title":"Maintaining & Debugging the Animint2 Website","text":"can solve lot maintenance problems running following: takes minutes re-builds site. push changes animint2 repository. lot problems, ’s . (substantial) changes aren’t showing , doesn’t fix bug, ’ll need read .","code":"cd whatever/your/path/is/animint/animint2 pkgdown::build_site()"},{"path":"https://animint.github.io/animint2/readme_website.html","id":"adding-a-function","dir":"","previous_headings":"","what":"Adding a Function","title":"Maintaining & Debugging the Animint2 Website","text":"added new function animint2 package. Congratulations! probably lot work. now need show website. process straightforward. First, everything “Tried Re-Building ?” section. new function starts “animint,” “make,” “get,” new function appear website. work needed. doesn’t, probably doesn’t start prefixes, ’ll work. First, open _pkgdown.yml, scroll references:, find section new function categorized. guess ’d fall ’d know best. Next, slot - contents:. run code “Tried Re-Building ?” section push changes animint2 repo.","code":"- subtitle: \"Animint Helpers\""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"refreshing-the-github-access-token","dir":"","previous_headings":"","what":"Refreshing the GitHub Access Token","title":"Maintaining & Debugging the Animint2 Website","text":"’re getting errors GitHub access tokens PATs, means either expired, changed, destroyed, run follow instructions.","code":"cd whatever/your/path/is/animint/animint2 usethis::create_github_token() gitcreds::gitcreds_set()"},{"path":"https://animint.github.io/animint2/readme_website.html","id":"changes-to-the-quick-start-guide","dir":"","previous_headings":"","what":"Changes to the Quick Start Guide","title":"Maintaining & Debugging the Animint2 Website","text":"First, everything “Tried Re-Building ?” section. new content hasn’t added, ’s probably used animint2, renders animints vignettes/ instead docs/. ’ll need cut/paste rendered directories drop docs/articles/. run code “Tried Re-Building ?” section push changes animint2 repo. might possible use animint2::animint2dir() automate . Unfortunately, haven’t figured way use way ’s elegant maintainable cut/paste solution. figure , feel free implement .","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"changes-to-the-url","dir":"","previous_headings":"","what":"Changes to the URL","title":"Maintaining & Debugging the Animint2 Website","text":"wanna change URL: go _pkgdown.yml, edit url: add another, everything “Tried Re-Building ?” section.","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"changes-to-the-typeface-or-font","dir":"","previous_headings":"","what":"Changes to the Typeface or Font","title":"Maintaining & Debugging the Animint2 Website","text":"wanna change typeface (often referred font): go _pkgdown.yml, bslib:. ’ll see: base_font, controls default typeface, heading_font, controls typeface titles headings, code_font, controls font codeblocks -line code. Swap current font ones choice, everything “Tried Re-Building ?” section.","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"the-website-is-messed-up","dir":"","previous_headings":"","what":"The Website is Messed Up","title":"Maintaining & Debugging the Animint2 Website","text":"website messed pushed commits animint2 repository? Revert commits git revert $SHA something. debug find happened. website messed cuz changes made via GitHub API via GitHub website, ’ll need figure exactly changed ’s affect website. Good luck.","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"changes-to-other-animint2-files","dir":"","previous_headings":"","what":"Changes to Other Animint2 Files","title":"Maintaining & Debugging the Animint2 Website","text":"change repository meant affect animint2’s CRAN page, ’ll also need update website, . everything “Tried Re-Building ?” section. changes repository meant affect animint2’s reference website. ’s case, everything “Tried Re-Building ?” section.","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"why-dont-you-just-use-github-actions","dir":"","previous_headings":"","what":"Why Don’t You Just Use GitHub Actions?","title":"Maintaining & Debugging the Animint2 Website","text":"Using GitHub Actions automate many parts maintaining site, though ’d leave parts untouched (e.g. refreshing access token). main reason haven’t done cuz dunno ! Feel free set site via GitHub Actions. ’d great.","code":""},{"path":"https://animint.github.io/animint2/readme_website.html","id":"see-also","dir":"","previous_headings":"","what":"See Also","title":"Maintaining & Debugging the Animint2 Website","text":"Documentation may helpful: Managing GitHub Credentials pkgdown Documentation Information usethis::use_pkgdown GitHub-flavored Markdown Specification","code":""},{"path":"https://animint.github.io/animint2/reference/ChromHMMiterations.html","id":null,"dir":"Reference","previous_headings":"","what":"ChromHMM iterations — ChromHMMiterations","title":"ChromHMM iterations — ChromHMMiterations","text":"ChromHMM run one iPS sample 100 iterations   convergence metrics parameter values saved   iteration.","code":""},{"path":"https://animint.github.io/animint2/reference/ChromHMMiterations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChromHMM iterations — ChromHMMiterations","text":"","code":"data(\"ChromHMMiterations\")"},{"path":"https://animint.github.io/animint2/reference/ChromHMMiterations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ChromHMM iterations — ChromHMMiterations","text":"Named list 3 data.frames: metrics, transition, emission.","code":""},{"path":"https://animint.github.io/animint2/reference/ChromHMMiterations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"ChromHMM iterations — ChromHMMiterations","text":"https://github.com/tdhock/ChromHMM-viz/blob/master/iterations.R","code":""},{"path":"https://animint.github.io/animint2/reference/FluView.html","id":null,"dir":"Reference","previous_headings":"","what":"FluView — FluView","title":"FluView — FluView","text":"Data Flu outbreaks.","code":""},{"path":"https://animint.github.io/animint2/reference/FluView.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FluView — FluView","text":"","code":"data(\"FluView\")"},{"path":"https://animint.github.io/animint2/reference/FluView.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FluView — FluView","text":"format named list two data.frames.","code":""},{"path":"https://animint.github.io/animint2/reference/FunctionalPruning.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Pruning Algorithm — FunctionalPruning","title":"Functional Pruning Algorithm — FunctionalPruning","text":"Output algorithm optimal change-point detection.","code":""},{"path":"https://animint.github.io/animint2/reference/FunctionalPruning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Pruning Algorithm — FunctionalPruning","text":"","code":"data(\"FunctionalPruning\")"},{"path":"https://animint.github.io/animint2/reference/FunctionalPruning.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Functional Pruning Algorithm — FunctionalPruning","text":"named list 4 data.frames","code":""},{"path":"https://animint.github.io/animint2/reference/FunctionalPruning.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Functional Pruning Algorithm — FunctionalPruning","text":"https://github.com/tdhock/PeakSegFPOP-paper/blob/master/figure-constrained-PDPA-normal-real.R","code":""},{"path":"https://animint.github.io/animint2/reference/PeakConsistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Consistency of segmentation models in simulated Poisson peaks — PeakConsistency","title":"Consistency of segmentation models in simulated Poisson peaks — PeakConsistency","text":"4 seed ten samples, sequence noisy Poisson data   generated, PeakSeg PeakSegJoint used detect   peak.","code":""},{"path":"https://animint.github.io/animint2/reference/PeakConsistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consistency of segmentation models in simulated Poisson peaks — PeakConsistency","text":"","code":"data(\"PeakConsistency\")"},{"path":"https://animint.github.io/animint2/reference/PeakConsistency.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Consistency of segmentation models in simulated Poisson peaks — PeakConsistency","text":"list four data.frames: model, truth, signal, guess.","code":""},{"path":"https://animint.github.io/animint2/reference/PeakConsistency.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Consistency of segmentation models in simulated Poisson peaks — PeakConsistency","text":"https://github.com/tdhock/PeakSegJoint-paper/blob/master/figure-consistency.R","code":""},{"path":"https://animint.github.io/animint2/reference/TestROC.html","id":null,"dir":"Reference","previous_headings":"","what":"Test ROC curves — TestROC","title":"Test ROC curves — TestROC","text":"Five peak detection models evaluated.","code":""},{"path":"https://animint.github.io/animint2/reference/TestROC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test ROC curves — TestROC","text":"","code":"data(\"TestROC\")"},{"path":"https://animint.github.io/animint2/reference/TestROC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test ROC curves — TestROC","text":"list two data frames.","code":""},{"path":"https://animint.github.io/animint2/reference/TestROC.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test ROC curves — TestROC","text":"https://bitbucket.org/mugqic/chip-seq-paper/src/master/figure-roc-test.R","code":""},{"path":"https://animint.github.io/animint2/reference/UStornadoes.html","id":null,"dir":"Reference","previous_headings":"","what":"Tornadoes in the United States from 1950 to 2012 — UStornadoes","title":"Tornadoes in the United States from 1950 to 2012 — UStornadoes","text":"row documents 1 tornado.","code":""},{"path":"https://animint.github.io/animint2/reference/UStornadoes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tornadoes in the United States from 1950 to 2012 — UStornadoes","text":"","code":"data(UStornadoes)"},{"path":"https://animint.github.io/animint2/reference/UStornadoes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tornadoes in the United States from 1950 to 2012 — UStornadoes","text":"data frame 41620 observations following 32 variables. fips numeric vector ID numeric vector year numeric vector month numeric vector day numeric vector date factor time numeric vector tz numeric vector state factor state.tnum numeric vector f numeric vector injuries numeric vector fatalities numeric vector propertyLoss numeric vector cropLoss numeric vector startLat numeric vector startLong numeric vector endLat numeric vector endLong numeric vector trackLength numeric vector trackWidth numeric vector numStatesAffected numeric vector stateNumber numeric vector segmentNumber numeric vector FipsCounty1 numeric vector FipsCounty2 numeric vector FipsCounty3 numeric vector FipsCounty4 numeric vector TotalPop2012 numeric vector LandArea numeric vector TornadoesSqMile numeric vector weight numeric vector","code":""},{"path":"https://animint.github.io/animint2/reference/UStornadoes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tornadoes in the United States from 1950 to 2012 — UStornadoes","text":"NOAA SVRGIS data (Severe Report Database + Geographic Information System) http://www.spc.noaa.gov/gis/svrgis/","code":""},{"path":"https://animint.github.io/animint2/reference/VariantModels.html","id":null,"dir":"Reference","previous_headings":"","what":"Error rates of supervised learning methods for variant calling — VariantModels","title":"Error rates of supervised learning methods for variant calling — VariantModels","text":"Several supervised machine learning models applied binary   classification task predicting True Positive False Positive   variants, using several filtering scores input.","code":""},{"path":"https://animint.github.io/animint2/reference/VariantModels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error rates of supervised learning methods for variant calling — VariantModels","text":"","code":"data(\"VariantModels\")"},{"path":"https://animint.github.io/animint2/reference/VariantModels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Error rates of supervised learning methods for variant calling — VariantModels","text":"List 6 data.frames: roc, auc, error, ranks, thresholds, minima.","code":""},{"path":"https://animint.github.io/animint2/reference/VariantModels.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Error rates of supervised learning methods for variant calling — VariantModels","text":"https://github.com/tdhock/malaria-evolution-viz/blob/master/figure-folds.R","code":""},{"path":"https://animint.github.io/animint2/reference/WorldBank.html","id":null,"dir":"Reference","previous_headings":"","what":"Demographics by country from 1960 to 2012 — WorldBank","title":"Demographics by country from 1960 to 2012 — WorldBank","text":"row one year demographics one country.","code":""},{"path":"https://animint.github.io/animint2/reference/WorldBank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demographics by country from 1960 to 2012 — WorldBank","text":"","code":"data(WorldBank)"},{"path":"https://animint.github.io/animint2/reference/WorldBank.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Demographics by country from 1960 to 2012 — WorldBank","text":"data frame 11342 observations following 15 variables. iso2c character vector country character vector year numeric vector fertility.rate numeric vector life.expectancy numeric vector population numeric vector GDP.per.capita.Current.USD numeric vector 15..25.yr.female.literacy numeric vector iso3c factor region factor capital factor longitude factor latitude factor income factor lending factor","code":""},{"path":"https://animint.github.io/animint2/reference/WorldBank.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Demographics by country from 1960 to 2012 — WorldBank","text":"Copied googleVis package.","code":""},{"path":"https://animint.github.io/animint2/reference/absoluteGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute grob — absoluteGrob","title":"Absolute grob — absoluteGrob","text":"grob fixed dimensions position.","code":""},{"path":"https://animint.github.io/animint2/reference/absoluteGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute grob — absoluteGrob","text":"","code":"absoluteGrob(   grob,   width = NULL,   height = NULL,   xmin = NULL,   ymin = NULL,   vp = NULL )"},{"path":"https://animint.github.io/animint2/reference/absoluteGrob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Absolute grob — absoluteGrob","text":"still experimental","code":""},{"path":"https://animint.github.io/animint2/reference/addSSandCSasAesthetics.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the showSelected/clickSelects params to the aesthetics mapping — addSSandCSasAesthetics","title":"Add the showSelected/clickSelects params to the aesthetics mapping — addSSandCSasAesthetics","text":"Add showSelected/clickSelects params aesthetics mapping","code":""},{"path":"https://animint.github.io/animint2/reference/addSSandCSasAesthetics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the showSelected/clickSelects params to the aesthetics mapping — addSSandCSasAesthetics","text":"","code":"addSSandCSasAesthetics(aesthetics, extra_params)"},{"path":"https://animint.github.io/animint2/reference/addSSandCSasAesthetics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the showSelected/clickSelects params to the aesthetics mapping — addSSandCSasAesthetics","text":"aesthetics list. Original aesthetics mapping layer extra_params named list containing details showSelected clickSelects values layer","code":""},{"path":"https://animint.github.io/animint2/reference/addSSandCSasAesthetics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the showSelected/clickSelects params to the aesthetics mapping — addSSandCSasAesthetics","text":"Modified aesthetics list showSelected/clickSelects params added","code":""},{"path":"https://animint.github.io/animint2/reference/addSSandCSasAesthetics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add the showSelected/clickSelects params to the aesthetics mapping — addSSandCSasAesthetics","text":"Used calling ggplot_build parsePlot checking animint extensions raise error","code":""},{"path":"https://animint.github.io/animint2/reference/addShowSelectedForLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a showSelected aesthetic if legend is specified — addShowSelectedForLegend","title":"Add a showSelected aesthetic if legend is specified — addShowSelectedForLegend","text":"Add showSelected aesthetic legend specified","code":""},{"path":"https://animint.github.io/animint2/reference/addShowSelectedForLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a showSelected aesthetic if legend is specified — addShowSelectedForLegend","text":"","code":"addShowSelectedForLegend(meta, legend, L)"},{"path":"https://animint.github.io/animint2/reference/addShowSelectedForLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a showSelected aesthetic if legend is specified — addShowSelectedForLegend","text":"meta meta object information legend legend scan showSelected L layer plot","code":""},{"path":"https://animint.github.io/animint2/reference/addShowSelectedForLegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a showSelected aesthetic if legend is specified — addShowSelectedForLegend","text":"L : Layer additional mapping new aesthetic","code":""},{"path":"https://animint.github.io/animint2/reference/add_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify properties of an element in a theme object — add_theme","title":"Modify properties of an element in a theme object — add_theme","text":"Modify properties element theme object","code":""},{"path":"https://animint.github.io/animint2/reference/add_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify properties of an element in a theme object — add_theme","text":"","code":"add_theme(t1, t2, t2name)"},{"path":"https://animint.github.io/animint2/reference/add_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify properties of an element in a theme object — add_theme","text":"t1 theme object t2 theme object added t1 t2name name t2 object. used printing informative error messages.","code":""},{"path":"https://animint.github.io/animint2/reference/aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Define aesthetic mappings. — aes","title":"Define aesthetic mappings. — aes","text":"Generate aesthetic mappings describe variables data mapped visual properties (aesthetics) geoms. function also standardise aesthetic names performs partial name matching, converting color colour, old style R names ggplot names (eg. pch shape, cex size)","code":""},{"path":"https://animint.github.io/animint2/reference/aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define aesthetic mappings. — aes","text":"","code":"aes(x, y, ...)"},{"path":"https://animint.github.io/animint2/reference/aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define aesthetic mappings. — aes","text":"x, y, ... List name value pairs giving aesthetics map variables. names x y aesthetics can omitted (common); aesthetics must named.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/aes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define aesthetic mappings. — aes","text":"","code":"aes(x = mpg, y = wt) #> * x -> mpg #> * y -> wt aes(mpg, wt) #> * x -> mpg #> * y -> wt  # You can also map aesthetics to functions of variables aes(x = mpg ^ 2, y = wt / cyl) #> * x -> mpg^2 #> * y -> wt/cyl  # Aesthetic names are automatically standardised aes(col = x) #> * colour -> x aes(fg = x) #> * colour -> x aes(color = x) #> * colour -> x aes(colour = x) #> * colour -> x  # aes is almost always used with ggplot() or a layer ggplot(mpg, aes(displ, hwy)) + geom_point()  ggplot(mpg) + geom_point(aes(displ, hwy))   # Aesthetics supplied to ggplot() are used as defaults for every layer # you can override them, or supply different aesthetics for each layer"},{"path":"https://animint.github.io/animint2/reference/aes_.html","id":null,"dir":"Reference","previous_headings":"","what":"Define aesthetic mappings from strings, or quoted calls and formulas. — aes_","title":"Define aesthetic mappings from strings, or quoted calls and formulas. — aes_","text":"Aesthetic mappings describe variables data mapped visual properties (aesthetics) geoms. aes uses non-standard evaluation capture variable names. aes_ aes_string require explicitly quote inputs either \"\" aes_string(), quote ~ aes_(). (aes_q alias aes_)","code":""},{"path":"https://animint.github.io/animint2/reference/aes_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define aesthetic mappings from strings, or quoted calls and formulas. — aes_","text":"","code":"aes_(x, y, ...)  aes_string(x, y, ...)  aes_q(x, y, ...)"},{"path":"https://animint.github.io/animint2/reference/aes_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define aesthetic mappings from strings, or quoted calls and formulas. — aes_","text":"x, y, ... List name value pairs. Elements must either quoted calls, strings, one-sided formulas constants.","code":""},{"path":"https://animint.github.io/animint2/reference/aes_.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define aesthetic mappings from strings, or quoted calls and formulas. — aes_","text":"better use aes_q(), easy way create equivalent aes(colour = \"colour\") aes{x = `X$1`} aes_string(). aes_string aes_ particularly useful writing functions create plots can use strings quoted names/calls define aesthetic mappings, rather use substitute generate call aes().","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/aes_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define aesthetic mappings from strings, or quoted calls and formulas. — aes_","text":"","code":"# Three ways of generating the same aesthetics aes(mpg, wt, col = cyl) #> * x      -> mpg #> * y      -> wt #> * colour -> cyl aes_(quote(mpg), quote(wt), col = quote(cyl)) #> * colour -> cyl #> * x      -> mpg #> * y      -> wt aes_(~mpg, ~wt, col = ~cyl) #> * colour -> cyl #> * x      -> mpg #> * y      -> wt aes_string(\"mpg\", \"wt\", col = \"cyl\") #> * colour -> cyl #> * x      -> mpg #> * y      -> wt  # You can't easily mimic these calls with aes_string aes(`$100`, colour = \"smooth\") #> * x      -> `$100` #> * colour -> \"smooth\" aes_(~ `$100`, colour = \"smooth\") #> * colour -> \"smooth\" #> * x      -> `$100` # Ok, you can, but it requires a _lot_ of quotes aes_string(\"`$100`\", colour = '\"smooth\"') #> * colour -> \"smooth\" #> * x      -> `$100`  # Convert strings to names with as.name var <- \"cyl\" aes(col = x) #> * colour -> x aes_(col = as.name(var)) #> * colour -> cyl"},{"path":"https://animint.github.io/animint2/reference/aes_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a character vector, create a set of identity mappings — aes_all","title":"Given a character vector, create a set of identity mappings — aes_all","text":"Given character vector, create set identity mappings","code":""},{"path":"https://animint.github.io/animint2/reference/aes_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a character vector, create a set of identity mappings — aes_all","text":"","code":"aes_all(vars)"},{"path":"https://animint.github.io/animint2/reference/aes_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a character vector, create a set of identity mappings — aes_all","text":"vars vector variable names","code":""},{"path":"https://animint.github.io/animint2/reference/aes_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given a character vector, create a set of identity mappings — aes_all","text":"","code":"aes_all(names(mtcars)) #> * mpg  -> mpg #> * cyl  -> cyl #> * disp -> disp #> * hp   -> hp #> * drat -> drat #> * wt   -> wt #> * qsec -> qsec #> * vs   -> vs #> * am   -> am #> * gear -> gear #> * carb -> carb aes_all(c(\"x\", \"y\", \"col\", \"pch\")) #> * x      -> x #> * y      -> y #> * colour -> col #> * shape  -> pch"},{"path":"https://animint.github.io/animint2/reference/aes_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic aesthetic mapping — aes_auto","title":"Automatic aesthetic mapping — aes_auto","text":"Automatic aesthetic mapping","code":""},{"path":"https://animint.github.io/animint2/reference/aes_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic aesthetic mapping — aes_auto","text":"","code":"aes_auto(data = NULL, ...)"},{"path":"https://animint.github.io/animint2/reference/aes_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic aesthetic mapping — aes_auto","text":"data data.frame names variables ... aesthetics need explicitly mapped.","code":""},{"path":"https://animint.github.io/animint2/reference/aes_colour_fill_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Colour related aesthetics: colour, fill and alpha — aes_colour_fill_alpha","title":"Colour related aesthetics: colour, fill and alpha — aes_colour_fill_alpha","text":"page demonstrates usage sub-group aesthetics; colour, fill alpha.","code":""},{"path":"https://animint.github.io/animint2/reference/aes_colour_fill_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colour related aesthetics: colour, fill and alpha — aes_colour_fill_alpha","text":"","code":"# \\donttest{  # Bar chart example c <- ggplot(mtcars, aes(factor(cyl))) # Default plotting c + geom_bar()  # To change the interior colouring use fill aesthetic c + geom_bar(fill = \"red\")  # Compare with the colour aesthetic which changes just the bar outline c + geom_bar(colour = \"red\")  # Combining both, you can see the changes more clearly c + geom_bar(fill = \"white\", colour = \"red\")   # The aesthetic fill also takes different colouring scales # setting fill equal to a factor variable uses a discrete colour scale k <- ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) k + geom_bar()   # Fill aesthetic can also be used with a continuous variable m <- ggplot(faithfuld, aes(waiting, eruptions)) m + geom_raster()  m + geom_raster(aes(fill = density))   # Some geoms don't use both aesthetics (i.e. geom_point or geom_line) b <- ggplot(economics, aes(x = date, y = unemploy)) b + geom_line()  b + geom_line(colour = \"green\")  b + geom_point()  b + geom_point(colour = \"red\")   # For large datasets with overplotting the alpha # aesthetic will make the points more transparent df <- data.frame(x = rnorm(5000), y = rnorm(5000)) h  <- ggplot(df, aes(x,y)) h + geom_point()  h + geom_point(alpha = 0.5)  h + geom_point(alpha = 1/10)   # Alpha can also be used to add shading j <- b + geom_line() j  yrng <- range(economics$unemploy) j <- j + geom_rect(aes(NULL, NULL, xmin = start, xmax = end, fill = party), ymin = yrng[1], ymax = yrng[2], data = presidential) j  j + scale_fill_manual(values = alpha(c(\"blue\", \"red\"), .3))  # }"},{"path":"https://animint.github.io/animint2/reference/aes_linetype_size_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Differentiation related aesthetics: linetype, size, shape — aes_linetype_size_shape","title":"Differentiation related aesthetics: linetype, size, shape — aes_linetype_size_shape","text":"page demonstrates usage sub-group aesthetics; linetype, size shape.","code":""},{"path":"https://animint.github.io/animint2/reference/aes_linetype_size_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differentiation related aesthetics: linetype, size, shape — aes_linetype_size_shape","text":"","code":"# Line types should be specified with either an integer, a name, or with a string of # an even number (up to eight) of hexadecimal digits which give the lengths in # consecutive positions in the string. # 0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash  # Data df <- data.frame(x = 1:10 , y = 1:10) f <- ggplot(df, aes(x, y)) f + geom_line(linetype = 2)  f + geom_line(linetype = \"dotdash\")   # An example with hex strings, the string \"33\" specifies three units on followed # by three off and \"3313\" specifies three units on followed by three off followed # by one on and finally three off. f + geom_line(linetype = \"3313\")   # Mapping line type from a variable ggplot(economics_long, aes(date, value01)) +   geom_line(aes(linetype = variable))   # Size examples # Should be specified with a numerical value (in millimetres), # or from a variable source p <- ggplot(mtcars, aes(wt, mpg)) p + geom_point(size = 4)  p + geom_point(aes(size = qsec))  p + geom_point(size = 2.5) +   geom_hline(yintercept = 25, size = 3.5)   # Shape examples # Shape takes four types of values: an integer in [0, 25], # a single character-- which uses that character as the plotting symbol, # a . to draw the smallest rectangle that is visible (i.e., about one pixel) # an NA to draw nothing p + geom_point()  p + geom_point(shape = 5)  p + geom_point(shape = \"k\", size = 3)  p + geom_point(shape = \".\")  p + geom_point(shape = NA) #> Warning: Removed 32 rows containing missing values (geom_point).   # Shape can also be mapped from a variable p + geom_point(aes(shape = factor(cyl)))   # A look at all 25 symbols df2 <- data.frame(x = 1:5 , y = 1:25, z = 1:25) s <- ggplot(df2, aes(x, y)) s + geom_point(aes(shape = z), size = 4) +   scale_shape_identity()  # While all symbols have a foreground colour, symbols 19-25 also take a # background colour (fill) s + geom_point(aes(shape = z), size = 4, colour = \"Red\") +   scale_shape_identity()  s + geom_point(aes(shape = z), size = 4, colour = \"Red\", fill = \"Black\") +   scale_shape_identity()"},{"path":"https://animint.github.io/animint2/reference/aes_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Position related aesthetics: x, y, xmin, xmax, ymin, ymax, xend, yend — aes_position","title":"Position related aesthetics: x, y, xmin, xmax, ymin, ymax, xend, yend — aes_position","text":"page demonstrates usage sub-group aesthetics; x, y, xmin, xmax, ymin, ymax, xend, yend.","code":""},{"path":"https://animint.github.io/animint2/reference/aes_position.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position related aesthetics: x, y, xmin, xmax, ymin, ymax, xend, yend — aes_position","text":"","code":"# Generate data: means and standard errors of means for prices # for each type of cut dmod <- lm(price ~ cut, data = diamonds) cuts <- data.frame(cut = unique(diamonds$cut), predict(dmod, data.frame(cut = unique(diamonds$cut)), se = TRUE)[c(\"fit\", \"se.fit\")]) se <- ggplot(cuts, aes(x = cut, y = fit, ymin = fit - se.fit, ymax = fit + se.fit, colour = cut)) se + geom_pointrange()   # Using annotate p <- ggplot(mtcars, aes(wt, mpg)) + geom_point() p + annotate(\"rect\", xmin = 2, xmax = 3.5, ymin = 2, ymax = 25,   fill = \"dark grey\", alpha = .5)   # Geom_segment examples p + geom_segment(aes(x = 2, y = 15, xend = 2, yend = 25),   arrow = arrow(length = unit(0.5, \"cm\")))  p + geom_segment(aes(x = 2, y = 15, xend = 3, yend = 15),   arrow = arrow(length = unit(0.5, \"cm\")))  p + geom_segment(aes(x = 5, y = 30, xend = 3.5, yend = 25),   arrow = arrow(length = unit(0.5, \"cm\")))   # You can also use geom_segment to recreate plot(type = \"h\") : counts <- as.data.frame(table(x = rpois(100, 5))) counts$x <- as.numeric(as.character(counts$x)) with(counts, plot(x, Freq, type = \"h\", lwd = 10))   ggplot(counts, aes(x, Freq)) +   geom_segment(aes(yend = 0, xend = x), size = 10)"},{"path":"https://animint.github.io/animint2/reference/animint.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an animint — animint","title":"Create an animint — animint","text":"Create animated, interactive data visualization. easiest way get started reading Animint2 Manual, https://rcdata.nau.edu/genomic-ml/animint2-manual/Ch02-ggplot2.html","code":""},{"path":"https://animint.github.io/animint2/reference/animint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an animint — animint","text":"","code":"animint(...)"},{"path":"https://animint.github.io/animint2/reference/animint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an animint — animint","text":"... ggplots options","code":""},{"path":"https://animint.github.io/animint2/reference/animint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an animint — animint","text":"list class animint","code":""},{"path":"https://animint.github.io/animint2/reference/animint.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an animint — animint","text":"function creates list items ...   attaches animint class. also provides default names   un-named ggplots. list contain ggplots   options. geom can made interactive using   showSelected clickSelects parameters;   character vector selection variable names. example   geom_line(clickSelects=\"country\") means clicking line   changes value \"country\" selection variable;   geom_point(showSelected=\"year\") means show subset   data currently selected year.","code":""},{"path":"https://animint.github.io/animint2/reference/animint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an animint — animint","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/animint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an animint — animint","text":"","code":"if(require('data.table'))setDTthreads(1)#for CRAN. #> Loading required package: data.table library(animint2) data(WorldBank, package=\"animint2\") years <- unique(WorldBank[, \"year\", drop=FALSE]) y1960 <- subset(WorldBank, year==1960) animint(   title=\"Linked scatterplot and time series\", #web page title.   time=list(variable=\"year\",ms=3000), #variable and time delay used for animation.   duration=list(year=1000), #smooth transition duration in milliseconds.   selector.types=list(country=\"multiple\"), #single/multiple selection for each variable.   first=list( #selected values to show when viz is first rendered.     country=c(\"Canada\", \"Japan\"),     year=1970),   ## ggplots are rendered together for an interactive data viz.   ts=ggplot()+     theme_animint(width=500)+     make_tallrect(WorldBank, \"year\")+     geom_text(aes(       year, life.expectancy, label=country),       showSelected=\"country\",       clickSelects=\"country\",       hjust=1,       data=y1960)+     scale_x_continuous(limits=c(1950, NA))+     geom_line(aes(       year, life.expectancy, group=country, color=region),       clickSelects=\"country\",       data=WorldBank,       size=4,       alpha=0.55),   scatter=ggplot()+     geom_point(aes(       fertility.rate, life.expectancy,       key=country, colour=region, size=population),       showSelected=\"year\",       clickSelects=\"country\",       data=WorldBank)+     geom_text(aes(       fertility.rate, life.expectancy,       key=country,       label=country),       showSelected=c(\"country\", \"year\"),       data=WorldBank)+     geom_text(aes(       5, 80, key=1, label=paste(\"year =\", year)),       showSelected=\"year\",       data=years)+     scale_size_animint(pixel.range=c(2,20), breaks=10^(4:9))) #> Saving animint in temporary directory; specify output directory using animint(out.dir=\"path/to/directory\")"},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"creating new geom, stat, position, scale another package, need extend animint2::Geom, animint2::Stat, animint2::Position, animint2::Scale.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"","code":"a_scales_list()  ScalesList"},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"object class ScalesList (inherits gganimintproto) length 9.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"geoms","dir":"Reference","previous_headings":"","what":"Geoms","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"geom_* functions (like geom_point) return layer contains Geom* object (like GeomPoint). Geom* object responsible rendering data plot. Geom* objects gganimintproto object, descended top-level Geom, implements various methods fields. create new type Geom object, typically want implement one following: Compared Stat Position, Geom little different execution setup compute functions split . setup_data runs position adjustments, draw_layer run render time,  much later. means setup_params hard communicate changes. Override either draw_panel(self, data, panel_scales, coord)     draw_group(self, data, panel_scales, coord). draw_panel     called per panel, draw_group called per group. Use draw_panel row data represents     single element. Use draw_group group represents     element (e.g. smooth, violin). data data frame scaled aesthetics. panel_scales     list containing information scales current     panel. coord coordinate specification.     need call coord$transform(data, panel_scales) work     non-Cartesian coords. work non-linear coordinate systems,     typically need convert primitive geom (e.g. point, path     polygon), pass corresponding draw method     munching. Must return grob. Use zeroGrob nothing     draw. draw_key: Renders single legend key. required_aes: character vector aesthetics needed     render geom. default_aes: list (generated aes()     default values aesthetics. reparameterise: Converts width height xmin xmax,     ymin ymax values. can potentially set values well.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"coordinate-systems","dir":"Reference","previous_headings":"","what":"Coordinate systems","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"coord_* functions (like coord_trans) return Coord* object (like CoordTrans). Coord* object responsible adjusting position overlapping geoms. way coord_* functions work slightly different geom_* stat_* functions, coord_* function actually \"instantiates\" Coord* object creating descendant, returns . Coord* objects gganimintproto object, descended top-level Coord.  create new type Coord object, typically want implement one following: aspect: Returns desired aspect ratio plot. labels: Returns list containing labels x y. render_fg: Renders foreground elements. render_bg: Renders background elements. render_axis_h: Renders horizontal axis. render_axis_v: Renders vertical axis. range: Returns x y ranges train: Return trained scale ranges. transform: Transforms x y coordinates. distance: Calculates distance. is_linear: Returns TRUE coordinate system     linear; FALSE otherwise.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"stats","dir":"Reference","previous_headings":"","what":"Stats","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"stat_* functions (like stat_bin) return layer contains Stat* object (like StatBin). Stat* object responsible rendering data plot. Stat* objects gganimintproto object, descended top-level Stat, implements various methods fields. create new type Stat object, typically want implement one following: Override one :     compute_layer(self, data, scales, ...),     compute_panel(self, data, scales, ...),     compute_group(self, data, scales, ...). compute_layer() called per layer, compute_panel_()     called per panel, compute_group() called per     group. must return data frame. usually best start overriding compute_group:     find substantial performance optimisations, override higher .     need read source code default methods see     else . data data frame containing variables named according     aesthetics mapped . scales list     containing x y scales. functions called     facets trained, global scales, local     individual panels.... contains parameters returned     setup_params(). setup_params(data, params): called layer.      Used setup defaults need complete dataset, inform      user important choices. return list parameters. setup_data(data, params): called layer,      setp_params(). return modified data.      Default methods removes rows containing missing value      required aesthetics (warning !na.rm). required_aes: character vector aesthetics needed     render geom. default_aes: list (generated aes()     default values aesthetics.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"positions","dir":"Reference","previous_headings":"","what":"Positions","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"position_* functions (like position_dodge) return Position* object (like PositionDodge). Position* object responsible adjusting position overlapping geoms. way position_* functions work slightly different geom_* stat_* functions, position_* function actually \"instantiates\" Position* object creating descendant, returns . Position* objects gganimintproto object, descended top-level Position, implements following methods: compute_layer(self, data, params, panel) called     per layer. panel currently internal data structure,     method overriden. compute_panel(self, data, params, panel) called per     panel return modified data frame. data data frame containing variables named according     aesthetics mapped . scales list     containing x y scales. functions called     facets trained, global scales, local     individual panels. params contains parameters returned     setup_params(). setup_params(data, params): called layer.      Used setup defaults need complete dataset, inform      user important choices. return list parameters. setup_data(data, params): called layer,      setp_params(). return modified data.      Default checks required aesthetics present. following fields required_aes: character vector giving aesthetics      must present position adjustment work.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2-gganimintproto.html","id":"scales","dir":"Reference","previous_headings":"","what":"Scales","title":"Base gganimintproto classes for ggplot2 — animint2-gganimintproto","text":"scale_* functions (like scale_x_continuous) return Scale* object (like ScaleContinuous). Scale* object represents single scale. Scale* objects gganimintproto object, descended top-level Scale.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/animint2dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile and render an animint in a local directory. — animint2dir","title":"Compile and render an animint in a local directory. — animint2dir","text":"function converts animint plot.list directory files can used render interactive data visualization web browser.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile and render an animint in a local directory. — animint2dir","text":"","code":"animint2dir(   plot.list,   out.dir = NULL,   json.file = \"plot.json\",   open.browser = interactive(),   css.file = \"\",   persistent_server = FALSE,   ... )"},{"path":"https://animint.github.io/animint2/reference/animint2dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile and render an animint in a local directory. — animint2dir","text":"plot.list named list ggplots option lists. .dir directory store html/js/csv files. exists already, removed writing new directory/files. json.file character string names JSON file metadata associated plot. open.browser logical (default TRUE interactive), R open browser? TRUE, look animint.browser option determine . set \"browseURL\" use file URL (sure configure browser allow access local files, browsers block default). Otherwise (default) use servr::httd(.dir). css.file character string non-empty css file include. Provided file copied output directory styles.css","code":""},{"path":"https://animint.github.io/animint2/reference/animint2dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile and render an animint in a local directory. — animint2dir","text":"invisible list ggplots list format.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile and render an animint in a local directory. — animint2dir","text":"","code":"if(require('data.table'))setDTthreads(1)#for CRAN.  ## Make a Gapminder plot (aka Google motion chart), which is actually ## just a scatterplot with size and color that moves over time. library(animint2) data(WorldBank) gapminder <- list(   title=\"Linked scatterplot and time series\",   ts=ggplot()+     make_tallrect(WorldBank, \"year\")+     geom_line(aes(year, life.expectancy, group=country, color=region),               clickSelects=\"country\",               data=WorldBank, size=4, alpha=3/5),   time=list(variable=\"year\",ms=3000),   duration=list(year=1000),   scatter=ggplot()+     geom_point(aes(fertility.rate, life.expectancy,                    key=country, colour=region, size=population),                showSelected=\"year\",                clickSelects=\"country\",                data=WorldBank)+     geom_text(aes(fertility.rate, life.expectancy, label=country),               showSelected=c(\"country\", \"year\"),               data=WorldBank)+     make_text(WorldBank, 5, 80, \"year\")+     scale_size_animint(pixel.range=c(2,20), breaks=10^(4:9))) animint2dir(gapminder) #> Warning: to ensure that smooth transitions are interpretable, aes(key) should be specifed for geoms with showSelected=year, problem: geom4_text_scatter  data(worldPop) ## Linked bar and line plots of world population by subcontinent, ## inspired by polychartjs. popPlots <- list(   bars=ggplot()+     geom_bar(aes(x=subcontinent, y=population),              clickSelects=\"subcontinent\",              showSelected=\"year\",              data=worldPop, stat=\"identity\", position=\"identity\")+     ## This make_text creates a geom_text that shows the current     ## selected value of the year variable.     make_text(worldPop, 1, 3e6, \"year\")+     coord_flip(),   lines=ggplot()+     ## This make_tallrect tiles the background of the lineplot with     ## rects that can be clicked to select the year variable.     make_tallrect(worldPop, \"year\")+     ## This geom_point does not have aes(clickSelects) so its alpha     ## transparency behaves normally: all points have alpha=1/4.     geom_point(aes(year, population, colour=type),                data=worldPop, size=4, alpha=1/4)+     ## This geom_line DOES have aes(clickSelects) so only the     ## selected line has the specified alpha=3/4. The other     ## unselected lines have 0.5 less (alpha=1/4).     geom_line(aes(year, population, group=subcontinent),               clickSelects=\"subcontinent\",               data=worldPop, size=4, alpha=3/4)) animint2dir(popPlots) ## Make it animated by specifying year as the variable to animate and ## an interval of 2000 milliseconds between animation frames. popAnim <- c(popPlots, list(time=list(variable=\"year\",ms=2000))) animint2dir(popAnim) ## Make the animation smooth by specifying a duration of 1000 ms for ## geoms with aes(showSelected=year). popSmooth <- c(popAnim, list(duration=list(year=1000))) animint2dir(popSmooth) #> Warning: to ensure that smooth transitions are interpretable, aes(key) should be specifed for geoms with showSelected=year, problem: geom1_bar_bars"},{"path":"https://animint.github.io/animint2/reference/animint2gist.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of ggplots to an interactive animation and post files as a gist — animint2gist","title":"Convert a list of ggplots to an interactive animation and post files as a gist — animint2gist","text":"using function set appropriate 'github.username' 'github.password' options","code":""},{"path":"https://animint.github.io/animint2/reference/animint2gist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of ggplots to an interactive animation and post files as a gist — animint2gist","text":"","code":"animint2gist(plot.list, description = plot.list$title, browse = TRUE, ...)"},{"path":"https://animint.github.io/animint2/reference/animint2gist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of ggplots to an interactive animation and post files as a gist — animint2gist","text":"plot.list named list ggplots option lists. description Brief description gist. becomes plot title bl.ocks/username page. browse logical. Prompt browser view viz bl.ocks.org ... options passed onto animint2dir gistr::gist_create","code":""},{"path":"https://animint.github.io/animint2/reference/animint2gist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of ggplots to an interactive animation and post files as a gist — animint2gist","text":"","code":"if (FALSE) { library(animint) iris$id <- 1:nrow(iris) viz <- list(petal=ggplot()+          geom_point(aes(Petal.Width, Petal.Length, fill=Species,                         clickSelects=id), data=iris),        sepal=ggplot()+          geom_point(aes(Sepal.Width, Sepal.Length, fill=Species,                         clickSelects=id), data=iris)) animint2gist(viz, description = \"My animint plot\") }"},{"path":"https://animint.github.io/animint2/reference/animint2pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish a list of ggplots as interactive visualizations on a GitHub repository — animint2pages","title":"Publish a list of ggplots as interactive visualizations on a GitHub repository — animint2pages","text":"function takes named list ggplots, generates interactive animations, pushes generated files specified GitHub repository. can choose keep repository private public. using function set appropriate git 'user.username' 'user.email'","code":""},{"path":"https://animint.github.io/animint2/reference/animint2pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish a list of ggplots as interactive visualizations on a GitHub repository — animint2pages","text":"","code":"animint2pages(   plot.list,   github_repo,   owner = NULL,   commit_message = \"Commit from animint2pages\",   private = FALSE,   required_opts = c(\"title\", \"source\"),   server = NULL,   ... )"},{"path":"https://animint.github.io/animint2/reference/animint2pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish a list of ggplots as interactive visualizations on a GitHub repository — animint2pages","text":"plot.list named list ggplots option lists. github_repo name GitHub repository files pushed. owner user/org repo created, default comes gh::gh_whoami. commit_message string specifying commit message pushed files. private logical flag indicating whether GitHub repository private (default FALSE). required_opts Character vector plot.list element names checked (stop error present). Use required_opts=NULL skip check. ... Additional options passed onto animint2dir.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2pages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Publish a list of ggplots as interactive visualizations on a GitHub repository — animint2pages","text":"function returns initialized GitHub repository object.","code":""},{"path":"https://animint.github.io/animint2/reference/animint2pages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish a list of ggplots as interactive visualizations on a GitHub repository — animint2pages","text":"","code":"if (FALSE) { # \\dontrun{ library(animint2) mtcars$Cyl <- factor(mtcars$cyl) viz <- animint(   ggplot(mtcars, aes(x = mpg, y = disp, color=Cyl)) +     geom_point(),   ggplot(mtcars, aes(x = hp, y = wt, color=Cyl)) +     geom_point(),   title=\"Motor Trend Cars data viz\",   source=\"https://github.com/animint/animint2/blob/master/R/z_pages.R\" ) animint2pages(viz, \"animint2pages-example-mtcars\") } # }"},{"path":"https://animint.github.io/animint2/reference/animintOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny ui output function — animintOutput","title":"Shiny ui output function — animintOutput","text":"Shiny ui output function","code":""},{"path":"https://animint.github.io/animint2/reference/animintOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny ui output function — animintOutput","text":"","code":"animintOutput(outputId)"},{"path":"https://animint.github.io/animint2/reference/animintOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny ui output function — animintOutput","text":"outputId output variable read plot ","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an annotation layer. — annotate","title":"Create an annotation layer. — annotate","text":"function adds geoms plot. Unlike typical geom function, properties geoms mapped variables data frame, instead passed vectors. useful adding small annotations (text labels) data vectors, reason want put data frame.","code":""},{"path":"https://animint.github.io/animint2/reference/annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an annotation layer. — annotate","text":"","code":"annotate(   geom,   x = NULL,   y = NULL,   xmin = NULL,   xmax = NULL,   ymin = NULL,   ymax = NULL,   xend = NULL,   yend = NULL,   ...,   na.rm = FALSE )"},{"path":"https://animint.github.io/animint2/reference/annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an annotation layer. — annotate","text":"geom name geom use annotation x, y, xmin, ymin, xmax, ymax, xend, yend positioning aesthetics - must specify least one . ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values.","code":""},{"path":"https://animint.github.io/animint2/reference/annotate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an annotation layer. — annotate","text":"Note position aesthetics scaled (.e. expand limits plot visible), aesthetics set. means layers created function never affect legend.","code":""},{"path":"https://animint.github.io/animint2/reference/annotate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an annotation layer. — annotate","text":"","code":"p <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() p + annotate(\"text\", x = 4, y = 25, label = \"Some text\")  p + annotate(\"text\", x = 2:5, y = 25, label = \"Some text\")  p + annotate(\"rect\", xmin = 3, xmax = 4.2, ymin = 12, ymax = 21,   alpha = .2)  p + annotate(\"segment\", x = 2.5, xend = 4, y = 15, yend = 25,   colour = \"blue\")  p + annotate(\"pointrange\", x = 3.5, y = 20, ymin = 12, ymax = 28,   colour = \"red\", size = 1.5)   p + annotate(\"text\", x = 2:3, y = 20:21, label = c(\"my label\", \"label 2\"))"},{"path":"https://animint.github.io/animint2/reference/annotation_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation: Custom grob. — annotation_custom","title":"Annotation: Custom grob. — annotation_custom","text":"special geom intended use static annotations every panel. annotations affect scales (.e. x y axes grow cover range grob, grob modified ggplot settings mappings).","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation: Custom grob. — annotation_custom","text":"","code":"annotation_custom(grob, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf)"},{"path":"https://animint.github.io/animint2/reference/annotation_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation: Custom grob. — annotation_custom","text":"grob grob display xmin, xmax x location (data coordinates) giving horizontal location raster ymin, ymax y location (data coordinates) giving vertical location raster","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_custom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotation: Custom grob. — annotation_custom","text":"useful adding tables, inset plots, grid-based decorations.","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_custom.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Annotation: Custom grob. — annotation_custom","text":"annotation_custom expects grob fill entire viewport defined xmin, xmax, ymin, ymax. Grobs different (absolute) size center-justified region. Inf values can used fill full plot panel (see examples).","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotation: Custom grob. — annotation_custom","text":"","code":"# Dummy plot df <- data.frame(x = 1:10, y = 1:10) base <- ggplot(df, aes(x, y)) +   geom_blank() +   theme_bw()  # Full panel annotation base + annotation_custom(   grob = grid::roundrectGrob(),   xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf )   # Inset plot df2 <- data.frame(x = 1 , y = 1) g <- ggplotGrob(ggplot(df2, aes(x, y)) +   geom_point() +   theme(plot.background = element_rect(colour = \"black\"))) base +   annotation_custom(grob = g, xmin = 1, xmax = 10, ymin = 8, ymax = 10)"},{"path":"https://animint.github.io/animint2/reference/annotation_logticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation: log tick marks — annotation_logticks","title":"Annotation: log tick marks — annotation_logticks","text":"annotation adds log tick marks diminishing spacing. tick marks probably make sense base 10.","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_logticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation: log tick marks — annotation_logticks","text":"","code":"annotation_logticks(   base = 10,   sides = \"bl\",   scaled = TRUE,   short = unit(0.1, \"cm\"),   mid = unit(0.2, \"cm\"),   long = unit(0.3, \"cm\"),   colour = \"black\",   size = 0.5,   linetype = 1,   alpha = 1,   color = NULL,   ... )"},{"path":"https://animint.github.io/animint2/reference/annotation_logticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation: log tick marks — annotation_logticks","text":"base base log (default 10) sides string controls sides plot log ticks appear . can set string containing \"trbl\", top, right, bottom, left. scaled data already log-scaled? TRUE (default) data already transformed log10() using scale_y_log10. FALSE using coord_trans(y = \"log10\"). short unit object specifying length short tick marks mid unit object specifying length middle tick marks. base 10, \"5\" ticks. long unit object specifying length long tick marks. base 10, \"1\" (\"10\") ticks. colour Colour tick marks. size Thickness tick marks, mm. linetype Linetype tick marks (solid, dashed, etc.) alpha transparency tick marks. color alias colour. ... parameters passed layer","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/annotation_logticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotation: log tick marks — annotation_logticks","text":"","code":"# Make a log-log plot (without log ticks) a <- ggplot(msleep, aes(bodywt, brainwt)) +  geom_point(na.rm = TRUE) +  scale_x_log10(    breaks = scales::trans_breaks(\"log10\", function(x) 10^x),    labels = scales::trans_format(\"log10\", scales::math_format(10^.x))  ) +  scale_y_log10(    breaks = scales::trans_breaks(\"log10\", function(x) 10^x),    labels = scales::trans_format(\"log10\", scales::math_format(10^.x))  ) +  theme_bw()  a + annotation_logticks()                # Default: log ticks on bottom and left  a + annotation_logticks(sides = \"lr\")    # Log ticks for y, on left and right  a + annotation_logticks(sides = \"trbl\")  # All four sides   # Hide the minor grid lines because they don't align with the ticks a + annotation_logticks(sides = \"trbl\") + theme(panel.grid.minor = element_blank())   # Another way to get the same results as 'a' above: log-transform the data before # plotting it. Also hide the minor grid lines. b <- ggplot(msleep, aes(log10(bodywt), log10(brainwt))) +  geom_point(na.rm = TRUE) +  scale_x_continuous(name = \"body\", labels = scales::math_format(10^.x)) +  scale_y_continuous(name = \"brain\", labels = scales::math_format(10^.x)) +  theme_bw() + theme(panel.grid.minor = element_blank())  b + annotation_logticks()   # Using a coordinate transform requires scaled = FALSE t <- ggplot(msleep, aes(bodywt, brainwt)) +   geom_point() +   coord_trans(x = \"log10\", y = \"log10\") +   theme_bw() t + annotation_logticks(scaled = FALSE) #> Warning: Removed 27 rows containing missing values (geom_point).   # Change the length of the ticks a + annotation_logticks(   short = unit(.5,\"mm\"),   mid = unit(3,\"mm\"),   long = unit(4,\"mm\") )"},{"path":"https://animint.github.io/animint2/reference/annotation_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation: maps. — annotation_map","title":"Annotation: maps. — annotation_map","text":"Annotation: maps.","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation: maps. — annotation_map","text":"","code":"annotation_map(map, ...)"},{"path":"https://animint.github.io/animint2/reference/annotation_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation: maps. — annotation_map","text":"map data frame representing map.  map objects can converted right format using fortify ... arguments used modify aesthetics","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotation: maps. — annotation_map","text":"","code":"if (require(\"maps\")) { usamap <- map_data(\"state\")  seal.sub <- subset(seals, long > -130 & lat < 45 & lat > 40) ggplot(seal.sub, aes(x = long, y = lat)) +   annotation_map(usamap, fill = \"NA\", colour = \"grey50\") +   geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat))  seal2 <- transform(seal.sub,   latr = cut(lat, 2),   longr = cut(long, 2))  ggplot(seal2,  aes(x = long, y = lat)) +   annotation_map(usamap, fill = \"NA\", colour = \"grey50\") +   geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat)) +   facet_grid(latr ~ longr, scales = \"free\", space = \"free\") } #> Loading required package: maps #> Warning: there is no package called ‘maps’"},{"path":"https://animint.github.io/animint2/reference/annotation_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotation: High-performance rectangular tiling. — annotation_raster","title":"Annotation: High-performance rectangular tiling. — annotation_raster","text":"special version geom_raster optimised static annotations every panel. annotations affect scales (.e. x y axes grow cover range raster, raster must already colours).","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotation: High-performance rectangular tiling. — annotation_raster","text":"","code":"annotation_raster(raster, xmin, xmax, ymin, ymax, interpolate = FALSE)"},{"path":"https://animint.github.io/animint2/reference/annotation_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotation: High-performance rectangular tiling. — annotation_raster","text":"raster raster object display xmin, xmax x location (data coordinates) giving horizontal location raster ymin, ymax y location (data coordinates) giving vertical location raster interpolate TRUE interpolate linearly, FALSE (default) interpolate.","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotation: High-performance rectangular tiling. — annotation_raster","text":"useful adding bitmap images.","code":""},{"path":"https://animint.github.io/animint2/reference/annotation_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotation: High-performance rectangular tiling. — annotation_raster","text":"","code":"# Generate data rainbow <- matrix(hcl(seq(0, 360, length.out = 50 * 50), 80, 70), nrow = 50) ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   annotation_raster(rainbow, 15, 20, 3, 4)  # To fill up whole plot ggplot(mtcars, aes(mpg, wt)) +   annotation_raster(rainbow, -Inf, Inf, -Inf, Inf) +   geom_point()   rainbow2 <- matrix(hcl(seq(0, 360, length.out = 10), 80, 70), nrow = 1) ggplot(mtcars, aes(mpg, wt)) +   annotation_raster(rainbow2, -Inf, Inf, -Inf, Inf) +   geom_point()  rainbow2 <- matrix(hcl(seq(0, 360, length.out = 10), 80, 70), nrow = 1) ggplot(mtcars, aes(mpg, wt)) +   annotation_raster(rainbow2, -Inf, Inf, -Inf, Inf, interpolate = TRUE) +   geom_point()"},{"path":"https://animint.github.io/animint2/reference/as.list.gganimintproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a gganimintproto object to a list — as.list.gganimintproto","title":"Convert a gganimintproto object to a list — as.list.gganimintproto","text":"include object's super member.","code":""},{"path":"https://animint.github.io/animint2/reference/as.list.gganimintproto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a gganimintproto object to a list — as.list.gganimintproto","text":"","code":"# S3 method for class 'gganimintproto' as.list(x, inherit = TRUE, ...)"},{"path":"https://animint.github.io/animint2/reference/as.list.gganimintproto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a gganimintproto object to a list — as.list.gganimintproto","text":"x gganimintproto object convert list. inherit TRUE (default), flatten inherited items returned list. FALSE, include inherited items. ... arguments pass .list.environment.","code":""},{"path":"https://animint.github.io/animint2/reference/as_labeller.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to labeller function — as_labeller","title":"Coerce to labeller function — as_labeller","text":"transforms objects labeller functions. Used internally labeller().","code":""},{"path":"https://animint.github.io/animint2/reference/as_labeller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to labeller function — as_labeller","text":"","code":"as_labeller(x, default = label_value, multi_line = TRUE)"},{"path":"https://animint.github.io/animint2/reference/as_labeller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to labeller function — as_labeller","text":"x Object coerce labeller function. named character vector, used lookup table passed default. non-labeller function, assumed takes returns character vectors applied labels. labeller, simply applied labels. default Default labeller process labels produced lookup tables modified non-labeller functions. multi_line Whether display labels multiple factors separate lines. passed labeller function.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/as_labeller.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to labeller function — as_labeller","text":"","code":"p <- ggplot(mtcars, aes(disp, drat)) + geom_point() p + facet_wrap(~am)   # Rename labels on the fly with a lookup character vector to_string <- as_labeller(c(`0` = \"Zero\", `1` = \"One\")) p + facet_wrap(~am, labeller = to_string)   # Quickly transform a function operating on character vectors to a # labeller function: appender <- function(string, suffix = \"-foo\") paste0(string, suffix) p + facet_wrap(~am, labeller = as_labeller(appender))   # If you have more than one facetting variable, be sure to dispatch # your labeller to the right variable with labeller() p + facet_grid(cyl ~ am, labeller = labeller(am = to_string))"},{"path":"https://animint.github.io/animint2/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a complete ggplot appropriate to a particular data type — autoplot","title":"Create a complete ggplot appropriate to a particular data type — autoplot","text":"autoplot uses ggplot2 draw particular plot object particular class single command. defines S3 generic classes packages can extend.","code":""},{"path":"https://animint.github.io/animint2/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a complete ggplot appropriate to a particular data type — autoplot","text":"","code":"autoplot(object, ...)"},{"path":"https://animint.github.io/animint2/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a complete ggplot appropriate to a particular data type — autoplot","text":"object object, whose class determine behaviour autoplot ... arguments passed specific methods","code":""},{"path":"https://animint.github.io/animint2/reference/autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a complete ggplot appropriate to a particular data type — autoplot","text":"ggplot object","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/benchplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark plot creation time. Broken down into construct, build, render and draw times. — benchplot","title":"Benchmark plot creation time. Broken down into construct, build, render and draw times. — benchplot","text":"Benchmark plot creation time. Broken construct, build, render draw times.","code":""},{"path":"https://animint.github.io/animint2/reference/benchplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark plot creation time. Broken down into construct, build, render and draw times. — benchplot","text":"","code":"benchplot(x)"},{"path":"https://animint.github.io/animint2/reference/benchplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark plot creation time. Broken down into construct, build, render and draw times. — benchplot","text":"x code create ggplot2 plot","code":""},{"path":"https://animint.github.io/animint2/reference/benchplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benchmark plot creation time. Broken down into construct, build, render and draw times. — benchplot","text":"","code":"benchplot(ggplot(mtcars, aes(mpg, wt)) + geom_point()) #>        step user.self sys.self elapsed #> 1 construct     0.003        0   0.003 #> 2     build     0.010        0   0.010 #> 3    render     0.016        0   0.015 #> 4      draw     0.036        0   0.036 #> 5     TOTAL     0.065        0   0.064 benchplot(ggplot(mtcars, aes(mpg, wt)) + geom_point() + facet_grid(. ~ cyl))  #>        step user.self sys.self elapsed #> 1 construct     0.002        0   0.002 #> 2     build     0.020        0   0.021 #> 3    render     0.048        0   0.048 #> 4      draw     0.062        0   0.062 #> 5     TOTAL     0.132        0   0.133"},{"path":"https://animint.github.io/animint2/reference/borders.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a layer of map borders. — borders","title":"Create a layer of map borders. — borders","text":"Create layer map borders.","code":""},{"path":"https://animint.github.io/animint2/reference/borders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a layer of map borders. — borders","text":"","code":"borders(   database = \"world\",   regions = \".\",   fill = NA,   colour = \"grey50\",   xlim = NULL,   ylim = NULL,   ... )"},{"path":"https://animint.github.io/animint2/reference/borders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a layer of map borders. — borders","text":"database map data, see map details regions map region fill fill colour colour border colour xlim, ylim latitudinal logitudinal range extracting map polygons, see map details. ... arguments passed onto geom_polygon","code":""},{"path":"https://animint.github.io/animint2/reference/borders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a layer of map borders. — borders","text":"","code":"if (require(\"maps\")) {  ia <- map_data(\"county\", \"iowa\") mid_range <- function(x) mean(range(x)) seats <- plyr::ddply(ia, \"subregion\", plyr::colwise(mid_range, c(\"lat\", \"long\"))) ggplot(ia, aes(long, lat)) +   geom_polygon(aes(group = group), fill = NA, colour = \"grey60\") +   geom_text(aes(label = subregion), data = seats, size = 2, angle = 45)  data(us.cities) capitals <- subset(us.cities, capital == 2) ggplot(capitals, aes(long, lat)) +   borders(\"state\") +   geom_point(aes(size = pop)) +   scale_size_area() +   coord_quickmap()  # Same map, with some world context ggplot(capitals, aes(long, lat)) +   borders(\"world\", xlim = c(-130, -60), ylim = c(20, 50)) +   geom_point(aes(size = pop)) +   scale_size_area() +   coord_quickmap() } #> Loading required package: maps #> Warning: there is no package called ‘maps’"},{"path":"https://animint.github.io/animint2/reference/breakpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"The breakpointError of simulated signals — breakpoints","title":"The breakpointError of simulated signals — breakpoints","text":"Two noisy signals sampled latent signal known   breakpoints, used measure error estimated   models 1,...,20 segments.","code":""},{"path":"https://animint.github.io/animint2/reference/breakpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The breakpointError of simulated signals — breakpoints","text":"","code":"data(breakpoints)"},{"path":"https://animint.github.io/animint2/reference/breakpoints.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The breakpointError of simulated signals — breakpoints","text":"list 5 data.frames: error contains breakpointError estimated models, signals contains noisy signals, breaks contains breakpoints estimated signals, segments contains estimated segments, imprecision contains normalized imprecision curves used evaluate error.","code":""},{"path":"https://animint.github.io/animint2/reference/breakpoints.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The breakpointError of simulated signals — breakpoints","text":"breakpointError package used measure model error, see etc/breakpoints.R.","code":""},{"path":"https://animint.github.io/animint2/reference/calc_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the element properties, by inheriting properties from its parents — calc_element","title":"Calculate the element properties, by inheriting properties from its parents — calc_element","text":"Calculate element properties, inheriting properties parents","code":""},{"path":"https://animint.github.io/animint2/reference/calc_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the element properties, by inheriting properties from its parents — calc_element","text":"","code":"calc_element(element, theme, verbose = FALSE)"},{"path":"https://animint.github.io/animint2/reference/calc_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the element properties, by inheriting properties from its parents — calc_element","text":"element name theme element calculate theme theme object (like theme_grey()) verbose TRUE, print elements one inherits ","code":""},{"path":"https://animint.github.io/animint2/reference/calc_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the element properties, by inheriting properties from its parents — calc_element","text":"","code":"t <- theme_grey() calc_element('text', t) #> List of 10 #>  $ family    : chr \"\" #>  $ face      : chr \"plain\" #>  $ colour    : chr \"black\" #>  $ size      : num 11 #>  $ hjust     : num 0.5 #>  $ vjust     : num 0.5 #>  $ angle     : num 0 #>  $ lineheight: num 0.9 #>  $ margin    : 'margin' num [1:4] 0points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug     : logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"  # Compare the \"raw\" element definition to the element with calculated inheritance t$axis.text.x #> List of 10 #>  $ family    : NULL #>  $ face      : NULL #>  $ colour    : NULL #>  $ size      : NULL #>  $ hjust     : NULL #>  $ vjust     : num 1 #>  $ angle     : NULL #>  $ lineheight: NULL #>  $ margin    : 'margin' num [1:4] 2.2points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug     : NULL #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" calc_element('axis.text.x', t, verbose = TRUE) #> axis.text.x -->  #> axis.text #> axis.text -->  #> text #> text -->  #> nothing (top level) #> List of 10 #>  $ family    : chr \"\" #>  $ face      : chr \"plain\" #>  $ colour    : chr \"grey30\" #>  $ size      : num 11 #>  $ hjust     : num 0.5 #>  $ vjust     : num 1 #>  $ angle     : num 0 #>  $ lineheight: num 0.9 #>  $ margin    : 'margin' num [1:4] 2.2points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug     : logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"  # This reports that axis.text.x inherits from axis.text, # which inherits from text. You can view each of them with: t$axis.text.x #> List of 10 #>  $ family    : NULL #>  $ face      : NULL #>  $ colour    : NULL #>  $ size      : NULL #>  $ hjust     : NULL #>  $ vjust     : num 1 #>  $ angle     : NULL #>  $ lineheight: NULL #>  $ margin    : 'margin' num [1:4] 2.2points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug     : NULL #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" t$axis.text #> List of 10 #>  $ family    : NULL #>  $ face      : NULL #>  $ colour    : chr \"grey30\" #>  $ size      : NULL #>  $ hjust     : NULL #>  $ vjust     : NULL #>  $ angle     : NULL #>  $ lineheight: NULL #>  $ margin    : NULL #>  $ debug     : NULL #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" t$text #> List of 10 #>  $ family    : chr \"\" #>  $ face      : chr \"plain\" #>  $ colour    : chr \"black\" #>  $ size      : num 11 #>  $ hjust     : num 0.5 #>  $ vjust     : num 0.5 #>  $ angle     : num 0 #>  $ lineheight: num 0.9 #>  $ margin    : 'margin' num [1:4] 0points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug     : logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\""},{"path":"https://animint.github.io/animint2/reference/change.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical model structure change — change","title":"Graphical model structure change — change","text":"model detecting graphical model structure changes applied simulated data know real changes.","code":""},{"path":"https://animint.github.io/animint2/reference/change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical model structure change — change","text":"","code":"data(change)"},{"path":"https://animint.github.io/animint2/reference/change.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Graphical model structure change — change","text":"List 4 data.frames: coefs contains coefficients every variable every point regularization path, truth contains information variables real changes, likelihood contains train test likelihood, position contains positions laying graphical model nodes 2D plane.","code":""},{"path":"https://animint.github.io/animint2/reference/change.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Graphical model structure change — change","text":"Song Liu, personal communication.","code":""},{"path":"https://animint.github.io/animint2/reference/change.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Graphical model structure change — change","text":"Liu S, Quinn JA, Gutmann MU, Sugiyama M. Direct Learning Sparse   Changes Markov Networks Density Ratio Estimation. ECML/PKDD   2013.","code":""},{"path":"https://animint.github.io/animint2/reference/checkAnimationTimeVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Check animation variable for errors — checkAnimationTimeVar","title":"Check animation variable for errors — checkAnimationTimeVar","text":"Check animation variable errors","code":""},{"path":"https://animint.github.io/animint2/reference/checkAnimationTimeVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check animation variable for errors — checkAnimationTimeVar","text":"","code":"checkAnimationTimeVar(timeVarList)"},{"path":"https://animint.github.io/animint2/reference/checkAnimationTimeVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check animation variable for errors — checkAnimationTimeVar","text":"timeVarList plot.list$time animint2dir check errors","code":""},{"path":"https://animint.github.io/animint2/reference/checkAnimationTimeVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check animation variable for errors — checkAnimationTimeVar","text":"NULL :Stops error invalid input","code":""},{"path":"https://animint.github.io/animint2/reference/checkExtraParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Check extra_params argument for duplicates, non-named list — checkExtraParams","title":"Check extra_params argument for duplicates, non-named list — checkExtraParams","text":"Check extra_params argument duplicates, non-named list","code":""},{"path":"https://animint.github.io/animint2/reference/checkExtraParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check extra_params argument for duplicates, non-named list — checkExtraParams","text":"","code":"checkExtraParams(extra_params, aes_mapping)"},{"path":"https://animint.github.io/animint2/reference/checkExtraParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check extra_params argument for duplicates, non-named list — checkExtraParams","text":"extra_params named list containing details showSelected clickSelects values layer aes_mapping aesthetics mapping layer","code":""},{"path":"https://animint.github.io/animint2/reference/checkExtraParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check extra_params argument for duplicates, non-named list — checkExtraParams","text":"Modified extra_params list","code":""},{"path":"https://animint.github.io/animint2/reference/checkForSSandCSasAesthetics.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if showSelected and clickSelects have been used as aesthetics as in old syntax. If yes, raise error — checkForSSandCSasAesthetics","title":"Check if showSelected and clickSelects have been used as aesthetics as in old syntax. If yes, raise error — checkForSSandCSasAesthetics","text":"Check showSelected clickSelects used aesthetics old syntax. yes, raise error","code":""},{"path":"https://animint.github.io/animint2/reference/checkForSSandCSasAesthetics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if showSelected and clickSelects have been used as aesthetics as in old syntax. If yes, raise error — checkForSSandCSasAesthetics","text":"","code":"checkForSSandCSasAesthetics(aesthetics, plot_name)"},{"path":"https://animint.github.io/animint2/reference/checkForSSandCSasAesthetics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if showSelected and clickSelects have been used as aesthetics as in old syntax. If yes, raise error — checkForSSandCSasAesthetics","text":"aesthetics list. aesthetics mapping layer plot_name character vector plot layer belongs ","code":""},{"path":"https://animint.github.io/animint2/reference/checkForSSandCSasAesthetics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if showSelected and clickSelects have been used as aesthetics as in old syntax. If yes, raise error — checkForSSandCSasAesthetics","text":"NULL Throws error used aesthetics","code":""},{"path":"https://animint.github.io/animint2/reference/checkPlotForAnimintExtensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs error checking on the plot for animint extensions — checkPlotForAnimintExtensions","title":"Performs error checking on the plot for animint extensions — checkPlotForAnimintExtensions","text":"Performs error checking plot animint extensions","code":""},{"path":"https://animint.github.io/animint2/reference/checkPlotForAnimintExtensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs error checking on the plot for animint extensions — checkPlotForAnimintExtensions","text":"","code":"checkPlotForAnimintExtensions(p, plot_name)"},{"path":"https://animint.github.io/animint2/reference/checkPlotForAnimintExtensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs error checking on the plot for animint extensions — checkPlotForAnimintExtensions","text":"p plot plot.list check errors plot_name plot name error check. alphanumeric begin alphabet","code":""},{"path":"https://animint.github.io/animint2/reference/checkPlotForAnimintExtensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs error checking on the plot for animint extensions — checkPlotForAnimintExtensions","text":"NULL :Stops error invalid input","code":""},{"path":"https://animint.github.io/animint2/reference/checkPlotList.html","id":null,"dir":"Reference","previous_headings":"","what":"Check plot.list for errors — checkPlotList","title":"Check plot.list for errors — checkPlotList","text":"Check plot.list list every element named","code":""},{"path":"https://animint.github.io/animint2/reference/checkPlotList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check plot.list for errors — checkPlotList","text":"","code":"checkPlotList(plot.list)"},{"path":"https://animint.github.io/animint2/reference/checkPlotList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check plot.list for errors — checkPlotList","text":"plot.list animint2dir check errors","code":""},{"path":"https://animint.github.io/animint2/reference/checkPlotList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check plot.list for errors — checkPlotList","text":"Throws error invalid values","code":""},{"path":"https://animint.github.io/animint2/reference/checkSingleShowSelectedValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Issue warnings for non interactive plots where there is only one showSelected value — checkSingleShowSelectedValue","title":"Issue warnings for non interactive plots where there is only one showSelected value — checkSingleShowSelectedValue","text":"Issue warnings non interactive plots one showSelected value","code":""},{"path":"https://animint.github.io/animint2/reference/checkSingleShowSelectedValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issue warnings for non interactive plots where there is only one showSelected value — checkSingleShowSelectedValue","text":"","code":"checkSingleShowSelectedValue(selectors)"},{"path":"https://animint.github.io/animint2/reference/checkSingleShowSelectedValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Issue warnings for non interactive plots where there is only one showSelected value — checkSingleShowSelectedValue","text":"selectors selectors check warnings","code":""},{"path":"https://animint.github.io/animint2/reference/checkSingleShowSelectedValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Issue warnings for non interactive plots where there is only one showSelected value — checkSingleShowSelectedValue","text":"NULL","code":""},{"path":"https://animint.github.io/animint2/reference/climate.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate data in central America from 1995 to 2000 — climate","title":"Climate data in central America from 1995 to 2000 — climate","text":"Monthly observations atmospheric variables 1995-2000, 113.75W-56.25W, 21.25S-36.25N 2.5 degree grid spacing. Variables: pressure, temperature, ozone low, medium, high cloud cover. Temperatures given degrees celsius (original data Kelvin).","code":""},{"path":"https://animint.github.io/animint2/reference/climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate data in central America from 1995 to 2000 — climate","text":"","code":"data(climate)"},{"path":"https://animint.github.io/animint2/reference/climate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate data in central America from 1995 to 2000 — climate","text":"data frame 41472 observations following 16 variables. time numeric vector y numeric vector x numeric vector lat numeric vector long numeric vector date POSIXct cloudhigh numeric vector cloudlow numeric vector cloudmid numeric vector ozone numeric vector pressure numeric vector surftemp numeric vector temperature numeric vector id character vector month numeric vector year numeric vector","code":""},{"path":"https://animint.github.io/animint2/reference/climate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate data in central America from 1995 to 2000 — climate","text":"NASA Goddard Institute Space Studies (GISS) subset monthly climatology International Satellite Cloud Climatology Project (ISCCP)","code":""},{"path":"https://animint.github.io/animint2/reference/colsNotToCopy.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter out columns that do not need to be copied — colsNotToCopy","title":"Filter out columns that do not need to be copied — colsNotToCopy","text":"Filter columns need copied","code":""},{"path":"https://animint.github.io/animint2/reference/colsNotToCopy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter out columns that do not need to be copied — colsNotToCopy","text":"","code":"colsNotToCopy(g, s.aes)"},{"path":"https://animint.github.io/animint2/reference/colsNotToCopy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter out columns that do not need to be copied — colsNotToCopy","text":"g Geom columns s.aes Selector aesthetics","code":""},{"path":"https://animint.github.io/animint2/reference/colsNotToCopy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter out columns that do not need to be copied — colsNotToCopy","text":"Character vector columns copied","code":""},{"path":"https://animint.github.io/animint2/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing rank and compare SVM on simulated patterns — compare","title":"Testing rank and compare SVM on simulated patterns — compare","text":"50, ..., 800 labeled pairs generated according squared L1, L2, Linf norms, input features [-3, 3]. Labels -1 significant difference ranks Xt Xtp, 1 rank Xtp significantly higher rank Xt. SVMrank ignores pairs labeled -1, SVMcompare uses learn accurate predictive model, shown test error level curves learned functions.","code":""},{"path":"https://animint.github.io/animint2/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing rank and compare SVM on simulated patterns — compare","text":"","code":"data(compare)"},{"path":"https://animint.github.io/animint2/reference/compare.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Testing rank and compare SVM on simulated patterns — compare","text":"List 4 data.frames: error contains test error learned models, bayes contains Bayes classification error latent ranking function applied test data, rank contains ranking functions evaluated grid input points, train.pairs contains data used train algorithms.","code":""},{"path":"https://animint.github.io/animint2/reference/compare.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Testing rank and compare SVM on simulated patterns — compare","text":"Hocking TD, Spanurattana S, Sugiyama M. Support vector comparison machines (2013).","code":""},{"path":"https://animint.github.io/animint2/reference/continuous_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous scale constructor. — continuous_scale","title":"Continuous scale constructor. — continuous_scale","text":"Continuous scale constructor.","code":""},{"path":"https://animint.github.io/animint2/reference/continuous_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous scale constructor. — continuous_scale","text":"","code":"continuous_scale(   aesthetics,   scale_name,   palette,   name = waiver(),   breaks = waiver(),   minor_breaks = waiver(),   labels = waiver(),   limits = NULL,   rescaler = rescale,   oob = censor,   expand = waiver(),   na.value = NA_real_,   trans = \"identity\",   guide = \"legend\" )"},{"path":"https://animint.github.io/animint2/reference/continuous_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous scale constructor. — continuous_scale","text":"aesthetics names aesthetics scale works scale_name name scale palette palette function called single integer argument (number levels scale) returns values take name name scale. Used axis legend title. NULL, default, name scale taken first mapping used aesthetic. breaks One : NULL breaks waiver() default breaks computed     transformation object numeric vector positions function takes limits input returns breaks     output minor_breaks One : NULL minor breaks waiver() default breaks (one minor break     major break) numeric vector positions function given limits returns vector minor breaks. labels One : NULL labels waiver() default labels computed     transformation object character vector giving labels (must length breaks) function takes breaks input returns labels     output limits numeric vector length two providing limits scale. Use NA refer existing minimum maximum. rescaler Used diverging n colour gradients (.e. scale_colour_gradient2, scale_colour_gradientn). function used scale input values range [0, 1]. oob Function handles limits outside scale limits (bounds). default replaces bounds values NA. expand numeric vector length two giving multiplicative additive expansion constants. constants ensure data placed distance away axes. defaults c(0.05, 0) continuous variables, c(0, 0.6) discrete variables. na.value Missing values replaced value. trans Either name transformation object,   object . Built-transformations include \"asn\", \"atanh\",   \"boxcox\", \"exp\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\",   \"logit\", \"probability\", \"probit\", \"reciprocal\", \"reverse\" \"sqrt\". transformation object bundles together transform, inverse,   methods generating breaks labels. Transformation objects   defined scales package, called name_trans, e.g.   boxcox_trans. can create   transformation trans_new. guide Name guide object, object .","code":""},{"path":"https://animint.github.io/animint2/reference/coord_cartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian coordinates. — coord_cartesian","title":"Cartesian coordinates. — coord_cartesian","text":"Cartesian coordinate system familiar, common, type coordinate system. Setting limits coordinate system zoom plot (like looking magnifying glass), change underlying data like setting limits scale .","code":""},{"path":"https://animint.github.io/animint2/reference/coord_cartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian coordinates. — coord_cartesian","text":"","code":"coord_cartesian(xlim = NULL, ylim = NULL, expand = TRUE)"},{"path":"https://animint.github.io/animint2/reference/coord_cartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian coordinates. — coord_cartesian","text":"xlim, ylim Limits x y axes. expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_cartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartesian coordinates. — coord_cartesian","text":"","code":"# There are two ways of zooming the plot display: with scales or # with coordinate systems.  They work in two rather different ways.  p <- ggplot(mtcars, aes(disp, wt)) +   geom_point() +   geom_smooth() p   # Setting the limits on a scale converts all values outside the range to NA. p + scale_x_continuous(limits = c(325, 500)) #> Warning: Removed 24 rows containing non-finite values (stat_smooth). #> Warning: Removed 24 rows containing missing values (geom_point).   # Setting the limits on the coordinate system performs a visual zoom. # The data is unchanged, and we just view a small portion of the original # plot. Note how smooth continues past the points visible on this plot. p + coord_cartesian(xlim = c(325, 500))   # By default, the same expansion factor is applied as when setting scale # limits. You can set the limits precisely by setting expand = FALSE p + coord_cartesian(xlim = c(325, 500), expand = FALSE)   # Simiarly, we can use expand = FALSE to turn off expansion with the # default limits p + coord_cartesian(expand = FALSE)   # You can see the same thing with this 2d histogram d <- ggplot(diamonds, aes(carat, price)) +   stat_bin2d(bins = 25, colour = \"white\") d   # When zooming the scale, the we get 25 new bins that are the same # size on the plot, but represent smaller regions of the data space d + scale_x_continuous(limits = c(0, 1)) #> Warning: Removed 17502 rows containing non-finite values (stat_bin2d).   # When zooming the coordinate system, we see a subset of original 50 bins, # displayed bigger d + coord_cartesian(xlim = c(0, 1))"},{"path":"https://animint.github.io/animint2/reference/coord_fixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Cartesian coordinates with fixed relationship between x and y scales. — coord_fixed","title":"Cartesian coordinates with fixed relationship between x and y scales. — coord_fixed","text":"fixed scale coordinate system forces specified ratio physical representation data units axes. ratio represents number units y-axis equivalent one unit x-axis. default, ratio = 1, ensures one unit x-axis length one unit y-axis. Ratios higher one make units y axis longer units x-axis, vice versa. similar eqscplot, works types graphics.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_fixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cartesian coordinates with fixed relationship between x and y scales. — coord_fixed","text":"","code":"coord_fixed(ratio = 1, xlim = NULL, ylim = NULL, expand = TRUE)"},{"path":"https://animint.github.io/animint2/reference/coord_fixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cartesian coordinates with fixed relationship between x and y scales. — coord_fixed","text":"ratio aspect ratio, expressed y / x xlim, ylim Limits x y axes. expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_fixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cartesian coordinates with fixed relationship between x and y scales. — coord_fixed","text":"","code":"# ensures that the ranges of axes are equal to the specified ratio by # adjusting the plot aspect ratio  p <- ggplot(mtcars, aes(mpg, wt)) + geom_point() p + coord_fixed(ratio = 1)  p + coord_fixed(ratio = 5)  p + coord_fixed(ratio = 1/5)   # Resize the plot to see that the specified aspect ratio is maintained"},{"path":"https://animint.github.io/animint2/reference/coord_flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Flipped cartesian coordinates. — coord_flip","title":"Flipped cartesian coordinates. — coord_flip","text":"Flipped cartesian coordinates horizontal becomes vertical, vertical, horizontal. primarily useful converting geoms statistics display y conditional x, x conditional y.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flipped cartesian coordinates. — coord_flip","text":"","code":"coord_flip(xlim = NULL, ylim = NULL, expand = TRUE)"},{"path":"https://animint.github.io/animint2/reference/coord_flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flipped cartesian coordinates. — coord_flip","text":"xlim, ylim Limits x y axes. expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_flip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flipped cartesian coordinates. — coord_flip","text":"","code":"h <- ggplot(diamonds, aes(carat)) +   geom_histogram() h #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  h + coord_flip() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  h + coord_flip() + scale_x_reverse() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   # You can also use it to flip line and area plots: df <- data.frame(x = 1:5, y = (1:5) ^ 2) ggplot(df, aes(x, y)) +   geom_area()  last_plot() + coord_flip()"},{"path":"https://animint.github.io/animint2/reference/coord_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map projections. — coord_map","title":"Map projections. — coord_map","text":"representation portion earth, approximately spherical, onto flat 2D plane requires projection. coord_map . projections account fact actual length (km) one degree longitude varies equator pole. Near equator, ratio lengths one degree latitude one degree longitude approximately 1. Near pole, tends towards infinity length one degree longitude tends towards 0. regions span degrees close poles, setting aspect ratio plot appropriate lat/lon ratio approximates usual mercator projection. coord_quickmap . coord_map elements graphic projected case . coord_quickmap advantage much faster, particular complex plots using geom_tile, expense correctness projection. coordinate system provides full range map projections available mapproj package.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map projections. — coord_map","text":"","code":"coord_map(   projection = \"mercator\",   ...,   orientation = NULL,   xlim = NULL,   ylim = NULL )  coord_quickmap(xlim = NULL, ylim = NULL, expand = TRUE)"},{"path":"https://animint.github.io/animint2/reference/coord_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map projections. — coord_map","text":"projection projection use, see mapproject list ... arguments passed mapproject orientation projection orientation, defaults c(90, 0, mean(range(x))).  optimal many projections, supply . See mapproject information. xlim manually specific x limits (degrees longitude) ylim manually specific y limits (degrees latitude) expand TRUE, default, adds small expansion factor limits ensure data axes overlap. FALSE, limits taken exactly data xlim/ylim.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map projections. — coord_map","text":"","code":"if (require(\"maps\")) { nz <- map_data(\"nz\") # Prepare a map of NZ nzmap <- ggplot(nz, aes(x = long, y = lat, group = group)) +   geom_polygon(fill = \"white\", colour = \"black\")  # Plot it in cartesian coordinates nzmap # With correct mercator projection nzmap + coord_map() # With the aspect ratio approximation nzmap + coord_quickmap()  # Other projections nzmap + coord_map(\"cylindrical\") nzmap + coord_map(\"azequalarea\", orientation = c(-36.92,174.6,0))  states <- map_data(\"state\") usamap <- ggplot(states, aes(long, lat, group = group)) +   geom_polygon(fill = \"white\", colour = \"black\")  # Use cartesian coordinates usamap # With mercator projection usamap + coord_map() usamap + coord_quickmap() # See ?mapproject for coordinate systems and their parameters usamap + coord_map(\"gilbert\") usamap + coord_map(\"lagrange\")  # For most projections, you'll need to set the orientation yourself # as the automatic selection done by mapproject is not available to # ggplot usamap + coord_map(\"orthographic\") usamap + coord_map(\"stereographic\") usamap + coord_map(\"conic\", lat0 = 30) usamap + coord_map(\"bonne\", lat0 = 50)  # World map, using geom_path instead of geom_polygon world <- map_data(\"world\") worldmap <- ggplot(world, aes(x = long, y = lat, group = group)) +   geom_path() +   scale_y_continuous(breaks = (-2:2) * 30) +   scale_x_continuous(breaks = (-4:4) * 45)  # Orthographic projection with default orientation (looking down at North pole) worldmap + coord_map(\"ortho\") # Looking up up at South Pole worldmap + coord_map(\"ortho\", orientation = c(-90, 0, 0)) # Centered on New York (currently has issues with closing polygons) worldmap + coord_map(\"ortho\", orientation = c(41, -74, 0)) } #> Loading required package: maps #> Warning: there is no package called ‘maps’"},{"path":"https://animint.github.io/animint2/reference/coord_munch.html","id":null,"dir":"Reference","previous_headings":"","what":"Munch coordinates data — coord_munch","title":"Munch coordinates data — coord_munch","text":"function \"munches\" lines, dividing line many small pieces can transformed independently. Used inside geom functions.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_munch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Munch coordinates data — coord_munch","text":"","code":"coord_munch(coord, data, range, segment_length = 0.01)"},{"path":"https://animint.github.io/animint2/reference/coord_munch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Munch coordinates data — coord_munch","text":"coord Coordinate system definition. data Data set transform - variables x y chopped small pieces (defined group). variables duplicated needed. range Panel range specification. segment_length Target segment length","code":""},{"path":"https://animint.github.io/animint2/reference/coord_polar.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar coordinates. — coord_polar","title":"Polar coordinates. — coord_polar","text":"polar coordinate system commonly used pie charts, stacked bar chart polar coordinates.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_polar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar coordinates. — coord_polar","text":"","code":"coord_polar(theta = \"x\", start = 0, direction = 1)"},{"path":"https://animint.github.io/animint2/reference/coord_polar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar coordinates. — coord_polar","text":"theta variable map angle (x y) start offset starting point 12 o'clock radians direction 1, clockwise; -1, anticlockwise","code":""},{"path":"https://animint.github.io/animint2/reference/coord_polar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar coordinates. — coord_polar","text":"","code":"# NOTE: Use these plots with caution - polar coordinates has # major perceptual problems.  The main point of these examples is # to demonstrate how these common plots can be described in the # grammar.  Use with EXTREME caution.  #' # A pie chart = stacked bar chart + polar coordinates pie <- ggplot(mtcars, aes(x = factor(1), fill = factor(cyl))) +  geom_bar(width = 1) pie + coord_polar(theta = \"y\")   # \\donttest{  # A coxcomb plot = bar chart + polar coordinates cxc <- ggplot(mtcars, aes(x = factor(cyl))) +   geom_bar(width = 1, colour = \"black\") cxc + coord_polar()  # A new type of plot? cxc + coord_polar(theta = \"y\")   # The bullseye chart pie + coord_polar()   # Hadley's favourite pie chart df <- data.frame(   variable = c(\"does not resemble\", \"resembles\"),   value = c(20, 80) ) ggplot(df, aes(x = \"\", y = value, fill = variable)) +   geom_bar(width = 1, stat = \"identity\") +   scale_fill_manual(values = c(\"red\", \"yellow\")) +   coord_polar(\"y\", start = pi / 3) +   labs(title = \"Pac man\")   # Windrose + doughnut plot if (require(\"ggplot2movies\")) { movies$rrating <- cut_interval(movies$rating, length = 1) movies$budgetq <- cut_number(movies$budget, 4)  doh <- ggplot(movies, aes(x = rrating, fill = budgetq))  # Wind rose doh + geom_bar(width = 1) + coord_polar() # Race track plot doh + geom_bar(width = 0.9, position = \"fill\") + coord_polar(theta = \"y\") } #> Loading required package: ggplot2movies #> Warning: there is no package called ‘ggplot2movies’ # }"},{"path":"https://animint.github.io/animint2/reference/coord_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformed cartesian coordinate system. — coord_trans","title":"Transformed cartesian coordinate system. — coord_trans","text":"coord_trans different scale transformations occurs statistical transformation affect visual appearance geoms - guarantee straight lines continue straight.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformed cartesian coordinate system. — coord_trans","text":"","code":"coord_trans(   x = \"identity\",   y = \"identity\",   limx = NULL,   limy = NULL,   xtrans,   ytrans )"},{"path":"https://animint.github.io/animint2/reference/coord_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformed cartesian coordinate system. — coord_trans","text":"x, y transformers x y axes limx, limy limits x y axes. (Named backward compatibility) xtrans, ytrans Deprecated; use x y instead.","code":""},{"path":"https://animint.github.io/animint2/reference/coord_trans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformed cartesian coordinate system. — coord_trans","text":"current transformations work continuous values - see trans_new list transformations, instructions create .","code":""},{"path":"https://animint.github.io/animint2/reference/coord_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transformed cartesian coordinate system. — coord_trans","text":"","code":"# \\donttest{ # Three ways of doing transformation in ggplot: #  * by transforming the data ggplot(diamonds, aes(log10(carat), log10(price))) +   geom_point()  #  * by transforming the scales ggplot(diamonds, aes(carat, price)) +   geom_point() +   scale_x_log10() +   scale_y_log10()  #  * by transforming the coordinate system: ggplot(diamonds, aes(carat, price)) +   geom_point() +   coord_trans(x = \"log10\", y = \"log10\")   # The difference between transforming the scales and # transforming the coordinate system is that scale # transformation occurs BEFORE statistics, and coordinate # transformation afterwards.  Coordinate transformation also # changes the shape of geoms:  d <- subset(diamonds, carat > 0.5)  ggplot(d, aes(carat, price)) +   geom_point() +   geom_smooth(method = \"lm\") +   scale_x_log10() +   scale_y_log10()   ggplot(d, aes(carat, price)) +   geom_point() +   geom_smooth(method = \"lm\") +   coord_trans(x = \"log10\", y = \"log10\")   # Here I used a subset of diamonds so that the smoothed line didn't # drop below zero, which obviously causes problems on the log-transformed # scale  # With a combination of scale and coordinate transformation, it's # possible to do back-transformations: ggplot(diamonds, aes(carat, price)) +   geom_point() +   geom_smooth(method = \"lm\") +   scale_x_log10() +   scale_y_log10() +   coord_trans(x = scales::exp_trans(10), y = scales::exp_trans(10))   # cf. ggplot(diamonds, aes(carat, price)) +   geom_point() +   geom_smooth(method = \"lm\")   # Also works with discrete scales df <- data.frame(a = abs(rnorm(26)),letters) plot <- ggplot(df,aes(a,letters)) + geom_point()  plot + coord_trans(x = \"log10\")  plot + coord_trans(x = \"sqrt\")  # }"},{"path":"https://animint.github.io/animint2/reference/cut_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut up numeric vector into useful groups. — cut_interval","title":"Cut up numeric vector into useful groups. — cut_interval","text":"cut_interval makes n groups equal range, cut_number makes n groups (approximately) equal numbers observations; cut_width makes groups width width.","code":""},{"path":"https://animint.github.io/animint2/reference/cut_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut up numeric vector into useful groups. — cut_interval","text":"","code":"cut_interval(x, n = NULL, length = NULL, ...)  cut_number(x, n = NULL, ...)  cut_width(   x,   width,   center = NULL,   boundary = NULL,   closed = c(\"right\", \"left\") )"},{"path":"https://animint.github.io/animint2/reference/cut_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut up numeric vector into useful groups. — cut_interval","text":"x numeric vector n number intervals create, length length interval ... arguments passed cut width bin width. center, boundary Specify either position edge center   bin. Since bins aligned, specifying position single bin   (need range data) affects location   bins. specified, uses \"tile layers algorithm\", sets   boundary half binwidth. center integers, width = 1 center = 0.   boundary = 0.5. closed One \"right\" \"left\" indicating whether right left edges bins included bin.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/cut_interval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cut up numeric vector into useful groups. — cut_interval","text":"Randall Prium contributed implementation    cut_width.","code":""},{"path":"https://animint.github.io/animint2/reference/cut_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut up numeric vector into useful groups. — cut_interval","text":"","code":"table(cut_interval(1:100, 10)) #>  #>    [1,10.9] (10.9,20.8] (20.8,30.7] (30.7,40.6] (40.6,50.5] (50.5,60.4]  #>          10          10          10          10          10          10  #> (60.4,70.3] (70.3,80.2] (80.2,90.1]  (90.1,100]  #>          10          10          10          10  table(cut_interval(1:100, 11)) #>  #>   [1,10]  (10,19]  (19,28]  (28,37]  (37,46]  (46,55]  (55,64]  (64,73]  #>       10        9        9        9        9        9        9        9  #>  (73,82]  (82,91] (91,100]  #>        9        9        9   table(cut_number(runif(1000), 10)) #>  #> [0.000382,0.0947]    (0.0947,0.181]     (0.181,0.302]     (0.302,0.407]  #>               100               100               100               100  #>     (0.407,0.498]     (0.498,0.604]     (0.604,0.728]     (0.728,0.814]  #>               100               100               100               100  #>       (0.814,0.9]           (0.9,1]  #>               100               100   table(cut_width(runif(1000), 0.1)) #>  #> [-0.05,0.05]  (0.05,0.15]  (0.15,0.25]  (0.25,0.35]  (0.35,0.45]  (0.45,0.55]  #>           48          110           98           96          110           99  #>  (0.55,0.65]  (0.65,0.75]  (0.75,0.85]  (0.85,0.95]  (0.95,1.05]  #>          100           90          111           93           45  table(cut_width(runif(1000), 0.1, boundary = 0)) #>  #>   [0,0.1] (0.1,0.2] (0.2,0.3] (0.3,0.4] (0.4,0.5] (0.5,0.6] (0.6,0.7] (0.7,0.8]  #>        89       110       102        92       103        97       101       112  #> (0.8,0.9]   (0.9,1]  #>        88       106  table(cut_width(runif(1000), 0.1, center = 0)) #>  #> [-0.05,0.05]  (0.05,0.15]  (0.15,0.25]  (0.25,0.35]  (0.35,0.45]  (0.45,0.55]  #>           48           95          113          117           92           90  #>  (0.55,0.65]  (0.65,0.75]  (0.75,0.85]  (0.85,0.95]  (0.95,1.05]  #>           97          108          107           83           50"},{"path":"https://animint.github.io/animint2/reference/diamonds.html","id":null,"dir":"Reference","previous_headings":"","what":"Prices of 50,000 round cut diamonds — diamonds","title":"Prices of 50,000 round cut diamonds — diamonds","text":"dataset containing prices attributes almost 54,000  diamonds. variables follows:","code":""},{"path":"https://animint.github.io/animint2/reference/diamonds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prices of 50,000 round cut diamonds — diamonds","text":"","code":"diamonds"},{"path":"https://animint.github.io/animint2/reference/diamonds.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prices of 50,000 round cut diamonds — diamonds","text":"data frame 53940 rows 10 variables: price: price US dollars ($326–$18,823) carat: weight diamond (0.2–5.01) cut: quality cut (Fair, Good, Good, Premium, Ideal) color: diamond colour, J (worst) D (best) clarity: measurement clear diamond      (I1 (worst), SI1, SI2, VS1, VS2, VVS1, VVS2, (best)) x: length mm (0–10.74) y: width mm (0–58.9) z: depth mm (0–31.8) depth: total depth percentage = z / mean(x, y) = 2 * z / (x + y) (43–79) table: width top diamond relative widest point (43–95)","code":""},{"path":"https://animint.github.io/animint2/reference/discrete_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete scale constructor. — discrete_scale","title":"Discrete scale constructor. — discrete_scale","text":"Discrete scale constructor.","code":""},{"path":"https://animint.github.io/animint2/reference/discrete_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete scale constructor. — discrete_scale","text":"","code":"discrete_scale(   aesthetics,   scale_name,   palette,   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   expand = waiver(),   na.value = NA,   drop = TRUE,   guide = \"legend\" )"},{"path":"https://animint.github.io/animint2/reference/discrete_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete scale constructor. — discrete_scale","text":"aesthetics names aesthetics scale works scale_name name scale palette palette function called single integer argument (number levels scale) returns values take name name scale - used axis label legend title breaks control breaks guide.  four possible types input: NULL: display breaks character vector giving breaks appear    axis legend. waiver() use default break computation. function, called single argument, character     vector giving limits scale, returns character vector     specifying breaks display. parameter affect way data scaled - affects appearance legend. labels NULL labels, waiver() default labels (labels breaks), character vector length breaks, named character vector whose names used match replacement labels matching breaks. limits character vector specifying data range scale. default order display guides. expand numeric vector length two, giving multiplicative additive constant used expand range scales small gap data axes. defaults (0,0.6) discrete scales (0.05,0) continuous scales. na.value missing values displayed? drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. guide name , actual function, used create guide. See guides info.","code":""},{"path":"https://animint.github.io/animint2/reference/draw_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Key drawing functions — draw_key","title":"Key drawing functions — draw_key","text":"Geom associated function draws key geom needs displayed legend. options built ggplot2.","code":""},{"path":"https://animint.github.io/animint2/reference/draw_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key drawing functions — draw_key","text":"","code":"draw_key_point(data, params, size)  draw_key_abline(data, params, size)  draw_key_rect(data, params, size)  draw_key_polygon(data, params, size)  draw_key_blank(data, params, size)  draw_key_crossbar(data, params, size)  draw_key_path(data, params, size)  draw_key_vpath(data, params, size)  draw_key_dotplot(data, params, size)  draw_key_pointrange(data, params, size)  draw_key_smooth(data, params, size)  draw_key_text(data, params, size)  draw_key_label(data, params, size)  draw_key_vline(data, params, size)"},{"path":"https://animint.github.io/animint2/reference/draw_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key drawing functions — draw_key","text":"data single row data frame containing scaled aesthetics display key params list additional parameters supplied geom. size Width height key mm.","code":""},{"path":"https://animint.github.io/animint2/reference/draw_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key drawing functions — draw_key","text":"grid grob.","code":""},{"path":"https://animint.github.io/animint2/reference/economics.html","id":null,"dir":"Reference","previous_headings":"","what":"US economic time series. — economics","title":"US economic time series. — economics","text":"dataset produced US economic time series data available https://fred.stlouisfed.org/. economics \"wide\" format, economics_long \"long\" format.","code":""},{"path":"https://animint.github.io/animint2/reference/economics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US economic time series. — economics","text":"","code":"economics  economics_long"},{"path":"https://animint.github.io/animint2/reference/economics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US economic time series. — economics","text":"data frame 478 rows 6 variables date.  Month data collection psavert, personal savings rate, pce, personal consumption expenditures, billions dollars, unemploy, number unemployed thousands, uempmed, median duration unemployment, week, pop, total population, thousands, object class data.frame 2870 rows 4 columns.","code":""},{"path":"https://animint.github.io/animint2/reference/element_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme element: blank. This theme element draws nothing, and assigns no space — element_blank","title":"Theme element: blank. This theme element draws nothing, and assigns no space — element_blank","text":"Theme element: blank. theme element draws nothing, assigns space","code":""},{"path":"https://animint.github.io/animint2/reference/element_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme element: blank. This theme element draws nothing, and assigns no space — element_blank","text":"","code":"element_blank()"},{"path":"https://animint.github.io/animint2/reference/element_grob.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate grid grob from theme element — element_grob","title":"Generate grid grob from theme element — element_grob","text":"Generate grid grob theme element","code":""},{"path":"https://animint.github.io/animint2/reference/element_grob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate grid grob from theme element — element_grob","text":"","code":"element_grob(element, ...)"},{"path":"https://animint.github.io/animint2/reference/element_grob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate grid grob from theme element — element_grob","text":"element Theme element, .e. element_rect similar. ... arguments control specific rendering. usually least position. See source code individual methods.","code":""},{"path":"https://animint.github.io/animint2/reference/element_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme element: line. — element_line","title":"Theme element: line. — element_line","text":"Theme element: line.","code":""},{"path":"https://animint.github.io/animint2/reference/element_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme element: line. — element_line","text":"","code":"element_line(   colour = NULL,   size = NULL,   linetype = NULL,   lineend = NULL,   color = NULL )"},{"path":"https://animint.github.io/animint2/reference/element_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme element: line. — element_line","text":"colour line colour size line size linetype line type lineend line end color alias colour","code":""},{"path":"https://animint.github.io/animint2/reference/element_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme element: rectangle. — element_rect","title":"Theme element: rectangle. — element_rect","text":"often used backgrounds borders.","code":""},{"path":"https://animint.github.io/animint2/reference/element_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme element: rectangle. — element_rect","text":"","code":"element_rect(   fill = NULL,   colour = NULL,   size = NULL,   linetype = NULL,   color = NULL )"},{"path":"https://animint.github.io/animint2/reference/element_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme element: rectangle. — element_rect","text":"fill fill colour colour border colour size border size linetype border linetype color alias colour","code":""},{"path":"https://animint.github.io/animint2/reference/element_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme element: text. — element_text","title":"Theme element: text. — element_text","text":"Theme element: text.","code":""},{"path":"https://animint.github.io/animint2/reference/element_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme element: text. — element_text","text":"","code":"element_text(   family = NULL,   face = NULL,   colour = NULL,   size = NULL,   hjust = NULL,   vjust = NULL,   angle = NULL,   lineheight = NULL,   color = NULL,   margin = NULL,   debug = NULL )"},{"path":"https://animint.github.io/animint2/reference/element_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme element: text. — element_text","text":"family font family face font face (\"plain\", \"italic\", \"bold\", \"bold.italic\") colour text colour size text size (pts) hjust horizontal justification ([0, 1]) vjust vertical justification ([0, 1]) angle angle ([0, 360]) lineheight line height color alias colour margin margins around text. See margin details. creating theme, margins placed side text facing towards center plot. debug TRUE, aids visual debugging drawing solid rectangle behind complete text area, point label anchored.","code":""},{"path":"https://animint.github.io/animint2/reference/expand_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand the plot limits with data. — expand_limits","title":"Expand the plot limits with data. — expand_limits","text":"panels plots.  function thin wrapper around geom_blank makes easy add values.","code":""},{"path":"https://animint.github.io/animint2/reference/expand_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand the plot limits with data. — expand_limits","text":"","code":"expand_limits(...)"},{"path":"https://animint.github.io/animint2/reference/expand_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand the plot limits with data. — expand_limits","text":"... named list aesthetics specifying value (values) included scale.","code":""},{"path":"https://animint.github.io/animint2/reference/expand_limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand the plot limits with data. — expand_limits","text":"","code":"p <- ggplot(mtcars, aes(mpg, wt)) + geom_point() p + expand_limits(x = 0)  p + expand_limits(y = c(1, 9))  p + expand_limits(x = 0, y = 0)   ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(colour = cyl)) +   expand_limits(colour = seq(2, 10, by = 2))  ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(colour = factor(cyl))) +   expand_limits(colour = factor(seq(2, 10, by = 2)))"},{"path":"https://animint.github.io/animint2/reference/facet.html","id":null,"dir":"Reference","previous_headings":"","what":"Facet specification. — facet","title":"Facet specification. — facet","text":"Create new facetting specification.  internal use .","code":""},{"path":"https://animint.github.io/animint2/reference/facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facet specification. — facet","text":"","code":"facet(..., shrink = TRUE, subclass = c())"},{"path":"https://animint.github.io/animint2/reference/facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facet specification. — facet","text":"... object fields shrink shrink scales fit output statistics, raw data","code":""},{"path":"https://animint.github.io/animint2/reference/facet_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Lay out panels in a grid. — facet_grid","title":"Lay out panels in a grid. — facet_grid","text":"Lay panels grid.","code":""},{"path":"https://animint.github.io/animint2/reference/facet_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lay out panels in a grid. — facet_grid","text":"","code":"facet_grid(   facets,   margins = FALSE,   scales = \"fixed\",   space = \"fixed\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   switch = NULL,   drop = TRUE )"},{"path":"https://animint.github.io/animint2/reference/facet_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lay out panels in a grid. — facet_grid","text":"facets formula rows (tabular display) LHS columns (tabular display) RHS; dot formula used indicate faceting dimension (either row column). formula can also provided string instead classical formula object margins either logical value character vector. Margins additional facets contain data possible values faceting variables. FALSE, additional facets included (default). TRUE, margins included faceting variables. specified character vector, names variables margins created. scales scales shared across facets (default, \"fixed\"), vary across rows (\"free_x\"), columns (\"free_y\"), rows columns (\"free\") space \"fixed\", default, panels size.  \"free_y\" height proportional length  y scale; \"free_x\" width proportional length x scale; \"free\" height width vary.  setting effect unless appropriate scales also vary. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one formulae type ~cyl + . output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). See label_value details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. switch default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\". drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data.","code":""},{"path":"https://animint.github.io/animint2/reference/facet_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lay out panels in a grid. — facet_grid","text":"","code":"p <- ggplot(mpg, aes(displ, cty)) + geom_point()  p + facet_grid(. ~ cyl)  p + facet_grid(drv ~ .)  p + facet_grid(drv ~ cyl)   # To change plot order of facet grid, # change the order of variable levels with factor()  # If you combine a facetted dataset with a dataset that lacks those # facetting variables, the data will be repeated across the missing # combinations: df <- data.frame(displ = mean(mpg$displ), cty = mean(mpg$cty)) p +   facet_grid(. ~ cyl) +   geom_point(data = df, colour = \"red\", size = 2)   # Free scales ------------------------------------------------------- # You can also choose whether the scales should be constant # across all panels (the default), or whether they should be allowed # to vary mt <- ggplot(mtcars, aes(mpg, wt, colour = factor(cyl))) +   geom_point()  mt + facet_grid(. ~ cyl, scales = \"free\")   # If scales and space are free, then the mapping between position # and values in the data will be the same across all panels. This # is particularly useful for categorical axes ggplot(mpg, aes(drv, model)) +   geom_point() +   facet_grid(manufacturer ~ ., scales = \"free\", space = \"free\") +   theme(strip.text.y = element_text(angle = 0))   # Facet labels ------------------------------------------------------ p <- ggplot(mtcars, aes(wt, mpg)) + geom_point() p   # label_both() displays both variable name and value p + facet_grid(vs ~ cyl, labeller = label_both)   # label_parsed() parses text into mathematical expressions, see ?plotmath mtcars$cyl2 <- factor(mtcars$cyl, labels = c(\"alpha\", \"beta\", \"sqrt(x, y)\")) ggplot(mtcars, aes(wt, mpg)) +   geom_point() +   facet_grid(. ~ cyl2, labeller = label_parsed)   # label_bquote() makes it easy to construct math expressions p + facet_grid(. ~ vs, labeller = label_bquote(cols = alpha ^ .(vs)))   # The facet strips can be displayed near the axes with switch data <- transform(mtcars,   am = factor(am, levels = 0:1, c(\"Automatic\", \"Manual\")),   gear = factor(gear, levels = 3:5, labels = c(\"Three\", \"Four\", \"Five\")) ) p <- ggplot(data, aes(mpg, disp)) + geom_point() p + facet_grid(am ~ gear, switch = \"both\")  # It looks better without boxes around the strips p + facet_grid(am ~ gear, switch = \"both\") +   theme(strip.background = element_blank())   # Margins ---------------------------------------------------------- # \\donttest{ # Margins can be specified by logically (all yes or all no) or by specific # variables as (character) variable names mg <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point() mg + facet_grid(vs + am ~ gear)  mg + facet_grid(vs + am ~ gear, margins = TRUE)  mg + facet_grid(vs + am ~ gear, margins = \"am\")  # when margins are made over \"vs\", since the facets for \"am\" vary # within the values of \"vs\", the marginal facet for \"vs\" is also # a margin over \"am\". mg + facet_grid(vs + am ~ gear, margins = \"vs\")  mg + facet_grid(vs + am ~ gear, margins = \"gear\")  mg + facet_grid(vs + am ~ gear, margins = c(\"gear\", \"am\"))  # }"},{"path":"https://animint.github.io/animint2/reference/facet_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Facet specification: a single panel. — facet_null","title":"Facet specification: a single panel. — facet_null","text":"Facet specification: single panel.","code":""},{"path":"https://animint.github.io/animint2/reference/facet_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facet specification: a single panel. — facet_null","text":"","code":"facet_null(shrink = TRUE)"},{"path":"https://animint.github.io/animint2/reference/facet_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facet specification: a single panel. — facet_null","text":"shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary.","code":""},{"path":"https://animint.github.io/animint2/reference/facet_null.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facet specification: a single panel. — facet_null","text":"","code":"# facet_null is the default facetting specification if you # don't override it with facet_grid or facet_wrap ggplot(mtcars, aes(mpg, wt)) + geom_point()"},{"path":"https://animint.github.io/animint2/reference/facet_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a 1d ribbon of panels into 2d. — facet_wrap","title":"Wrap a 1d ribbon of panels into 2d. — facet_wrap","text":"displays roughly rectangular, categorical variable many levels, make sense try display one row (one column). solve dilemma, facet_wrap wraps 1d sequence panels 2d, making best use screen real estate.","code":""},{"path":"https://animint.github.io/animint2/reference/facet_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a 1d ribbon of panels into 2d. — facet_wrap","text":"","code":"facet_wrap(   facets,   nrow = NULL,   ncol = NULL,   scales = \"fixed\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   switch = NULL,   drop = TRUE,   dir = \"h\" )"},{"path":"https://animint.github.io/animint2/reference/facet_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a 1d ribbon of panels into 2d. — facet_wrap","text":"facets Either formula character vector. Use either one sided formula, ~+ b, character vector, c(\"\", \"b\"). nrow, ncol Number rows columns. scales Scales fixed (\"fixed\", default), free (\"free\"), free one dimension (\"free_x\", \"free_y\"). shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one formulae type ~cyl + . output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). See label_value details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. switch default, labels displayed top plot. switch \"x\", displayed bottom. \"y\", displayed left, near y axis. drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. dir Direction: either \"h\" horizontal, default, \"v\", vertical.","code":""},{"path":"https://animint.github.io/animint2/reference/facet_wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a 1d ribbon of panels into 2d. — facet_wrap","text":"","code":"ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(~class)   # Control the number of rows and columns with nrow and ncol ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(~class, nrow = 4)   # \\donttest{ # You can facet by multiple variables ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(~ cyl + drv)  # Or use a character vector: ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(c(\"cyl\", \"drv\"))   # Use the `labeller` option to control how labels are printed: ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(c(\"cyl\", \"drv\"), labeller = \"label_both\")   # To change the order in which the panels appear, change the levels # of the underlying factor. mpg$class2 <- reorder(mpg$class, mpg$displ) ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(~class2)   # By default, the same scales are used for all panels. You can allow # scales to vary across the panels with the `scales` argument. # Free scales make it easier to see patterns within each panel, but # harder to compare across panels. ggplot(mpg, aes(displ, hwy)) +   geom_point() +   facet_wrap(~class, scales = \"free\")   # To repeat the same data in every panel, simply construct a data frame # that does not contain the facetting variable. ggplot(mpg, aes(displ, hwy)) +   geom_point(data = transform(mpg, class = NULL), colour = \"grey85\") +   geom_point() +   facet_wrap(~class)   # Use `switch` to display the facet labels near an axis, acting as # a subtitle for this axis. This is typically used with free scales # and a theme without boxes around strip labels. ggplot(economics_long, aes(date, value)) +   geom_line() +   facet_wrap(~variable, scales = \"free_y\", nrow = 2, switch = \"x\") +   theme(strip.background = element_blank())  # }"},{"path":"https://animint.github.io/animint2/reference/faithfuld.html","id":null,"dir":"Reference","previous_headings":"","what":"2d density estimate of Old Faithful data — faithfuld","title":"2d density estimate of Old Faithful data — faithfuld","text":"2d density estimate waiting eruptions variables data faithful.","code":""},{"path":"https://animint.github.io/animint2/reference/faithfuld.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"2d density estimate of Old Faithful data — faithfuld","text":"","code":"faithfuld"},{"path":"https://animint.github.io/animint2/reference/faithfuld.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"2d density estimate of Old Faithful data — faithfuld","text":"data frame 5,625 observations 3 variables.","code":""},{"path":"https://animint.github.io/animint2/reference/format.gganimintproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a gganimintproto object — format.gganimintproto","title":"Format a gganimintproto object — format.gganimintproto","text":"Format gganimintproto object","code":""},{"path":"https://animint.github.io/animint2/reference/format.gganimintproto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a gganimintproto object — format.gganimintproto","text":"","code":"# S3 method for class 'gganimintproto' format(x, ..., flat = TRUE)"},{"path":"https://animint.github.io/animint2/reference/format.gganimintproto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a gganimintproto object — format.gganimintproto","text":"x gganimintproto object print. ... gganimintproto object print method, arguments passed . Otherwise, arguments unused. flat TRUE (default), show flattened list local inherited members. FALSE, show inheritance hierarchy.","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortify a model with data. — fortify","title":"Fortify a model with data. — fortify","text":"Rather using function, now recomend using broom package, implements much wider range methods. fortify may deprecated future.","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortify a model with data. — fortify","text":"","code":"fortify(model, data, ...)"},{"path":"https://animint.github.io/animint2/reference/fortify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortify a model with data. — fortify","text":"model model R object convert data frame data original dataset, needed ... arguments passed methods","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/fortify.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Supplement the data fitted to a linear model with model fit statistics. — fortify.lm","title":"Supplement the data fitted to a linear model with model fit statistics. — fortify.lm","text":"missing values model data, may need refit model na.action = na.exclude.","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supplement the data fitted to a linear model with model fit statistics. — fortify.lm","text":"","code":"# S3 method for class 'lm' fortify(model, data = model$model, ...)"},{"path":"https://animint.github.io/animint2/reference/fortify.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supplement the data fitted to a linear model with model fit statistics. — fortify.lm","text":"model linear model data data set, defaults data used fit model ... used method","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supplement the data fitted to a linear model with model fit statistics. — fortify.lm","text":"original data extra columns: .hat Diagonal hat matrix .sigma Estimate residual standard deviation     corresponding observation dropped model .cooksd Cooks distance, cooks.distance .fitted Fitted values model .resid Residuals .stdresid Standardised residuals","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supplement the data fitted to a linear model with model fit statistics. — fortify.lm","text":"","code":"mod <- lm(mpg ~ wt, data = mtcars) head(fortify(mod)) #>                    mpg    wt       .hat   .sigma      .cooksd  .fitted #> Mazda RX4         21.0 2.620 0.04326896 3.067494 1.327407e-02 23.28261 #> Mazda RX4 Wag     21.0 2.875 0.03519677 3.093068 1.723963e-03 21.91977 #> Datsun 710        22.8 2.320 0.05837573 3.072127 1.543937e-02 24.88595 #> Hornet 4 Drive    21.4 3.215 0.03125017 3.088268 3.020558e-03 20.10265 #> Hornet Sportabout 18.7 3.440 0.03292182 3.097722 7.599578e-05 18.90014 #> Valiant           18.1 3.460 0.03323551 3.095184 9.210650e-04 18.79325 #>                       .resid   .stdresid #> Mazda RX4         -2.2826106 -0.76616765 #> Mazda RX4 Wag     -0.9197704 -0.30743051 #> Datsun 710        -2.0859521 -0.70575249 #> Hornet 4 Drive     1.2973499  0.43275114 #> Hornet Sportabout -0.2001440 -0.06681879 #> Valiant           -0.6932545 -0.23148309 head(fortify(mod, mtcars)) #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb       .hat #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 0.04326896 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 0.03519677 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 0.05837573 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 0.03125017 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 0.03292182 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 0.03323551 #>                     .sigma      .cooksd  .fitted     .resid   .stdresid #> Mazda RX4         3.067494 1.327407e-02 23.28261 -2.2826106 -0.76616765 #> Mazda RX4 Wag     3.093068 1.723963e-03 21.91977 -0.9197704 -0.30743051 #> Datsun 710        3.072127 1.543937e-02 24.88595 -2.0859521 -0.70575249 #> Hornet 4 Drive    3.088268 3.020558e-03 20.10265  1.2973499  0.43275114 #> Hornet Sportabout 3.097722 7.599578e-05 18.90014 -0.2001440 -0.06681879 #> Valiant           3.095184 9.210650e-04 18.79325 -0.6932545 -0.23148309  plot(mod, which = 1)   ggplot(mod, aes(.fitted, .resid)) +   geom_point() +   geom_hline(yintercept = 0) +   geom_smooth(se = FALSE)   ggplot(mod, aes(.fitted, .stdresid)) +   geom_point() +   geom_hline(yintercept = 0) +   geom_smooth(se = FALSE)   ggplot(fortify(mod, mtcars), aes(.fitted, .stdresid)) +   geom_point(aes(colour = factor(cyl)))   ggplot(fortify(mod, mtcars), aes(mpg, .stdresid)) +   geom_point(aes(colour = factor(cyl)))   plot(mod, which = 2)  ggplot(mod) +   stat_qq(aes(sample = .stdresid)) +   geom_abline()   plot(mod, which = 3)  ggplot(mod, aes(.fitted, sqrt(abs(.stdresid)))) +   geom_point() +   geom_smooth(se = FALSE)   plot(mod, which = 4)  ggplot(mod, aes(seq_along(.cooksd), .cooksd)) +   geom_bar(stat = \"identity\")   plot(mod, which = 5)  ggplot(mod, aes(.hat, .stdresid)) +   geom_vline(size = 2, colour = \"white\", xintercept = 0) +   geom_hline(size = 2, colour = \"white\", yintercept = 0) +   geom_point() + geom_smooth(se = FALSE)   ggplot(mod, aes(.hat, .stdresid)) +   geom_point(aes(size = .cooksd)) +   geom_smooth(se = FALSE, size = 0.5)   plot(mod, which = 6)  ggplot(mod, aes(.hat, .cooksd)) +   geom_vline(xintercept = 0, colour = NA) +   geom_abline(slope = seq(0, 3, by = 0.5), colour = \"white\") +   geom_smooth(se = FALSE) +   geom_point()   ggplot(mod, aes(.hat, .cooksd)) +   geom_point(aes(size = .cooksd / .hat)) +   scale_size_area()"},{"path":"https://animint.github.io/animint2/reference/fortify.map.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortify method for map objects. — fortify.map","title":"Fortify method for map objects. — fortify.map","text":"function turns map data frame can easily plotted ggplot2.","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortify method for map objects. — fortify.map","text":"","code":"# S3 method for class 'map' fortify(model, data, ...)"},{"path":"https://animint.github.io/animint2/reference/fortify.map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortify method for map objects. — fortify.map","text":"model map object data used method ... used method","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/fortify.map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fortify method for map objects. — fortify.map","text":"","code":"if (require(\"maps\")) { ca <- map(\"county\", \"ca\", plot = FALSE, fill = TRUE) head(fortify(ca)) ggplot(ca, aes(long, lat)) +   geom_polygon(aes(group = group))  tx <- map(\"county\", \"texas\", plot = FALSE, fill = TRUE) head(fortify(tx)) ggplot(tx, aes(long, lat)) +   geom_polygon(aes(group = group), colour = \"white\") } #> Loading required package: maps #> Warning: there is no package called ‘maps’"},{"path":"https://animint.github.io/animint2/reference/fortify.sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Fortify method for classes from the sp package. — fortify.sp","title":"Fortify method for classes from the sp package. — fortify.sp","text":"figure correct variable name region, inspect .data.frame(model).","code":""},{"path":"https://animint.github.io/animint2/reference/fortify.sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fortify method for classes from the sp package. — fortify.sp","text":"","code":"# S3 method for class 'SpatialPolygonsDataFrame' fortify(model, data, ...)  # S3 method for class 'SpatialPolygons' fortify(model, data, ...)  # S3 method for class 'Polygons' fortify(model, data, ...)  # S3 method for class 'Polygon' fortify(model, data, ...)  # S3 method for class 'SpatialLinesDataFrame' fortify(model, data, ...)  # S3 method for class 'Lines' fortify(model, data, ...)  # S3 method for class 'Line' fortify(model, data, ...)"},{"path":"https://animint.github.io/animint2/reference/fortify.sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fortify method for classes from the sp package. — fortify.sp","text":"model SpatialPolygonsDataFrame convert dataframe. data used method ... used method","code":""},{"path":"https://animint.github.io/animint2/reference/g_train_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Learn the layout of panels within a plot. — g_train_layout","title":"Learn the layout of panels within a plot. — g_train_layout","text":"determined facet, returns data frame, joined data plotted tells us panel appear , panel appears grid, scales uses.","code":""},{"path":"https://animint.github.io/animint2/reference/g_train_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learn the layout of panels within a plot. — g_train_layout","text":"","code":"g_train_layout(panel, facet, data, plot_data)"},{"path":"https://animint.github.io/animint2/reference/g_train_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learn the layout of panels within a plot. — g_train_layout","text":"panel panel object train facet facetting specification data list data frames (one layer), one plot plot_data default data frame","code":""},{"path":"https://animint.github.io/animint2/reference/g_train_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Learn the layout of panels within a plot. — g_train_layout","text":"updated panel object","code":""},{"path":"https://animint.github.io/animint2/reference/g_train_layout.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Learn the layout of panels within a plot. — g_train_layout","text":"well layout info, function also adds empty lists house x y scales.","code":""},{"path":"https://animint.github.io/animint2/reference/generation.loci.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolution simulation — generation.loci","title":"Evolution simulation — generation.loci","text":"Allele frequencies 100 loci 12 populations simulated   100 generations.","code":""},{"path":"https://animint.github.io/animint2/reference/generation.loci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolution simulation — generation.loci","text":"","code":"data(generation.loci)"},{"path":"https://animint.github.io/animint2/reference/generation.loci.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Evolution simulation — generation.loci","text":"data frame 120000 observations following 4 variables. locus numeric vector population numeric vector generation numeric vector frequency numeric vector color factor: blue, red, neutral type factor: balancing, none, positive","code":""},{"path":"https://animint.github.io/animint2/reference/generation.loci.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Evolution simulation — generation.loci","text":"Data generated using nicholsonppp::sim.drift.selection, see code etc/generation.loci.R.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_abline.html","id":null,"dir":"Reference","previous_headings":"","what":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","title":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","text":"paired geoms stats add straight lines plot, either horizontal, vertical specified slope intercept. useful annotating plots.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_abline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","text":"","code":"geom_abline(   mapping = NULL,   data = NULL,   ...,   slope,   intercept,   na.rm = FALSE,   show.legend = NA )  geom_hline(   mapping = NULL,   data = NULL,   ...,   yintercept,   na.rm = FALSE,   show.legend = NA )  geom_vline(   mapping = NULL,   data = NULL,   ...,   xintercept,   na.rm = FALSE,   show.legend = NA )"},{"path":"https://animint.github.io/animint2/reference/geom_abline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. xintercept, yintercept, slope, intercept Parameters control position line. set, data, mapping show.legend overridden","code":""},{"path":"https://animint.github.io/animint2/reference/geom_abline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","text":"geoms act slightly different geoms. can supply parameters two ways: either arguments layer function, via aesthetics. use arguments, e.g. geom_abline(intercept = 0, slope = 1), behind scenes geom makes new data frame containing just data supplied. means lines facets; want vary across facets, construct data frame use aesthetics. Unlike geoms, geoms inherit aesthetics plot default, understand x y aesthetics commonly set plot. also affect x y scales.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_abline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","text":"geoms drawn using geom_line support aesthetics: alpha, colour, linetype size. also aesthetics control position line: geom_vline: xintercept geom_hline: yintercept geom_abline: slope intercept","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_abline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lines: horizontal, vertical, and specified by slope and intercept. — geom_abline","text":"","code":"p <- ggplot(mtcars, aes(wt, mpg)) + geom_point()  # Fixed values p + geom_vline(xintercept = 5)  p + geom_vline(xintercept = 1:5)  p + geom_hline(yintercept = 20)   p + geom_abline() # Can't see it - outside the range of the data  p + geom_abline(intercept = 20)   # Calculate slope and intercept of line of best fit coef(lm(mpg ~ wt, data = mtcars)) #> (Intercept)          wt  #>   37.285126   -5.344472  p + geom_abline(intercept = 37, slope = -5)  # But this is easier to do with geom_smooth: p + geom_smooth(method = \"lm\", se = FALSE)   # To show different lines in different facets, use aesthetics p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   facet_wrap(~ cyl)  mean_wt <- data.frame(cyl = c(4, 6, 8), wt = c(2.28, 3.11, 4.00)) p + geom_hline(aes(yintercept = wt), mean_wt)   # You can also control other aesthetics ggplot(mtcars, aes(mpg, wt, colour = wt)) +   geom_point() +   geom_hline(aes(yintercept = wt, colour = wt), mean_wt) +   facet_wrap(~ cyl)"},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Bars, rectangles with bases on x-axis — geom_bar","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"two types bar charts, determined mapped bar height. default, geom_bar uses stat=\"count\" makes height bar proportion number cases group (weight aethetic supplied, sum weights). want heights bars represent values data, use stat=\"identity\" map variable y aesthetic.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"","code":"geom_bar(   mapping = NULL,   data = NULL,   stat = \"count\",   position = \"stack\",   ...,   width = NULL,   binwidth = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_count(   mapping = NULL,   data = NULL,   geom = \"bar\",   position = \"stack\",   ...,   width = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. width Bar width. default, set 90% resolution data. binwidth geom_bar longer binwidth argument - use get warning telling use geom_histogram instead. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Override default connection geom_bar stat_count.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"bar chart maps height bar variable, base bar must always shown produce valid visual comparison. make sense use log-scaled y axis bar chart. default, multiple x's occurring place stacked atop one another position_stack. want dodged side--side, see position_dodge. Finally, position_fill shows relative proportions x stacking bars stretching squashing height.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"geom_bar understands following aesthetics (required aesthetics bold): x alpha colour fill linetype size","code":""},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"count number points bin prop groupwise proportion","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bars, rectangles with bases on x-axis — geom_bar","text":"","code":"# geom_bar is designed to make it easy to create bar charts that show # counts (or sums of weights) g <- ggplot(mpg, aes(class)) # Number of cars in each class: g + geom_bar()  # Total engine displacement of each class g + geom_bar(aes(weight = displ))   # To show (e.g.) means, you need stat = \"identity\" df <- data.frame(trt = c(\"a\", \"b\", \"c\"), outcome = c(2.3, 1.9, 3.2)) ggplot(df, aes(trt, outcome)) +   geom_bar(stat = \"identity\")  # But geom_point() display exactly the same information and doesn't # require the y-axis to touch zero. ggplot(df, aes(trt, outcome)) +   geom_point()   # You can also use geom_bar() with continuous data, in which case # it will show counts at unique locations df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4))) ggplot(df, aes(x)) + geom_bar()  # cf. a histogram of the same data ggplot(df, aes(x)) + geom_histogram(binwidth = 0.5)   # \\donttest{ # Bar charts are automatically stacked when multiple bars are placed # at the same location g + geom_bar(aes(fill = drv))   # You can instead dodge, or fill them g + geom_bar(aes(fill = drv), position = \"dodge\")  g + geom_bar(aes(fill = drv), position = \"fill\")   # To change plot order of bars, change levels in underlying factor reorder_size <- function(x) {   factor(x, levels = names(sort(table(x)))) } ggplot(mpg, aes(reorder_size(class))) + geom_bar()  # }"},{"path":"https://animint.github.io/animint2/reference/geom_bin2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Add heatmap of 2d bin counts. — geom_bin2d","title":"Add heatmap of 2d bin counts. — geom_bin2d","text":"Add heatmap 2d bin counts.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_bin2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add heatmap of 2d bin counts. — geom_bin2d","text":"","code":"geom_bin2d(   mapping = NULL,   data = NULL,   stat = \"bin2d\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_bin_2d(   mapping = NULL,   data = NULL,   geom = \"tile\",   position = \"identity\",   ...,   bins = 30,   binwidth = NULL,   drop = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_bin2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add heatmap of 2d bin counts. — geom_bin2d","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Use override default connection geom_bin2d stat_bin2d. bins numeric vector giving number bins vertical horizontal directions. Set 30 default. binwidth Numeric vector giving bin width vertical horizontal directions. Overrides bins set. drop TRUE removes cells 0 counts.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_bin2d.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add heatmap of 2d bin counts. — geom_bin2d","text":"stat_bin2d understands following aesthetics (required aesthetics bold): x y fill","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_bin2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add heatmap of 2d bin counts. — geom_bin2d","text":"","code":"d <- ggplot(diamonds, aes(x, y)) + xlim(4, 10) + ylim(4, 10) d + geom_bin2d() #> Warning: Removed 478 rows containing non-finite values (stat_bin2d).   # You can control the size of the bins by specifying the number of # bins in each direction: d + geom_bin2d(bins = 10) #> Warning: Removed 478 rows containing non-finite values (stat_bin2d). #> Warning: Removed 4 rows containing missing values (geom_bin2d).  d + geom_bin2d(bins = 30) #> Warning: Removed 478 rows containing non-finite values (stat_bin2d).   # Or by specifying the width of the bins d + geom_bin2d(binwidth = c(0.1, 0.1)) #> Warning: Removed 478 rows containing non-finite values (stat_bin2d)."},{"path":"https://animint.github.io/animint2/reference/geom_blank.html","id":null,"dir":"Reference","previous_headings":"","what":"Blank, draws nothing. — geom_blank","title":"Blank, draws nothing. — geom_blank","text":"blank geom draws nothing, can useful way ensuring common scales different plots.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_blank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blank, draws nothing. — geom_blank","text":"","code":"geom_blank(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_blank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blank, draws nothing. — geom_blank","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_blank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blank, draws nothing. — geom_blank","text":"","code":"ggplot(mtcars, aes(wt, mpg))  # Nothing to see here!"},{"path":"https://animint.github.io/animint2/reference/geom_contour.html","id":null,"dir":"Reference","previous_headings":"","what":"Display contours of a 3d surface in 2d. — geom_contour","title":"Display contours of a 3d surface in 2d. — geom_contour","text":"Display contours 3d surface 2d.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_contour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display contours of a 3d surface in 2d. — geom_contour","text":"","code":"geom_contour(   mapping = NULL,   data = NULL,   stat = \"contour\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 1,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_contour(   mapping = NULL,   data = NULL,   geom = \"contour\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_contour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display contours of a 3d surface in 2d. — geom_contour","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. lineend Line end style (round, butt, square) linejoin Line join style (round, mitre, bevel) linemitre Line mitre limit (number greater 1) na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom geometric object use display data","code":""},{"path":"https://animint.github.io/animint2/reference/geom_contour.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Display contours of a 3d surface in 2d. — geom_contour","text":"geom_contour understands following aesthetics (required aesthetics bold): x y alpha colour linetype size weight","code":""},{"path":"https://animint.github.io/animint2/reference/geom_contour.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Display contours of a 3d surface in 2d. — geom_contour","text":"level height contour","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_contour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display contours of a 3d surface in 2d. — geom_contour","text":"","code":"#' # Basic plot v <- ggplot(faithfuld, aes(waiting, eruptions, z = density)) v + geom_contour()   # Or compute from raw data ggplot(faithful, aes(waiting, eruptions)) +   geom_density_2d()   # \\donttest{ # Setting bins creates evenly spaced contours in the range of the data v + geom_contour(bins = 2)  v + geom_contour(bins = 10)   # Setting binwidth does the same thing, parameterised by the distance # between contours v + geom_contour(binwidth = 0.01)  v + geom_contour(binwidth = 0.001)   # Other parameters v + geom_contour(aes(colour = ..level..))  v + geom_contour(colour = \"red\")  v + geom_raster(aes(fill = density)) +   geom_contour(colour = \"white\")  # }"},{"path":"https://animint.github.io/animint2/reference/geom_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of observations at each location. — geom_count","title":"Count the number of observations at each location. — geom_count","text":"variant geom_point counts number observations location, maps count point size. useful discrete data.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of observations at each location. — geom_count","text":"","code":"geom_count(   mapping = NULL,   data = NULL,   stat = \"sum\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_sum(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of observations at each location. — geom_count","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Use override default connection geom_count stat_sum.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_count.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Count the number of observations at each location. — geom_count","text":"geom_point understands following aesthetics (required aesthetics bold): x y alpha colour fill shape size stroke","code":""},{"path":"https://animint.github.io/animint2/reference/geom_count.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Count the number of observations at each location. — geom_count","text":"n number observations position prop percent points panel position","code":""},{"path":"https://animint.github.io/animint2/reference/geom_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of observations at each location. — geom_count","text":"","code":"ggplot(mpg, aes(cty, hwy)) +  geom_point()   ggplot(mpg, aes(cty, hwy)) +  geom_count()   # Best used in conjunction with scale_size_area which ensures that # counts of zero would be given size 0. Doesn't make much different # here because the smallest count is already close to 0. ggplot(mpg, aes(cty, hwy)) +  geom_count()   scale_size_area() #> <ScaleContinuous> #>  Range:   #>  Limits:    0 --    1  # Display proportions instead of counts ------------------------------------- # By default, all categorical variables in the plot form the groups. # Specifying geom_count without a group identifier leads to a plot which is # not useful: d <- ggplot(diamonds, aes(x = cut, y = clarity)) d + geom_count(aes(size = ..prop..))  # To correct this problem and achieve a more desirable plot, we need # to specify which group the proportion is to be calculated over. d + geom_count(aes(size = ..prop.., group = 1)) +   scale_size_area(max_size = 10)   # Or group by x/y variables to have rows/columns sum to 1. d + geom_count(aes(size = ..prop.., group = cut)) +   scale_size_area(max_size = 10)  d + geom_count(aes(size = ..prop.., group = clarity)) +   scale_size_area(max_size = 10)"},{"path":"https://animint.github.io/animint2/reference/geom_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a smooth density estimate. — geom_density","title":"Display a smooth density estimate. — geom_density","text":"kernel density estimate, useful display distribution variables underlying smoothness.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a smooth density estimate. — geom_density","text":"","code":"geom_density(   mapping = NULL,   data = NULL,   stat = \"density\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_density(   mapping = NULL,   data = NULL,   geom = \"area\",   position = \"stack\",   ...,   bw = \"nrd0\",   adjust = 1,   kernel = \"gaussian\",   trim = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a smooth density estimate. — geom_density","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Use override default connection geom_density stat_density. bw smoothing bandwidth used, see density details adjust adjustment bandwidth, see density details kernel kernel used density estimation, see density details trim parameter matters displaying multiple densities one plot. FALSE, default, density computed full range data. TRUE, density computed range group: typically means estimated x values line-, hence able stack density values.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_density.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Display a smooth density estimate. — geom_density","text":"geom_density understands following aesthetics (required aesthetics bold): x y alpha colour fill linetype size weight","code":""},{"path":"https://animint.github.io/animint2/reference/geom_density.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Display a smooth density estimate. — geom_density","text":"density density estimate count density * number points - useful stacked density      plots scaled density estimate, scaled maximum 1","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a smooth density estimate. — geom_density","text":"","code":"ggplot(diamonds, aes(carat)) +   geom_density()   ggplot(diamonds, aes(carat)) +   geom_density(adjust = 1/5)  ggplot(diamonds, aes(carat)) +   geom_density(adjust = 5)   ggplot(diamonds, aes(depth, colour = cut)) +   geom_density() +   xlim(55, 70) #> Warning: Removed 45 rows containing non-finite values (stat_density).  ggplot(diamonds, aes(depth, fill = cut, colour = cut)) +   geom_density(alpha = 0.1) +   xlim(55, 70) #> Warning: Removed 45 rows containing non-finite values (stat_density).   # \\donttest{ # Stacked density plots: if you want to create a stacked density plot, you # probably want to 'count' (density * n) variable instead of the default # density  # Loses marginal densities ggplot(diamonds, aes(carat, fill = cut)) +   geom_density(position = \"stack\")  # Preserves marginal densities ggplot(diamonds, aes(carat, ..count.., fill = cut)) +   geom_density(position = \"stack\")   # You can use position=\"fill\" to produce a conditional density estimate ggplot(diamonds, aes(carat, ..count.., fill = cut)) +   geom_density(position = \"fill\")  # }"},{"path":"https://animint.github.io/animint2/reference/geom_density_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Contours from a 2d density estimate. — geom_density_2d","title":"Contours from a 2d density estimate. — geom_density_2d","text":"Perform 2D kernel density estimation using kde2d display results contours. can useful dealing overplotting.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_density_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contours from a 2d density estimate. — geom_density_2d","text":"","code":"geom_density_2d(   mapping = NULL,   data = NULL,   stat = \"density2d\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 1,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_density_2d(   mapping = NULL,   data = NULL,   geom = \"density_2d\",   position = \"identity\",   ...,   contour = TRUE,   n = 100,   h = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_density_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contours from a 2d density estimate. — geom_density_2d","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. lineend Line end style (round, butt, square) linejoin Line join style (round, mitre, bevel) linemitre Line mitre limit (number greater 1) na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Use override default connection geom_density_2d stat_density_2d. contour TRUE, contour results 2d density estimation n number grid points direction h Bandwidth (vector length two). NULL, estimated using bandwidth.nrd.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_density_2d.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Contours from a 2d density estimate. — geom_density_2d","text":"geom_density_2d understands following aesthetics (required aesthetics bold): x y alpha colour linetype size","code":""},{"path":"https://animint.github.io/animint2/reference/geom_density_2d.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Contours from a 2d density estimate. — geom_density_2d","text":"stat_contour","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_density_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contours from a 2d density estimate. — geom_density_2d","text":"","code":"m <- ggplot(faithful, aes(x = eruptions, y = waiting)) +  geom_point() +  xlim(0.5, 6) +  ylim(40, 110) m + geom_density_2d()  # \\donttest{ m + stat_density_2d(aes(fill = ..level..), geom = \"polygon\") #> Warning: NAs introduced by coercion   set.seed(4393) dsmall <- diamonds[sample(nrow(diamonds), 1000), ] d <- ggplot(dsmall, aes(x, y)) # If you map an aesthetic to a categorical variable, you will get a # set of contours for each value of that variable d + geom_density_2d(aes(colour = cut))   # If we turn contouring off, we can use use geoms like tiles: d + stat_density_2d(geom = \"raster\", aes(fill = ..density..), contour = FALSE)  # Or points: d + stat_density_2d(geom = \"point\", aes(size = ..density..), n = 20, contour = FALSE)  # }"},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot — geom_dotplot","title":"Dot plot — geom_dotplot","text":"dot plot, width dot corresponds bin width (maximum width, depending binning algorithm), dots stacked, dot representing one observation.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot — geom_dotplot","text":"","code":"geom_dotplot(   mapping = NULL,   data = NULL,   position = \"identity\",   ...,   binwidth = NULL,   binaxis = \"x\",   method = \"dotdensity\",   binpositions = \"bygroup\",   stackdir = \"up\",   stackratio = 1,   dotsize = 1,   stackgroups = FALSE,   origin = NULL,   right = TRUE,   width = 0.9,   drop = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot — geom_dotplot","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. binwidth method \"dotdensity\", specifies maximum bin width. method \"histodot\", specifies bin width. Defaults 1/30 range data binaxis axis bin along, \"x\" (default) \"y\" method \"dotdensity\" (default) dot-density binning, \"histodot\" fixed bin widths (like stat_bin) binpositions method \"dotdensity\", \"bygroup\" (default) determines positions bins group separately. \"\" determines positions bins data taken together; used aligning dot stacks across multiple groups. stackdir direction stack dots. \"\" (default), \"\", \"center\", \"centerwhole\" (centered, dots aligned) stackratio close stack dots. Default 1, dots just just touch. Use smaller values closer, overlapping dots. dotsize diameter dots relative binwidth, default 1. stackgroups dots stacked across groups? effect position = \"stack\" , (geom odd properties). origin method \"histodot\", origin first bin right method \"histodot\", intervals closed right (, b], [, b) width binaxis \"y\", spacing dot stacks dodging. drop TRUE, remove bins zero counts na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dot plot — geom_dotplot","text":"dot-density binning, bin positions determined data binwidth, maximum width bin. See Wilkinson (1999) details dot-density binning algorithm. histodot binning, bins fixed positions fixed widths, much like histogram. binning along x axis stacking along y axis, numbers y axis meaningful, due technical limitations ggplot2. can hide y axis, one examples, manually scale match number dots.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Dot plot — geom_dotplot","text":"geom_dotplot understands following aesthetics (required aesthetics bold): x y alpha colour fill","code":""},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Dot plot — geom_dotplot","text":"x center bin, binaxis \"x\" y center bin, binaxis \"x\" binwidth max width bin method \"dotdensity\";     width bin method \"histodot\" count number points bin ncount count, scaled maximum 1 density density points bin, scaled integrate 1,     method \"histodot\" ndensity density, scaled maximum 1, method \"histodot\"","code":""},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dot plot — geom_dotplot","text":"Wilkinson, L. (1999) Dot plots. American Statistician,    53(3), 276-281.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_dotplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dot plot — geom_dotplot","text":"","code":"ggplot(mtcars, aes(x = mpg)) + geom_dotplot() #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc'  ggplot(mtcars, aes(x = mpg)) + geom_dotplot(binwidth = 1.5) #> Warning: Unit type of dotdia should be 'npc'   # Use fixed-width bins ggplot(mtcars, aes(x = mpg)) +   geom_dotplot(method=\"histodot\", binwidth = 1.5) #> Warning: Unit type of dotdia should be 'npc'   # Some other stacking methods ggplot(mtcars, aes(x = mpg)) +   geom_dotplot(binwidth = 1.5, stackdir = \"center\") #> Warning: Unit type of dotdia should be 'npc'  ggplot(mtcars, aes(x = mpg)) +   geom_dotplot(binwidth = 1.5, stackdir = \"centerwhole\") #> Warning: Unit type of dotdia should be 'npc'   # y axis isn't really meaningful, so hide it ggplot(mtcars, aes(x = mpg)) + geom_dotplot(binwidth = 1.5) +   scale_y_continuous(NULL, breaks = NULL) #> Warning: Unit type of dotdia should be 'npc'   # Overlap dots vertically ggplot(mtcars, aes(x = mpg)) + geom_dotplot(binwidth = 1.5, stackratio = .7) #> Warning: Unit type of dotdia should be 'npc'   # Expand dot diameter ggplot(mtcars, aes(x = mpg)) + geom_dotplot(binwidth = 1.5, dotsize = 1.25) #> Warning: Unit type of dotdia should be 'npc'   # \\donttest{ # Examples with stacking along y axis instead of x ggplot(mtcars, aes(x = 1, y = mpg)) +   geom_dotplot(binaxis = \"y\", stackdir = \"center\") #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc'   ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +   geom_dotplot(binaxis = \"y\", stackdir = \"center\") #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'   ggplot(mtcars, aes(x = factor(cyl), y = mpg)) +   geom_dotplot(binaxis = \"y\", stackdir = \"centerwhole\") #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'   ggplot(mtcars, aes(x = factor(vs), fill = factor(cyl), y = mpg)) +   geom_dotplot(binaxis = \"y\", stackdir = \"center\", position = \"dodge\") #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'   # binpositions=\"all\" ensures that the bins are aligned between groups ggplot(mtcars, aes(x = factor(am), y = mpg)) +   geom_dotplot(binaxis = \"y\", stackdir = \"center\", binpositions=\"all\") #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'   # Stacking multiple groups, with different fill ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) +   geom_dotplot(stackgroups = TRUE, binwidth = 1, binpositions = \"all\") #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'   ggplot(mtcars, aes(x = mpg, fill = factor(cyl))) +   geom_dotplot(stackgroups = TRUE, binwidth = 1, method = \"histodot\") #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'   ggplot(mtcars, aes(x = 1, y = mpg, fill = factor(cyl))) +   geom_dotplot(binaxis = \"y\", stackgroups = TRUE, binwidth = 1, method = \"histodot\") #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc' #> Warning: Unit type of dotdia should be 'npc'  # }"},{"path":"https://animint.github.io/animint2/reference/geom_errorbarh.html","id":null,"dir":"Reference","previous_headings":"","what":"Horizontal error bars — geom_errorbarh","title":"Horizontal error bars — geom_errorbarh","text":"Horizontal error bars","code":""},{"path":"https://animint.github.io/animint2/reference/geom_errorbarh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Horizontal error bars — geom_errorbarh","text":"","code":"geom_errorbarh(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_errorbarh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Horizontal error bars — geom_errorbarh","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_errorbarh.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Horizontal error bars — geom_errorbarh","text":"geom_errorbarh understands following aesthetics (required aesthetics bold): x xmax xmin y alpha colour height linetype size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_errorbarh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Horizontal error bars — geom_errorbarh","text":"","code":"df <- data.frame(   trt = factor(c(1, 1, 2, 2)),   resp = c(1, 5, 3, 4),   group = factor(c(1, 2, 1, 2)),   se = c(0.1, 0.3, 0.3, 0.2) )  # Define the top and bottom of the errorbars  p <- ggplot(df, aes(resp, trt, colour = group)) p + geom_point() +   geom_errorbarh(aes(xmax = resp + se, xmin = resp - se))  p + geom_point() +   geom_errorbarh(aes(xmax = resp + se, xmin = resp - se, height = .2))"},{"path":"https://animint.github.io/animint2/reference/geom_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Hexagon binning. — geom_hex","title":"Hexagon binning. — geom_hex","text":"Hexagon binning.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hexagon binning. — geom_hex","text":"","code":"geom_hex(   mapping = NULL,   data = NULL,   stat = \"binhex\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_bin_hex(   mapping = NULL,   data = NULL,   geom = \"hex\",   position = \"identity\",   ...,   bins = 30,   binwidth = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hexagon binning. — geom_hex","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Override default connection geom_hex stat_binhex. bins numeric vector giving number bins vertical horizontal directions. Set 30 default. binwidth Numeric vector giving bin width vertical horizontal directions. Overrides bins set.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_hex.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Hexagon binning. — geom_hex","text":"geom_hex understands following aesthetics (required aesthetics bold): x y alpha colour fill size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_hex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hexagon binning. — geom_hex","text":"","code":"d <- ggplot(diamonds, aes(carat, price)) d + geom_hex() #> Warning: Computation failed in `stat_binhex()`: #> Package `hexbin` required for `stat_binhex`. #> Please install and try again.   # \\donttest{ # You can control the size of the bins by specifying the number of # bins in each direction: d + geom_hex(bins = 10) #> Warning: Computation failed in `stat_binhex()`: #> Package `hexbin` required for `stat_binhex`. #> Please install and try again.  d + geom_hex(bins = 30) #> Warning: Computation failed in `stat_binhex()`: #> Package `hexbin` required for `stat_binhex`. #> Please install and try again.   # Or by specifying the width of the bins d + geom_hex(binwidth = c(1, 1000)) #> Warning: Computation failed in `stat_binhex()`: #> Package `hexbin` required for `stat_binhex`. #> Please install and try again.  d + geom_hex(binwidth = c(.1, 500)) #> Warning: Computation failed in `stat_binhex()`: #> Package `hexbin` required for `stat_binhex`. #> Please install and try again.  # }"},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histograms and frequency polygons. — geom_freqpoly","title":"Histograms and frequency polygons. — geom_freqpoly","text":"Display 1d distribution dividing bins counting number observations bin. Histograms use bars; frequency polygons use lines.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histograms and frequency polygons. — geom_freqpoly","text":"","code":"geom_freqpoly(   mapping = NULL,   data = NULL,   stat = \"bin\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_histogram(   mapping = NULL,   data = NULL,   stat = \"bin\",   position = \"stack\",   ...,   binwidth = NULL,   bins = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_bin(   mapping = NULL,   data = NULL,   geom = \"bar\",   position = \"stack\",   ...,   binwidth = NULL,   bins = NULL,   center = NULL,   boundary = NULL,   closed = c(\"right\", \"left\"),   pad = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histograms and frequency polygons. — geom_freqpoly","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. binwidth width bins. default use bins   bins cover range data. always override   value, exploring multiple widths find best illustrate   stories data. bin width date variable number days time;   bin width time variable number seconds. bins Number bins. Overridden binwidth. Defaults 30 geom, stat Use override default connection geom_histogram/geom_freqpoly stat_bin. center center one bins.  Note center range data, things shifted appropriate number widths. center integers, example, use width=1 center=0, even 0 outside range data.  one center boundary may specified. boundary boundary two bins. center, things shifted boundary outside range data. example, center integers, use width = 1 boundary = 0.5, even 1 outside range data.  one center boundary may specified. closed One \"right\" \"left\" indicating whether right left edges bins included bin. pad TRUE, adds empty bins either end x. ensures frequency polygons touch 0. Defaults FALSE.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Histograms and frequency polygons. — geom_freqpoly","text":"default, stat_bin uses 30 bins - good default, idea get experimenting different binwidths. may need look uncover full story behind data.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Histograms and frequency polygons. — geom_freqpoly","text":"geom_histogram uses aesthetics geom_bar; geom_freqpoly uses aesthetics geom_line.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Histograms and frequency polygons. — geom_freqpoly","text":"count number points bin density density points bin, scaled integrate 1 ncount count, scaled maximum 1 ndensity density, scaled maximum 1","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_histogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histograms and frequency polygons. — geom_freqpoly","text":"","code":"ggplot(diamonds, aes(carat)) +   geom_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  ggplot(diamonds, aes(carat)) +   geom_histogram(binwidth = 0.01)  ggplot(diamonds, aes(carat)) +   geom_histogram(bins = 200)   # Rather than stacking histograms, it's easier to compare frequency # polygons ggplot(diamonds, aes(price, fill = cut)) +   geom_histogram(binwidth = 500)  ggplot(diamonds, aes(price, colour = cut)) +   geom_freqpoly(binwidth = 500)   # To make it easier to compare distributions with very different counts, # put density on the y axis instead of the default count ggplot(diamonds, aes(price, ..density.., colour = cut)) +   geom_freqpoly(binwidth = 500)   if (require(\"ggplot2movies\")) { # Often we don't want the height of the bar to represent the # count of observations, but the sum of some other variable. # For example, the following plot shows the number of movies # in each rating. m <- ggplot(movies, aes(rating)) m + geom_histogram(binwidth = 0.1)  # If, however, we want to see the number of votes cast in each # category, we need to weight by the votes variable m + geom_histogram(aes(weight = votes), binwidth = 0.1) + ylab(\"votes\")  # For transformed scales, binwidth applies to the transformed data. # The bins have constant width on the transformed scale. m + geom_histogram() + scale_x_log10() m + geom_histogram(binwidth = 0.05) + scale_x_log10()  # For transformed coordinate systems, the binwidth applies to the # raw data. The bins have constant width on the original scale.  # Using log scales does not work here, because the first # bar is anchored at zero, and so when transformed becomes negative # infinity. This is not a problem when transforming the scales, because # no observations have 0 ratings. m + geom_histogram(origin = 0) + coord_trans(x = \"log10\") # Use origin = 0, to make sure we don't take sqrt of negative values m + geom_histogram(origin = 0) + coord_trans(x = \"sqrt\")  } #> Loading required package: ggplot2movies #> Warning: there is no package called ‘ggplot2movies’ rm(movies) #> Warning: object 'movies' not found"},{"path":"https://animint.github.io/animint2/reference/geom_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Points, jittered to reduce overplotting. — geom_jitter","title":"Points, jittered to reduce overplotting. — geom_jitter","text":"jitter geom convenient default geom_point position = 'jitter'. useful way handling overplotting caused discreteness smaller datasets.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points, jittered to reduce overplotting. — geom_jitter","text":"","code":"geom_jitter(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"jitter\",   ...,   width = NULL,   height = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points, jittered to reduce overplotting. — geom_jitter","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. width, height Amount vertical horizontal jitter. jitter   added positive negative directions, total spread   twice value specified . omitted, defaults 40% resolution data: means   jitter values occupy 80% implied bins. Categorical data   aligned integers, width height 0.5 spread   data possible see distinction categories. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_jitter.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Points, jittered to reduce overplotting. — geom_jitter","text":"geom_point understands following aesthetics (required aesthetics bold): x y alpha colour fill shape size stroke","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_jitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Points, jittered to reduce overplotting. — geom_jitter","text":"","code":"p <- ggplot(mpg, aes(cyl, hwy)) p + geom_point()  p + geom_jitter()   # Add aesthetic mappings p + geom_jitter(aes(colour = class))   # Use smaller width/height to emphasise categories ggplot(mpg, aes(cyl, hwy)) + geom_jitter()  ggplot(mpg, aes(cyl, hwy)) + geom_jitter(width = 0.25)   # Use larger width/height to completely smooth away discreteness ggplot(mpg, aes(cty, hwy)) + geom_jitter()  ggplot(mpg, aes(cty, hwy)) + geom_jitter(width = 0.5, height = 0.5)"},{"path":"https://animint.github.io/animint2/reference/geom_linerange.html","id":null,"dir":"Reference","previous_headings":"","what":"Vertical intervals: lines, crossbars & errorbars. — geom_crossbar","title":"Vertical intervals: lines, crossbars & errorbars. — geom_crossbar","text":"Various ways representing vertical interval defined x, ymin ymax.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_linerange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vertical intervals: lines, crossbars & errorbars. — geom_crossbar","text":"","code":"geom_crossbar(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   fatten = 2.5,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_errorbar(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_linerange(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_pointrange(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   fatten = 4,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_linerange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vertical intervals: lines, crossbars & errorbars. — geom_crossbar","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. fatten multiplicative factor used increase size middle bar geom_crossbar() middle point geom_pointrange(). na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_linerange.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Vertical intervals: lines, crossbars & errorbars. — geom_crossbar","text":"geom_linerange understands following aesthetics (required aesthetics bold): x ymax ymin alpha colour linetype size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_linerange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vertical intervals: lines, crossbars & errorbars. — geom_crossbar","text":"","code":"#' # Create a simple example dataset df <- data.frame(   trt = factor(c(1, 1, 2, 2)),   resp = c(1, 5, 3, 4),   group = factor(c(1, 2, 1, 2)),   upper = c(1.1, 5.3, 3.3, 4.2),   lower = c(0.8, 4.6, 2.4, 3.6) )  p <- ggplot(df, aes(trt, resp, colour = group)) p + geom_linerange(aes(ymin = lower, ymax = upper))  p + geom_pointrange(aes(ymin = lower, ymax = upper))  p + geom_crossbar(aes(ymin = lower, ymax = upper), width = 0.2)  p + geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2)   # Draw lines connecting group means p +   geom_line(aes(group = group)) +   geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2)   # If you want to dodge bars and errorbars, you need to manually # specify the dodge width p <- ggplot(df, aes(trt, resp, fill = group)) p +  geom_bar(position = \"dodge\", stat = \"identity\") +  geom_errorbar(aes(ymin = lower, ymax = upper), position = \"dodge\", width = 0.25)   # Because the bars and errorbars have different widths # we need to specify how wide the objects we are dodging are dodge <- position_dodge(width=0.9) p +   geom_bar(position = dodge, stat = \"identity\") +   geom_errorbar(aes(ymin = lower, ymax = upper), position = dodge, width = 0.25)"},{"path":"https://animint.github.io/animint2/reference/geom_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygons from a reference map. — geom_map","title":"Polygons from a reference map. — geom_map","text":"affect position scales.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygons from a reference map. — geom_map","text":"","code":"geom_map(   mapping = NULL,   data = NULL,   stat = \"identity\",   ...,   map,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygons from a reference map. — geom_map","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. map Data frame contains map coordinates.  typically created using fortify spatial object. must contain columns x long, y lat, region id. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_map.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Polygons from a reference map. — geom_map","text":"geom_map understands following aesthetics (required aesthetics bold): map_id alpha colour fill linetype size","code":""},{"path":"https://animint.github.io/animint2/reference/geom_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polygons from a reference map. — geom_map","text":"","code":"# When using geom_polygon, you will typically need two data frames: # one contains the coordinates of each polygon (positions),  and the # other the values associated with each polygon (values).  An id # variable links the two together  ids <- factor(c(\"1.1\", \"2.1\", \"1.2\", \"2.2\", \"1.3\", \"2.3\"))  values <- data.frame(   id = ids,   value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5) )  positions <- data.frame(   id = rep(ids, each = 4),   x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,   0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),   y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,   2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2) )  ggplot(values) + geom_map(aes(map_id = id), map = positions) +   expand_limits(positions)  ggplot(values, aes(fill = value)) +   geom_map(aes(map_id = id), map = positions) +   expand_limits(positions)  ggplot(values, aes(fill = value)) +   geom_map(aes(map_id = id), map = positions) +   expand_limits(positions) + ylim(0, 3)   # Better example crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests) crimesm <- reshape2::melt(crimes, id = 1) if (require(maps)) {   states_map <- map_data(\"state\")   ggplot(crimes, aes(map_id = state)) +     geom_map(aes(fill = Murder), map = states_map) +     expand_limits(x = states_map$long, y = states_map$lat)    last_plot() + coord_map()   ggplot(crimesm, aes(map_id = state)) +     geom_map(aes(fill = value), map = states_map) +     expand_limits(x = states_map$long, y = states_map$lat) +     facet_wrap( ~ variable) } #> Loading required package: maps #> Warning: there is no package called ‘maps’"},{"path":"https://animint.github.io/animint2/reference/geom_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect observations. — geom_path","title":"Connect observations. — geom_path","text":"geom_path() connects observations order appear data. geom_line() connects order variable x axis. geom_step() creates stairstep plot, highlighting exactly changes occur.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect observations. — geom_path","text":"","code":"geom_path(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 1,   arrow = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_line(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_step(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   direction = \"hv\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://animint.github.io/animint2/reference/geom_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect observations. — geom_path","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. lineend Line end style (round, butt, square) linejoin Line join style (round, mitre, bevel) linemitre Line mitre limit (number greater 1) arrow Arrow specification, created arrow na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. direction direction stairs: 'vh' vertical horizontal, 'hv' horizontal vertical","code":""},{"path":"https://animint.github.io/animint2/reference/geom_path.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Connect observations. — geom_path","text":"geom_path understands following aesthetics (required aesthetics bold): x y alpha colour linetype size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect observations. — geom_path","text":"","code":"# geom_line() is suitable for time series ggplot(economics, aes(date, unemploy)) + geom_line()  ggplot(economics_long, aes(date, value01, colour = variable)) +   geom_line()   # geom_step() is useful when you want to highlight exactly when # the y value chanes recent <- economics[economics$date > as.Date(\"2013-01-01\"), ] ggplot(recent, aes(date, unemploy)) + geom_line()  ggplot(recent, aes(date, unemploy)) + geom_step()   # geom_path lets you explore how two variables are related over time, # e.g. unemployment and personal savings rate m <- ggplot(economics, aes(unemploy/pop, psavert)) m + geom_path()  m + geom_path(aes(colour = as.numeric(date)))   # Changing parameters ---------------------------------------------- ggplot(economics, aes(date, unemploy)) +   geom_line(colour = \"red\")   # Use the arrow parameter to add an arrow to the line # See ?arrow for more details c <- ggplot(economics, aes(x = date, y = pop)) c + geom_line(arrow = arrow())  c + geom_line(   arrow = arrow(angle = 15, ends = \"both\", type = \"closed\") )   # Control line join parameters df <- data.frame(x = 1:3, y = c(4, 1, 9)) base <- ggplot(df, aes(x, y)) base + geom_path(size = 10)  base + geom_path(size = 10, lineend = \"round\")  base + geom_path(size = 10, linejoin = \"mitre\", lineend = \"butt\")   # NAs break the line. Use na.rm = T to suppress the warning message df <- data.frame(   x = 1:5,   y1 = c(1, 2, 3, 4, NA),   y2 = c(NA, 2, 3, 4, 5),   y3 = c(1, 2, NA, 4, 5) ) ggplot(df, aes(x, y1)) + geom_point() + geom_line() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 rows containing missing values (geom_path).  ggplot(df, aes(x, y2)) + geom_point() + geom_line() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 rows containing missing values (geom_path).  ggplot(df, aes(x, y3)) + geom_point() + geom_line() #> Warning: Removed 1 rows containing missing values (geom_point).   # \\donttest{ # Setting line type vs colour/size # Line type needs to be applied to a line as a whole, so it can # not be used with colour or size that vary across a line x <- seq(0.01, .99, length.out = 100) df <- data.frame(   x = rep(x, 2),   y = c(qlogis(x), 2 * qlogis(x)),   group = rep(c(\"a\",\"b\"),   each = 100) ) p <- ggplot(df, aes(x=x, y=y, group=group)) # These work p + geom_line(linetype = 2)  p + geom_line(aes(colour = group), linetype = 2)  p + geom_line(aes(colour = x))  # But this doesn't should_stop(p + geom_line(aes(colour = x), linetype=2)) # }"},{"path":"https://animint.github.io/animint2/reference/geom_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Points, as for a scatterplot — geom_point","title":"Points, as for a scatterplot — geom_point","text":"point geom used create scatterplots.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Points, as for a scatterplot — geom_point","text":"","code":"geom_point(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Points, as for a scatterplot — geom_point","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_point.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Points, as for a scatterplot — geom_point","text":"scatterplot useful displaying relationship two continuous variables, although can also used one continuous one categorical variable, two categorical variables.  See geom_jitter possibilities. bubblechart scatterplot third variable mapped size points.  special names scatterplots another variable mapped point shape colour, however. biggest potential problem scatterplot overplotting: whenever points, points may plotted top one another. can severely distort visual appearance plot. one solution problem, techniques can help.  can add additional information geom_smooth geom_density_2d.    Alternatively, can summarise number points location display way, using stat_sum. Another technique use transparent points, e.g. geom_point(alpha = 0.05).","code":""},{"path":"https://animint.github.io/animint2/reference/geom_point.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Points, as for a scatterplot — geom_point","text":"geom_point understands following aesthetics (required aesthetics bold): x y alpha colour fill shape size stroke","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Points, as for a scatterplot — geom_point","text":"","code":"p <- ggplot(mtcars, aes(wt, mpg)) p + geom_point()   # Add aesthetic mappings p + geom_point(aes(colour = factor(cyl)))  p + geom_point(aes(shape = factor(cyl)))  p + geom_point(aes(size = qsec))   # Change scales p + geom_point(aes(colour = cyl)) + scale_colour_gradient(low = \"blue\")  p + geom_point(aes(shape = factor(cyl))) + scale_shape(solid = FALSE)   # Set aesthetics to fixed value ggplot(mtcars, aes(wt, mpg)) + geom_point(colour = \"red\", size = 3)   # \\donttest{ # Varying alpha is useful for large datasets d <- ggplot(diamonds, aes(carat, price)) d + geom_point(alpha = 1/10)  d + geom_point(alpha = 1/20)  d + geom_point(alpha = 1/100)  # }  # For shapes that have a border (like 21), you can colour the inside and # outside separately. Use the stroke aesthetic to modify the width of the # border ggplot(mtcars, aes(wt, mpg)) +   geom_point(shape = 21, colour = \"black\", fill = \"white\", size = 5, stroke = 5)   # \\donttest{ # You can create interesting shapes by layering multiple points of # different sizes p <- ggplot(mtcars, aes(mpg, wt, shape = factor(cyl))) p + geom_point(aes(colour = factor(cyl)), size = 4) +   geom_point(colour = \"grey90\", size = 1.5)  p + geom_point(colour = \"black\", size = 4.5) +   geom_point(colour = \"pink\", size = 4) +   geom_point(aes(shape = factor(cyl)))   # These extra layers don't usually appear in the legend, but we can # force their inclusion p + geom_point(colour = \"black\", size = 4.5, show.legend = TRUE) +   geom_point(colour = \"pink\", size = 4, show.legend = TRUE) +   geom_point(aes(shape = factor(cyl)))   # geom_point warns when missing values have been dropped from the data set # and not plotted, you can turn this off by setting na.rm = TRUE mtcars2 <- transform(mtcars, mpg = ifelse(runif(32) < 0.2, NA, mpg)) ggplot(mtcars2, aes(wt, mpg)) + geom_point() #> Warning: Removed 2 rows containing missing values (geom_point).  ggplot(mtcars2, aes(wt, mpg)) + geom_point(na.rm = TRUE)  # }"},{"path":"https://animint.github.io/animint2/reference/geom_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon, a filled path. — geom_polygon","title":"Polygon, a filled path. — geom_polygon","text":"Polygon, filled path.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon, a filled path. — geom_polygon","text":"","code":"geom_polygon(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polygon, a filled path. — geom_polygon","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_polygon.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Polygon, a filled path. — geom_polygon","text":"geom_polygon understands following aesthetics (required aesthetics bold): x y alpha colour fill linetype size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polygon, a filled path. — geom_polygon","text":"","code":"# When using geom_polygon, you will typically need two data frames: # one contains the coordinates of each polygon (positions),  and the # other the values associated with each polygon (values).  An id # variable links the two together  ids <- factor(c(\"1.1\", \"2.1\", \"1.2\", \"2.2\", \"1.3\", \"2.3\"))  values <- data.frame(   id = ids,   value = c(3, 3.1, 3.1, 3.2, 3.15, 3.5) )  positions <- data.frame(   id = rep(ids, each = 4),   x = c(2, 1, 1.1, 2.2, 1, 0, 0.3, 1.1, 2.2, 1.1, 1.2, 2.5, 1.1, 0.3,   0.5, 1.2, 2.5, 1.2, 1.3, 2.7, 1.2, 0.5, 0.6, 1.3),   y = c(-0.5, 0, 1, 0.5, 0, 0.5, 1.5, 1, 0.5, 1, 2.1, 1.7, 1, 1.5,   2.2, 2.1, 1.7, 2.1, 3.2, 2.8, 2.1, 2.2, 3.3, 3.2) )  # Currently we need to manually merge the two together datapoly <- merge(values, positions, by = c(\"id\"))  (p <- ggplot(datapoly, aes(x = x, y = y)) + geom_polygon(aes(fill = value, group = id)))   # Which seems like a lot of work, but then it's easy to add on # other features in this coordinate system, e.g.:  stream <- data.frame(   x = cumsum(runif(50, max = 0.1)),   y = cumsum(runif(50,max = 0.1)) )  p + geom_line(data = stream, colour = \"grey30\", size = 5)   # And if the positions are in longitude and latitude, you can use # coord_map to produce different map projections."},{"path":"https://animint.github.io/animint2/reference/geom_ribbon.html","id":null,"dir":"Reference","previous_headings":"","what":"Ribbons and area plots. — geom_ribbon","title":"Ribbons and area plots. — geom_ribbon","text":"continuous x value, geom_interval displays y interval. geom_area special case geom_ribbon, minimum range fixed 0.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_ribbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ribbons and area plots. — geom_ribbon","text":"","code":"geom_ribbon(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_area(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"stack\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://animint.github.io/animint2/reference/geom_ribbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ribbons and area plots. — geom_ribbon","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_ribbon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ribbons and area plots. — geom_ribbon","text":"area plot continuous analog stacked bar chart (see geom_bar), can used show composition whole varies range x.  Choosing order different components stacked important, becomes increasing hard see individual pattern move stack.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_ribbon.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Ribbons and area plots. — geom_ribbon","text":"geom_ribbon understands following aesthetics (required aesthetics bold): x ymax ymin alpha colour fill linetype size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_ribbon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ribbons and area plots. — geom_ribbon","text":"","code":"# Generate data huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron)) h <- ggplot(huron, aes(year))  h + geom_ribbon(aes(ymin=0, ymax=level))  h + geom_area(aes(y = level))   # Add aesthetic mappings h +   geom_ribbon(aes(ymin = level - 1, ymax = level + 1), fill = \"grey70\") +   geom_line(aes(y = level))"},{"path":"https://animint.github.io/animint2/reference/geom_rug.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal rug plots. — geom_rug","title":"Marginal rug plots. — geom_rug","text":"Marginal rug plots.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_rug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal rug plots. — geom_rug","text":"","code":"geom_rug(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   sides = \"bl\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_rug.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal rug plots. — geom_rug","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. sides string controls sides plot rugs appear . can set string containing \"trbl\", top, right, bottom, left. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_rug.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Marginal rug plots. — geom_rug","text":"geom_rug understands following aesthetics (required aesthetics bold): alpha colour linetype size","code":""},{"path":"https://animint.github.io/animint2/reference/geom_rug.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marginal rug plots. — geom_rug","text":"","code":"p <- ggplot(mtcars, aes(wt, mpg)) p + geom_point()  p + geom_point() + geom_rug()  p + geom_point() + geom_rug(sides=\"b\")    # Rug on bottom only  p + geom_point() + geom_rug(sides=\"trbl\") # All four sides  p + geom_point() + geom_rug(position='jitter')"},{"path":"https://animint.github.io/animint2/reference/geom_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Line segments and curves. — geom_segment","title":"Line segments and curves. — geom_segment","text":"geom_segment draws straight line points (x1, y1) (x2, y2). geom_curve draws curved line.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line segments and curves. — geom_segment","text":"","code":"geom_segment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_curve(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   curvature = 0.5,   angle = 90,   ncp = 5,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line segments and curves. — geom_segment","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. arrow specification arrow heads, created arrow() lineend Line end style (round, butt, square) na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. curvature numeric value giving amount curvature.     Negative values produce left-hand curves, positive values     produce right-hand curves, zero produces straight line. angle numeric value 0 180,     giving amount skew control     points curve.  Values less 90 skew curve towards     start point values greater 90 skew curve     towards end point. ncp number control points used draw curve.     control points creates smoother curve.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_segment.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Line segments and curves. — geom_segment","text":"geom_segment understands following aesthetics (required aesthetics bold): x xend y yend alpha colour linetype size","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line segments and curves. — geom_segment","text":"","code":"b <- ggplot(mtcars, aes(wt, mpg)) +   geom_point()  df <- data.frame(x1 = 2.62, x2 = 3.57, y1 = 21.0, y2 = 15.0) b +  geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2, colour = \"curve\"), data = df) +  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2, colour = \"segment\"), data = df)   b + geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2), data = df, curvature = -0.2)  b + geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2), data = df, curvature = 1)  b + geom_curve(   aes(x = x1, y = y1, xend = x2, yend = y2),   data = df,   arrow = arrow(length = unit(0.03, \"npc\")) )   ggplot(seals, aes(long, lat)) +   geom_segment(aes(xend = long + delta_long, yend = lat + delta_lat),     arrow = arrow(length = unit(0.1,\"cm\"))) +   borders(\"state\") #> Error: Package `maps` required for `map_data`. #> Please install and try again.  # You can also use geom_segment to recreate plot(type = \"h\") : counts <- as.data.frame(table(x = rpois(100,5))) counts$x <- as.numeric(as.character(counts$x)) with(counts, plot(x, Freq, type = \"h\", lwd = 10))   ggplot(counts, aes(x, Freq)) +   geom_segment(aes(xend = x, yend = 0), size = 10, lineend = \"butt\")"},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a smoothed conditional mean. — geom_smooth","title":"Add a smoothed conditional mean. — geom_smooth","text":"Aids eye seeing patterns presence overplotting. geom_smooth stat_smooth effectively aliases: use arguments. Use geom_smooth unless want display results non-standard geom.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a smoothed conditional mean. — geom_smooth","text":"","code":"geom_smooth(   mapping = NULL,   data = NULL,   stat = \"smooth\",   position = \"identity\",   ...,   method = \"auto\",   formula = y ~ x,   se = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_smooth(   mapping = NULL,   data = NULL,   geom = \"smooth\",   position = \"identity\",   ...,   method = \"auto\",   formula = y ~ x,   se = TRUE,   n = 80,   span = 0.75,   fullrange = FALSE,   level = 0.95,   method.args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a smoothed conditional mean. — geom_smooth","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. method smoothing method (function) use, eg. lm, glm, gam, loess, rlm. datasets n < 1000 default loess. datasets 1000 observations defaults gam, see gam details. formula formula use smoothing function, eg. y ~ x, y ~ poly(x, 2), y ~ log(x) se display confidence interval around smooth? (TRUE default, see level control na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Use override default connection geom_smooth stat_smooth. n number points evaluate smoother span Controls amount smoothing default loess smoother. Smaller numbers produce wigglier lines, larger numbers produce smoother lines. fullrange fit span full range plot, just data level level confidence interval use (0.95 default) method.args List additional arguments passed modelling function defined method.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a smoothed conditional mean. — geom_smooth","text":"Calculation performed (currently undocumented) predictdf generic methods.  methods standard error bounds computed using predict method - exceptions loess uses t-based approximation, glm normal confidence interval constructed link scale, back-transformed response scale.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add a smoothed conditional mean. — geom_smooth","text":"geom_smooth understands following aesthetics (required aesthetics bold): x y alpha colour fill linetype size weight","code":""},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Add a smoothed conditional mean. — geom_smooth","text":"y predicted value ymin lower pointwise confidence interval around mean ymax upper pointwise confidence interval around mean se standard error","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a smoothed conditional mean. — geom_smooth","text":"","code":"ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth()   # Use span to control the \"wiggliness\" of the default loess smoother # The span is the fraction of points used to fit each local regression: # small numbers make a wigglier curve, larger numbers make a smoother curve. ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth(span = 0.3)   # Instead of a loess smooth, you can use any other modelling function: ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth(method = \"lm\", se = FALSE)   ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth(method = \"lm\", formula = y ~ splines::bs(x, 3), se = FALSE)   # Smoothes are automatically fit to each group (defined by categorical # aesthetics or the group aesthetic) and for each facet  ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point() +   geom_smooth(se = FALSE, method = \"lm\")  ggplot(mpg, aes(displ, hwy)) +   geom_point() +   geom_smooth(span = 0.8) +   facet_wrap(~drv)   # \\donttest{ binomial_smooth <- function(...) {   geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), ...) } # To fit a logistic regression, you need to coerce the values to # a numeric vector lying between 0 and 1. ggplot(rpart::kyphosis, aes(Age, Kyphosis)) +   geom_jitter(height = 0.05) +   binomial_smooth() #> Warning: Computation failed in `stat_smooth()`: #> y values must be 0 <= y <= 1   ggplot(rpart::kyphosis, aes(Age, as.numeric(Kyphosis) - 1)) +   geom_jitter(height = 0.05) +   binomial_smooth()   ggplot(rpart::kyphosis, aes(Age, as.numeric(Kyphosis) - 1)) +   geom_jitter(height = 0.05) +   binomial_smooth(formula = y ~ splines::ns(x, 2))   # But in this case, it's probably better to fit the model yourself # so you can exercise more control and see whether or not it's a good model # }"},{"path":"https://animint.github.io/animint2/reference/geom_spoke.html","id":null,"dir":"Reference","previous_headings":"","what":"A line segment parameterised by location, direction and distance. — geom_spoke","title":"A line segment parameterised by location, direction and distance. — geom_spoke","text":"line segment parameterised location, direction distance.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_spoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A line segment parameterised by location, direction and distance. — geom_spoke","text":"","code":"geom_spoke(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_spoke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A line segment parameterised by location, direction and distance. — geom_spoke","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_spoke.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"A line segment parameterised by location, direction and distance. — geom_spoke","text":"geom_spoke understands following aesthetics (required aesthetics bold): angle radius x y alpha colour linetype size","code":""},{"path":"https://animint.github.io/animint2/reference/geom_spoke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A line segment parameterised by location, direction and distance. — geom_spoke","text":"","code":"df <- expand.grid(x = 1:10, y=1:10) df$angle <- runif(100, 0, 2*pi) df$speed <- runif(100, 0, sqrt(0.1 * df$x))  ggplot(df, aes(x, y)) +   geom_point() +   geom_spoke(aes(angle = angle), radius = 0.5)   ggplot(df, aes(x, y)) +   geom_point() +   geom_spoke(aes(angle = angle, radius = speed))"},{"path":"https://animint.github.io/animint2/reference/geom_tallrect.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 geom with xmin and xmax aesthetics that covers the entire y range, useful for clickSelects background elements. — geom_tallrect","title":"ggplot2 geom with xmin and xmax aesthetics that covers the entire y range, useful for clickSelects background elements. — geom_tallrect","text":"ggplot2 geom xmin xmax aesthetics covers entire y range, useful clickSelects background elements.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_tallrect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 geom with xmin and xmax aesthetics that covers the entire y range, useful for clickSelects background elements. — geom_tallrect","text":"","code":"geom_tallrect(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_tallrect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 geom with xmin and xmax aesthetics that covers the entire y range, useful for clickSelects background elements. — geom_tallrect","text":"mapping aesthetic mapping data data set stat statistic mapping, defaults identity position position mapping, defaults identity ... arguments na.rm remove missing values? show.legend TRUE FALSE inherit.aes TRUE FALSE","code":""},{"path":"https://animint.github.io/animint2/reference/geom_tallrect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 geom with xmin and xmax aesthetics that covers the entire y range, useful for clickSelects background elements. — geom_tallrect","text":"ggplot2 layer","code":""},{"path":"https://animint.github.io/animint2/reference/geom_tallrect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 geom with xmin and xmax aesthetics that covers the entire y range, useful for clickSelects background elements. — geom_tallrect","text":"","code":"if(require('data.table'))setDTthreads(1)#for CRAN.  library(animint2)  ## Example: 2 plots, 2 selectors, but only interacting with 1 plot. data(breakpoints) only.error <- subset(breakpoints$error,type==\"E\") only.segments <- subset(only.error,bases.per.probe==bases.per.probe[1]) signal.colors <- c(estimate=\"#0adb0a\", latent=\"#0098ef\") breakpointError <- list(   signal=ggplot()+     geom_point(aes(       position, signal),       showSelected=\"bases.per.probe\",       data=breakpoints$signals)+     geom_line(aes(       position, signal),        colour=signal.colors[[\"latent\"]],       data=breakpoints$imprecision)+     geom_segment(aes(       first.base, mean, xend=last.base, yend=mean),       showSelected=c(\"segments\", \"bases.per.probe\"),       colour=signal.colors[[\"estimate\"]],       data=breakpoints$segments)+     geom_vline(aes(       xintercept=base),       showSelected=c(\"segments\", \"bases.per.probe\"),       colour=signal.colors[[\"estimate\"]],       linetype=\"dashed\",       data=breakpoints$breaks),   error=ggplot()+     geom_vline(aes(       xintercept=segments),        clickSelects=\"segments\",       data=only.segments, lwd=17, alpha=1/2)+     geom_line(aes(       segments, error, group=bases.per.probe),       clickSelects=\"bases.per.probe\",       data=only.error, lwd=4)) animint2dir(breakpointError)"},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Textual annotations. — geom_label","title":"Textual annotations. — geom_label","text":"geom_text adds text directly plot. geom_label draws rectangle underneath text, making easier read.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Textual annotations. — geom_label","text":"","code":"geom_label(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   parse = FALSE,   nudge_x = 0,   nudge_y = 0,   label.padding = unit(0.25, \"lines\"),   label.r = unit(0.15, \"lines\"),   label.size = 0.25,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_text(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   parse = FALSE,   nudge_x = 0,   nudge_y = 0,   check_overlap = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Textual annotations. — geom_label","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. parse TRUE, labels parsed expressions displayed described ?plotmath nudge_x, nudge_y Horizontal vertical adjustment nudge labels . Useful offsetting text points, particularly discrete scales. label.padding Amount padding around label. Defaults 0.25 lines. label.r Radius rounded corners. Defaults 0.15 lines. label.size Size label border, mm. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. check_overlap TRUE, text overlaps previous text layer plotted. quick dirty way","code":""},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Textual annotations. — geom_label","text":"Note \"width\" \"height\" text element 0, stacking dodging text work default, axis limits automatically expanded include text. Obviously, labels height width, physical units, data units. amount space occupy plot constant data units: resize plot, labels stay size, size axes changes.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Textual annotations. — geom_label","text":"geom_text understands following aesthetics (required aesthetics bold): label x y alpha angle colour family fontface hjust lineheight size vjust","code":""},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"geom-label","dir":"Reference","previous_headings":"","what":"geom_label","title":"Textual annotations. — geom_label","text":"Currently geom_label support rot parameter considerably slower geom_text. fill aesthetic controls background colour label.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"alignment","dir":"Reference","previous_headings":"","what":"Alignment","title":"Textual annotations. — geom_label","text":"can modify text alignment vjust hjust aesthetics. can either number 0 (right/bottom) 1 (top/left) character (\"left\", \"middle\", \"right\", \"bottom\", \"center\", \"top\"). two special alignments: \"inward\" \"outward\". Inward always aligns text towards center, outward aligns away center","code":""},{"path":"https://animint.github.io/animint2/reference/geom_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Textual annotations. — geom_label","text":"","code":"p <- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars)))  p + geom_text()  # Avoid overlaps p + geom_text(check_overlap = TRUE)  # Labels with background p + geom_label()  # Change size of the label p + geom_text(size = 10)   # Set aesthetics to fixed value p + geom_point() + geom_text(hjust = 0, nudge_x = 0.05)  p + geom_point() + geom_text(vjust = 0, nudge_y = 0.5)  p + geom_point() + geom_text(angle = 45)  if (FALSE) { # \\dontrun{ # Doesn't work on all systems p + geom_text(family = \"Times New Roman\") } # }  # Add aesthetic mappings p + geom_text(aes(colour = factor(cyl)))  p + geom_text(aes(colour = factor(cyl))) +   scale_colour_discrete(l = 40)  p + geom_label(aes(fill = factor(cyl)), colour = \"white\", fontface = \"bold\")   p + geom_text(aes(size = wt))  # Scale height of text, rather than sqrt(height) p + geom_text(aes(size = wt)) + scale_radius(range = c(3,6))   # You can display expressions by setting parse = TRUE.  The # details of the display are described in ?plotmath, but note that # geom_text uses strings, not expressions. p + geom_text(aes(label = paste(wt, \"^(\", cyl, \")\", sep = \"\")),   parse = TRUE)   # Add a text annotation p +   geom_text() +   annotate(\"text\", label = \"plot mpg vs. wt\", x = 2, y = 15, size = 8, colour = \"red\")   # \\donttest{ # Aligning labels and bars -------------------------------------------------- df <- data.frame(   x = factor(c(1, 1, 2, 2)),   y = c(1, 3, 2, 1),   grp = c(\"a\", \"b\", \"a\", \"b\") )  # ggplot2 doesn't know you want to give the labels the same virtual width # as the bars: ggplot(data = df, aes(x, y, fill = grp, label = y)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   geom_text(position = \"dodge\") #> Warning: Width not defined. Set with `position_dodge(width = ?)`  # So tell it: ggplot(data = df, aes(x, y, fill = grp, label = y)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   geom_text(position = position_dodge(0.9))  # Use you can't nudge and dodge text, so instead adjust the y postion ggplot(data = df, aes(x, y, fill = grp, label = y)) +   geom_bar(stat = \"identity\", position = \"dodge\") +   geom_text(aes(y = y + 0.05), position = position_dodge(0.9), vjust = 0)   # To place text in the middle of each bar in a stacked barplot, you # need to do the computation yourself df <- transform(df, mid_y = ave(df$y, df$x, FUN = function(val) cumsum(val) - (0.5 * val)))  ggplot(data = df, aes(x, y, fill = grp, label = y)) +  geom_bar(stat = \"identity\") +  geom_text(aes(y = mid_y))   # Justification ------------------------------------------------------------- df <- data.frame(   x = c(1, 1, 2, 2, 1.5),   y = c(1, 2, 1, 2, 1.5),   text = c(\"bottom-left\", \"bottom-right\", \"top-left\", \"top-right\", \"center\") ) ggplot(df, aes(x, y)) +   geom_text(aes(label = text))  ggplot(df, aes(x, y)) +   geom_text(aes(label = text), vjust = \"inward\", hjust = \"inward\")  # }"},{"path":"https://animint.github.io/animint2/reference/geom_tile.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw rectangles. — geom_raster","title":"Draw rectangles. — geom_raster","text":"geom_rect geom_tile thing, parameterised differently. geom_rect uses locations four corners (xmin, xmax, ymin ymax). geom_tile uses center tile size (x, y, width, height). geom_raster high performance special case tiles size.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_tile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw rectangles. — geom_raster","text":"","code":"geom_raster(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   hjust = 0.5,   vjust = 0.5,   interpolate = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_rect(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_tile(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_tile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw rectangles. — geom_raster","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. stat statistical transformation use data layer, string. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. hjust, vjust horizontal vertical justification grob.  justification value number 0 1.  Defaults 0.5 , centering pixel data location. interpolate TRUE interpolate linearly, FALSE (default) interpolate. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_tile.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw rectangles. — geom_raster","text":"geom_tile understands following aesthetics (required aesthetics bold): x y alpha colour fill linetype size","code":""},{"path":"https://animint.github.io/animint2/reference/geom_tile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw rectangles. — geom_raster","text":"","code":"# The most common use for rectangles is to draw a surface. You always want # to use geom_raster here because it's so much faster, and produces # smaller output when saving to PDF ggplot(faithfuld, aes(waiting, eruptions)) +  geom_raster(aes(fill = density))   # Interpolation smooths the surface & is most helpful when rendering images. ggplot(faithfuld, aes(waiting, eruptions)) +  geom_raster(aes(fill = density), interpolate = TRUE)   # If you want to draw arbitrary rectangles, use geom_tile() or geom_rect() df <- data.frame(   x = rep(c(2, 5, 7, 9, 12), 2),   y = rep(c(1, 2), each = 5),   z = factor(rep(1:5, each = 2)),   w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2) ) ggplot(df, aes(x, y)) +   geom_tile(aes(fill = z))  ggplot(df, aes(x, y)) +   geom_tile(aes(fill = z, width = w), colour = \"grey50\")  ggplot(df, aes(xmin = x - w / 2, xmax = x + w / 2, ymin = y, ymax = y + 1)) +   geom_rect(aes(fill = z, width = w), colour = \"grey50\")   # \\donttest{ # Justification controls where the cells are anchored df <- expand.grid(x = 0:5, y = 0:5) df$z <- runif(nrow(df)) # default is compatible with geom_tile() ggplot(df, aes(x, y, fill = z)) + geom_raster()  # zero padding ggplot(df, aes(x, y, fill = z)) + geom_raster(hjust = 0, vjust = 0)   # Inspired by the image-density plots of Ken Knoblauch cars <- ggplot(mtcars, aes(mpg, factor(cyl))) cars + geom_point()  cars + stat_bin2d(aes(fill = ..count..), binwidth = c(3,1))  cars + stat_bin2d(aes(fill = ..density..), binwidth = c(3,1))   cars + stat_density(aes(fill = ..density..), geom = \"raster\", position = \"identity\")  cars + stat_density(aes(fill = ..count..), geom = \"raster\", position = \"identity\")  # }"},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":null,"dir":"Reference","previous_headings":"","what":"Violin plot. — geom_violin","title":"Violin plot. — geom_violin","text":"Violin plot.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Violin plot. — geom_violin","text":"","code":"geom_violin(   mapping = NULL,   data = NULL,   stat = \"ydensity\",   position = \"dodge\",   ...,   draw_quantiles = NULL,   trim = TRUE,   scale = \"area\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_ydensity(   mapping = NULL,   data = NULL,   geom = \"violin\",   position = \"dodge\",   ...,   bw = \"nrd0\",   adjust = 1,   kernel = \"gaussian\",   trim = TRUE,   scale = \"area\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Violin plot. — geom_violin","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. draw_quantiles (NULL) (default), draw horizontal lines given quantiles density estimate. trim TRUE (default), trim tails violins range data. FALSE, trim tails. scale \"area\" (default), violins area (trimming tails). \"count\", areas scaled proportionally number observations. \"width\", violins maximum width. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. geom, stat Use override default connection geom_violin stat_ydensity. bw smoothing bandwidth used, see density details adjust adjustment bandwidth, see density details kernel kernel used density estimation, see density details","code":""},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Violin plot. — geom_violin","text":"geom_violin understands following aesthetics (required aesthetics bold): x y alpha colour fill linetype size weight","code":""},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Violin plot. — geom_violin","text":"density density estimate scaled density estimate, scaled maximum 1 count density * number points - probably useless violin plots violinwidth density scaled violin plot, according area, counts                      constant maximum width n number points width width violin bounding box","code":""},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Violin plot. — geom_violin","text":"Hintze, J. L., Nelson, R. D. (1998) Violin Plots: Box Plot-Density Trace Synergism. American Statistician 52, 181-184.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/geom_violin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Violin plot. — geom_violin","text":"","code":"p <- ggplot(mtcars, aes(factor(cyl), mpg)) p + geom_violin()   # \\donttest{ p + geom_violin() + geom_jitter(height = 0)  p + geom_violin() + coord_flip()   # Scale maximum width proportional to sample size: p + geom_violin(scale = \"count\")   # Scale maximum width to 1 for all violins: p + geom_violin(scale = \"width\")   # Default is to trim violins to the range of the data. To disable: p + geom_violin(trim = FALSE)   # Use a smaller bandwidth for closer density fit (default is 1). p + geom_violin(adjust = .5)   # Add aesthetic mappings # Note that violins are automatically dodged when any aesthetic is # a factor p + geom_violin(aes(fill = cyl))  p + geom_violin(aes(fill = factor(cyl)))  p + geom_violin(aes(fill = factor(vs)))  p + geom_violin(aes(fill = factor(am)))   # Set aesthetics to fixed value p + geom_violin(fill = \"grey80\", colour = \"#3366FF\")   # Show quartiles p + geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))   # Scales vs. coordinate transforms ------- if (require(\"ggplot2movies\")) { # Scale transformations occur before the density statistics are computed. # Coordinate transformations occur afterwards.  Observe the effect on the # number of outliers. m <- ggplot(movies, aes(y = votes, x = rating, group = cut_width(rating, 0.5))) m + geom_violin() m + geom_violin() + scale_y_log10() m + geom_violin() + coord_trans(y = \"log10\") m + geom_violin() + scale_y_log10() + coord_trans(y = \"log10\")  # Violin plots with continuous x: # Use the group aesthetic to group observations in violins ggplot(movies, aes(year, budget)) + geom_violin() ggplot(movies, aes(year, budget)) +   geom_violin(aes(group = cut_width(year, 10)), scale = \"width\") } #> Loading required package: ggplot2movies #> Warning: there is no package called ‘ggplot2movies’ # }"},{"path":"https://animint.github.io/animint2/reference/geom_widerect.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 geom with ymin and ymax aesthetics that covers the entire x range, useful for clickSelects background elements. — geom_widerect","title":"ggplot2 geom with ymin and ymax aesthetics that covers the entire x range, useful for clickSelects background elements. — geom_widerect","text":"ggplot2 geom ymin ymax aesthetics covers entire x range, useful clickSelects background elements.","code":""},{"path":"https://animint.github.io/animint2/reference/geom_widerect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 geom with ymin and ymax aesthetics that covers the entire x range, useful for clickSelects background elements. — geom_widerect","text":"","code":"geom_widerect(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/geom_widerect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 geom with ymin and ymax aesthetics that covers the entire x range, useful for clickSelects background elements. — geom_widerect","text":"mapping aesthetic mapping data data set stat statistic mapping, defaults identity position position mapping, defaults identity ... arguments na.rm remove missing values? show.legend TRUE FALSE inherit.aes TRUE FALSE","code":""},{"path":"https://animint.github.io/animint2/reference/geom_widerect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 geom with ymin and ymax aesthetics that covers the entire x range, useful for clickSelects background elements. — geom_widerect","text":"ggplot2 layer","code":""},{"path":"https://animint.github.io/animint2/reference/geom_widerect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 geom with ymin and ymax aesthetics that covers the entire x range, useful for clickSelects background elements. — geom_widerect","text":"","code":"if (FALSE) { # \\dontrun{     source(system.file(\"examples/WorldBank.R\", package = \"animint\"))  } # }"},{"path":"https://animint.github.io/animint2/reference/getCommonChunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the common columns for each tsv to one chunk — getCommonChunk","title":"Save the common columns for each tsv to one chunk — getCommonChunk","text":"Save common columns tsv one chunk","code":""},{"path":"https://animint.github.io/animint2/reference/getCommonChunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the common columns for each tsv to one chunk — getCommonChunk","text":"","code":"getCommonChunk(built, chunk.vars, aes.list)"},{"path":"https://animint.github.io/animint2/reference/getCommonChunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the common columns for each tsv to one chunk — getCommonChunk","text":"built data.frame built data. chunk.vars variables chunk . aes.list character vector aesthetics. vars character vector chunk variable names split .","code":""},{"path":"https://animint.github.io/animint2/reference/getCommonChunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the common columns for each tsv to one chunk — getCommonChunk","text":"list common varied data save, NULL common data.","code":""},{"path":"https://animint.github.io/animint2/reference/getLayerName.html","id":null,"dir":"Reference","previous_headings":"","what":"Gives a unique name to each layer in saveLayer — getLayerName","title":"Gives a unique name to each layer in saveLayer — getLayerName","text":"Gives unique name layer saveLayer","code":""},{"path":"https://animint.github.io/animint2/reference/getLayerName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gives a unique name to each layer in saveLayer — getLayerName","text":"","code":"getLayerName(L, geom_num, p.name)"},{"path":"https://animint.github.io/animint2/reference/getLayerName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gives a unique name to each layer in saveLayer — getLayerName","text":"L layer saveLayer named geom_num number layer saved p.name name plot layer belongs","code":""},{"path":"https://animint.github.io/animint2/reference/getLayerName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gives a unique name to each layer in saveLayer — getLayerName","text":"unique name layer","code":""},{"path":"https://animint.github.io/animint2/reference/getLayerParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all parameters for a layer — getLayerParams","title":"Get all parameters for a layer — getLayerParams","text":"Get parameters layer","code":""},{"path":"https://animint.github.io/animint2/reference/getLayerParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all parameters for a layer — getLayerParams","text":"","code":"getLayerParams(l)"},{"path":"https://animint.github.io/animint2/reference/getLayerParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all parameters for a layer — getLayerParams","text":"l single layer plot","code":""},{"path":"https://animint.github.io/animint2/reference/getLayerParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all parameters for a layer — getLayerParams","text":"parameters layer","code":""},{"path":"https://animint.github.io/animint2/reference/getLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to get legend information for each scale — getLegend","title":"Function to get legend information for each scale — getLegend","text":"Function get legend information scale","code":""},{"path":"https://animint.github.io/animint2/reference/getLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to get legend information for each scale — getLegend","text":"","code":"getLegend(mb)"},{"path":"https://animint.github.io/animint2/reference/getLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to get legend information for each scale — getLegend","text":"mb single entry guides_merge() list legend data","code":""},{"path":"https://animint.github.io/animint2/reference/getLegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to get legend information for each scale — getLegend","text":"list legend information, NULL guide=FALSE.","code":""},{"path":"https://animint.github.io/animint2/reference/getLegendList.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to get legend information from ggplot — getLegendList","title":"Function to get legend information from ggplot — getLegendList","text":"Function get legend information ggplot","code":""},{"path":"https://animint.github.io/animint2/reference/getLegendList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to get legend information from ggplot — getLegendList","text":"","code":"getLegendList(plistextra)"},{"path":"https://animint.github.io/animint2/reference/getLegendList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to get legend information from ggplot — getLegendList","text":"plistextra output ggplot_build(p)","code":""},{"path":"https://animint.github.io/animint2/reference/getLegendList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to get legend information from ggplot — getLegendList","text":"list containing information legend","code":""},{"path":"https://animint.github.io/animint2/reference/getTextSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to process text size with different types of unit — getTextSize","title":"Function to process text size with different types of unit — getTextSize","text":"Function process text size different types unit","code":""},{"path":"https://animint.github.io/animint2/reference/getTextSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to process text size with different types of unit — getTextSize","text":"","code":"getTextSize(element.name, theme)"},{"path":"https://animint.github.io/animint2/reference/getTextSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to process text size with different types of unit — getTextSize","text":"element.name name theme element theme combined theme plot_theme()","code":""},{"path":"https://animint.github.io/animint2/reference/getTextSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to process text size with different types of unit — getTextSize","text":"character text size, unit pt/px","code":""},{"path":"https://animint.github.io/animint2/reference/getUniqueAxisLabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get unique axis labels for the plot — getUniqueAxisLabels","title":"Get unique axis labels for the plot — getUniqueAxisLabels","text":"Get unique axis labels plot","code":""},{"path":"https://animint.github.io/animint2/reference/getUniqueAxisLabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get unique axis labels for the plot — getUniqueAxisLabels","text":"","code":"getUniqueAxisLabels(plot.meta)"},{"path":"https://animint.github.io/animint2/reference/getUniqueAxisLabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get unique axis labels for the plot — getUniqueAxisLabels","text":"plot.meta contains axis labels","code":""},{"path":"https://animint.github.io/animint2/reference/getUniqueAxisLabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get unique axis labels for the plot — getUniqueAxisLabels","text":"modified plot.meta unique axis labels","code":""},{"path":"https://animint.github.io/animint2/reference/gg-add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new component to a ggplot or theme object. — +.gganimint","title":"Add a new component to a ggplot or theme object. — +.gganimint","text":"operator allows add objects ggplot theme object.","code":""},{"path":"https://animint.github.io/animint2/reference/gg-add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new component to a ggplot or theme object. — +.gganimint","text":"","code":"# S3 method for class 'gganimint' e1 + e2  e1 %+% e2  e1 %+replace% e2"},{"path":"https://animint.github.io/animint2/reference/gg-add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new component to a ggplot or theme object. — +.gganimint","text":"e1 object class ggplot theme e2 component add e1","code":""},{"path":"https://animint.github.io/animint2/reference/gg-add.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a new component to a ggplot or theme object. — +.gganimint","text":"first object object class ggplot, can add following types objects, return modified ggplot object. data.frame: replace current data.frame      (must use %+%) uneval: replace current aesthetics layer: add new layer theme: update plot theme scale: replace current scale coord: override current coordinate system facet: override current coordinate faceting first object object class theme, can add another theme object. return modified theme object. theme objects, + operator %+replace% can used modify elements themes. + operator updates elements e1 differ elements specified (NULL) e2. Thus operator can used incrementally add modify attributes ggplot theme. contrast, %+replace% operator replaces entire element; element theme specified e2 present resulting theme (.e. NULL). Thus operator can used overwrite entire theme.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/gg-add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new component to a ggplot or theme object. — +.gganimint","text":"","code":"### Adding objects to a ggplot object p <- ggplot(mtcars, aes(wt, mpg, colour = disp)) +   geom_point()  p  p + coord_cartesian(ylim = c(0, 40))  p + scale_colour_continuous(breaks = c(100, 300))  p + guides(colour = \"colourbar\")   # Use a different data frame m <- mtcars[1:10, ] p %+% m   ### Adding objects to a theme object # Compare these results of adding theme objects to other theme objects add_el <- theme_grey() + theme(text = element_text(family = \"Times\")) rep_el <- theme_grey() %+replace% theme(text = element_text(family = \"Times\"))  add_el$text #> List of 10 #>  $ family    : chr \"Times\" #>  $ face      : chr \"plain\" #>  $ colour    : chr \"black\" #>  $ size      : num 11 #>  $ hjust     : num 0.5 #>  $ vjust     : num 0.5 #>  $ angle     : num 0 #>  $ lineheight: num 0.9 #>  $ margin    : 'margin' num [1:4] 0points 0points 0points 0points #>   ..- attr(*, \"unit\")= int 8 #>  $ debug     : logi FALSE #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" rep_el$text #> List of 10 #>  $ family    : chr \"Times\" #>  $ face      : NULL #>  $ colour    : NULL #>  $ size      : NULL #>  $ hjust     : NULL #>  $ vjust     : NULL #>  $ angle     : NULL #>  $ lineheight: NULL #>  $ margin    : NULL #>  $ debug     : NULL #>  - attr(*, \"class\")= chr [1:2] \"element_text\" \"element\""},{"path":"https://animint.github.io/animint2/reference/gg_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Give a deprecation error, warning, or message, depending on version number. — gg_dep","title":"Give a deprecation error, warning, or message, depending on version number. — gg_dep","text":"Version numbers format <major>.<minor>.<subminor>, like 0.9.2. function compares current version number ggplot2 specified version, recent version function (object) deprecated.","code":""},{"path":"https://animint.github.io/animint2/reference/gg_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give a deprecation error, warning, or message, depending on version number. — gg_dep","text":"","code":"gg_dep(version, msg)"},{"path":"https://animint.github.io/animint2/reference/gg_dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give a deprecation error, warning, or message, depending on version number. — gg_dep","text":"version last version ggplot2 function good (words, last version deprecated). msg message print.","code":""},{"path":"https://animint.github.io/animint2/reference/gg_dep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give a deprecation error, warning, or message, depending on version number. — gg_dep","text":"gg_dep give error, warning, message, depending difference current ggplot2 version specified version. current major number greater version's major number, current minor number 1 greater version's minor number, give error. current minor number differs version's minor number one, give warning. current subminor number differs version's subminor number, print message.","code":""},{"path":"https://animint.github.io/animint2/reference/gganimintproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new gganimintproto object — gganimintproto","title":"Create a new gganimintproto object — gganimintproto","text":"gganimintproto inspired proto package, important differences. Notably, cleanly supports cross-package inheritance, faster performance.","code":""},{"path":"https://animint.github.io/animint2/reference/gganimintproto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new gganimintproto object — gganimintproto","text":"","code":"gganimintproto(`_class` = NULL, `_inherit` = NULL, ...)  gganimintproto_parent(parent, self)"},{"path":"https://animint.github.io/animint2/reference/gganimintproto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new gganimintproto object — gganimintproto","text":"_class Class name assign object. stored class attribute object. NULL (default), class name added object. _inherit gganimintproto object inherit . NULL, inherit object. ... list members gganimintproto object. parent, self Access parent class parent object self.","code":""},{"path":"https://animint.github.io/animint2/reference/gganimintproto.html","id":"calling-gganimintproto-methods","dir":"Reference","previous_headings":"","what":"Calling gganimintproto methods","title":"Create a new gganimintproto object — gganimintproto","text":"gganimintproto methods can take optional self argument: present, regular method; absent, \"static\" method (.e. use fields). Imagine gganimintproto object Adder, method addx = function(self, n) n + self$x. , call function, use Adder$addx(10) – self passed automatically wrapper function. self located anywhere function signature, although customarily comes first.","code":""},{"path":"https://animint.github.io/animint2/reference/gganimintproto.html","id":"calling-methods-in-a-parent","dir":"Reference","previous_headings":"","what":"Calling methods in a parent","title":"Create a new gganimintproto object — gganimintproto","text":"explicitly call methods parent, use gganimintproto_parent(Parent, self).","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new ggplot plot. — ggplot","title":"Create a new ggplot plot. — ggplot","text":"ggplot() initializes ggplot object. can used declare input data frame graphic specify set plot aesthetics intended common throughout subsequent layers unless specifically overridden.","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new ggplot plot. — ggplot","text":"","code":"ggplot(data = NULL, mapping = aes(), ..., environment = parent.frame())"},{"path":"https://animint.github.io/animint2/reference/ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new ggplot plot. — ggplot","text":"data Default dataset use plot. already data.frame, converted one fortify. specified, must suppled layer added plot. mapping Default list aesthetic mappings use plot. specified, must suppled layer added plot. ... arguments passed methods. currently used. environment variable defined aesthetic mapping found data, ggplot look environment. defaults using environment ggplot() called.","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new ggplot plot. — ggplot","text":"ggplot() typically used construct plot incrementally, using + operator add layers existing ggplot object. advantageous code explicit layers added order added. complex graphics multiple layers, initialization ggplot recommended. three common ways invoke ggplot: ggplot(df, aes(x, y, <aesthetics>)) ggplot(df) ggplot() first method recommended layers use data set aesthetics, although method can also used add layer using data another data frame. See first example . second method specifies default data frame use plot, aesthetics defined front. useful one data frame used predominantly layers added, aesthetics may vary one layer another. third method initializes skeleton ggplot object fleshed layers added. method useful multiple data frames used produce different layers, often case complex graphics.","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new ggplot plot. — ggplot","text":"","code":"df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),                  y = rnorm(30)) # Compute sample mean and standard deviation in each group ds <- plyr::ddply(df, \"gp\", plyr::summarise, mean = mean(y), sd = sd(y))  # Declare the data frame and common aesthetics. # The summary data frame ds is used to plot # larger red points in a second geom_point() layer. # If the data = argument is not specified, it uses the # declared data frame from ggplot(); ditto for the aesthetics. ggplot(df, aes(x = gp, y = y)) +    geom_point() +    geom_point(data = ds, aes(y = mean),               colour = 'red', size = 3)  # Same plot as above, declaring only the data frame in ggplot(). # Note how the x and y aesthetics must now be declared in # each geom_point() layer. ggplot(df) +    geom_point(aes(x = gp, y = y)) +    geom_point(data = ds, aes(x = gp, y = mean),                  colour = 'red', size = 3)  # Set up a skeleton ggplot object and add layers: ggplot() +   geom_point(data = df, aes(x = gp, y = y)) +   geom_point(data = ds, aes(x = gp, y = mean),                         colour = 'red', size = 3) +   geom_errorbar(data = ds, aes(x = gp, y = mean,                     ymin = mean - sd, ymax = mean + sd),                     colour = 'red', width = 0.4)"},{"path":"https://animint.github.io/animint2/reference/ggplotGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ggplot2 plot grob. — ggplotGrob","title":"Generate a ggplot2 plot grob. — ggplotGrob","text":"Generate ggplot2 plot grob.","code":""},{"path":"https://animint.github.io/animint2/reference/ggplotGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ggplot2 plot grob. — ggplotGrob","text":"","code":"ggplotGrob(x)"},{"path":"https://animint.github.io/animint2/reference/ggplotGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ggplot2 plot grob. — ggplotGrob","text":"x ggplot2 object","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Build ggplot for rendering. — ggplot_build","title":"Build ggplot for rendering. — ggplot_build","text":"ggplot_build takes plot object, performs steps necessary produce object can rendered.  function outputs two pieces: list data frames (one layer), panel object, contain information axis limits, breaks etc.","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build ggplot for rendering. — ggplot_build","text":"","code":"ggplot_build(plot)  layer_data(plot, i = 1L)  layer_scales(plot, i = 1L, j = 1L)  layer_grob(plot, i = 1L)"},{"path":"https://animint.github.io/animint2/reference/ggplot_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build ggplot for rendering. — ggplot_build","text":"plot ggplot object","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot_build.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build ggplot for rendering. — ggplot_build","text":"layer_data, layer_grob, layer_scales helper functions returns data, grob, scales associated given layer. useful tests.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/ggplot_gtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a plot with all the usual bits and pieces. — ggplot_gtable","title":"Build a plot with all the usual bits and pieces. — ggplot_gtable","text":"function builds grobs necessary displaying plot, stores special data structure called gtable. object amenable programmatic manipulation, want (e.g.) make legend box 2 cm wide, combine multiple plots single display, preserving aspect ratios across plots.","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot_gtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a plot with all the usual bits and pieces. — ggplot_gtable","text":"","code":"ggplot_gtable(data)"},{"path":"https://animint.github.io/animint2/reference/ggplot_gtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a plot with all the usual bits and pieces. — ggplot_gtable","text":"data plot data generated ggplot_build","code":""},{"path":"https://animint.github.io/animint2/reference/ggplot_gtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a plot with all the usual bits and pieces. — ggplot_gtable","text":"gtable object","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/ggsave.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a ggplot (or other grid object) with sensible defaults — ggsave","title":"Save a ggplot (or other grid object) with sensible defaults — ggsave","text":"ggsave() convenient function saving plot. defaults saving last plot displayed, using size current graphics device. also guesses type graphics device extension.","code":""},{"path":"https://animint.github.io/animint2/reference/ggsave.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a ggplot (or other grid object) with sensible defaults — ggsave","text":"","code":"ggsave(   filename,   plot = last_plot(),   device = NULL,   path = NULL,   scale = 1,   width = NA,   height = NA,   units = c(\"in\", \"cm\", \"mm\"),   dpi = 300,   limitsize = TRUE,   ... )"},{"path":"https://animint.github.io/animint2/reference/ggsave.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a ggplot (or other grid object) with sensible defaults — ggsave","text":"filename File name create disk. plot Plot save, defaults last plot displayed. device Device use (function recognized extensions, e.g. \"pdf\"). default, extracted filename extension. ggsave currently recognises eps/ps, tex (pictex), pdf, jpeg, tiff, png, bmp, svg wmf (windows ). path Path save plot (combined filename). scale Multiplicative scaling factor. width, height Plot dimensions, defaults size current graphics device. units Units width height specified explicitly (, cm, mm) dpi Resolution used raster outputs. limitsize TRUE (default), ggsave save images larger 50x50 inches, prevent common error specifying dimensions pixels. ... arguments passed graphics device","code":""},{"path":"https://animint.github.io/animint2/reference/ggsave.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a ggplot (or other grid object) with sensible defaults — ggsave","text":"","code":"if (FALSE) { # \\dontrun{ ggplot(mtcars, aes(mpg, wt)) + geom_point()  ggsave(file.path(tempdir(), \"mtcars.pdf\")) ggsave(file.path(tempdir(), \"mtcars.png\"))  ggsave(file.path(tempdir(), \"mtcars.pdf\"), width = 4, height = 4) ggsave(file.path(tempdir(), \"mtcars.pdf\"), width = 20, height = 20, units = \"cm\")  unlink(file.path(tempdir(), \"mtcars.pdf\")) unlink(file.path(tempdir(), \"mtcars.png\"))  # specify device when saving to a file with unknown extension # (for example a server supplied temporary file) file <- tempfile() ggsave(file, device = \"pdf\") unlink(file) } # }"},{"path":"https://animint.github.io/animint2/reference/ggtheme.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 themes — ggtheme","title":"ggplot2 themes — ggtheme","text":"Themes set general aspect plot colour background, gridlines, size colour fonts.","code":""},{"path":"https://animint.github.io/animint2/reference/ggtheme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 themes — ggtheme","text":"","code":"theme_grey(base_size = 11, base_family = \"\")  theme_gray(base_size = 11, base_family = \"\")  theme_bw(base_size = 12, base_family = \"\")  theme_linedraw(base_size = 12, base_family = \"\")  theme_light(base_size = 12, base_family = \"\")  theme_minimal(base_size = 12, base_family = \"\")  theme_classic(base_size = 12, base_family = \"\")  theme_dark(base_size = 12, base_family = \"\")  theme_void(base_size = 12, base_family = \"\")"},{"path":"https://animint.github.io/animint2/reference/ggtheme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 themes — ggtheme","text":"base_size base font size base_family base font family","code":""},{"path":"https://animint.github.io/animint2/reference/ggtheme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot2 themes — ggtheme","text":"theme_gray signature ggplot2 theme grey background white gridlines, designed put data forward yet make comparisons easy. theme_bw classic dark--light ggplot2 theme. May work better presentations displayed projector. theme_linedraw theme black lines various widths white backgrounds, reminiscent line drawings. Serves purpose similar theme_bw. Note theme thin lines (<< 1 pt) journals may refuse. theme_light theme similar theme_linedraw light grey lines axes, direct attention towards data. theme_dark dark cousin theme_light, similar line sizes dark background. Useful make thin coloured lines pop . theme_minimal minimalistic theme background annotations. theme_classic classic-looking theme, x y axis lines gridlines. theme_void completely empty theme.","code":""},{"path":"https://animint.github.io/animint2/reference/ggtheme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 themes — ggtheme","text":"","code":"p <- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,      colour = factor(gear))) + facet_wrap(~am)  p  p + theme_gray()  p + theme_bw()  p + theme_linedraw()  p + theme_light()  p + theme_dark()  p + theme_minimal()  p + theme_classic()  p + theme_void()"},{"path":"https://animint.github.io/animint2/reference/graphical-units.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical units — graphical-units","title":"Graphical units — graphical-units","text":"Multiply size mm constants order convert units grid uses internally lwd fontsize.","code":""},{"path":"https://animint.github.io/animint2/reference/graphical-units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical units — graphical-units","text":"","code":".pt  .stroke"},{"path":"https://animint.github.io/animint2/reference/graphical-units.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Graphical units — graphical-units","text":"object class numeric length 1. object class numeric length 1.","code":""},{"path":"https://animint.github.io/animint2/reference/guide_colourbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous colour bar guide. — guide_colourbar","title":"Continuous colour bar guide. — guide_colourbar","text":"Colour bar guide shows continuous color scales mapped onto values. Colour bar available scale_fill scale_colour. information, see inspiration function: Matlab's colorbar function.","code":""},{"path":"https://animint.github.io/animint2/reference/guide_colourbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous colour bar guide. — guide_colourbar","text":"","code":"guide_colourbar(   title = waiver(),   title.position = NULL,   title.theme = NULL,   title.hjust = NULL,   title.vjust = NULL,   label = TRUE,   label.position = NULL,   label.theme = NULL,   label.hjust = NULL,   label.vjust = NULL,   barwidth = NULL,   barheight = NULL,   nbin = 20,   raster = TRUE,   ticks = TRUE,   draw.ulim = TRUE,   draw.llim = TRUE,   direction = NULL,   default.unit = \"line\",   reverse = FALSE,   order = 0,   ... )  guide_colorbar(   title = waiver(),   title.position = NULL,   title.theme = NULL,   title.hjust = NULL,   title.vjust = NULL,   label = TRUE,   label.position = NULL,   label.theme = NULL,   label.hjust = NULL,   label.vjust = NULL,   barwidth = NULL,   barheight = NULL,   nbin = 20,   raster = TRUE,   ticks = TRUE,   draw.ulim = TRUE,   draw.llim = TRUE,   direction = NULL,   default.unit = \"line\",   reverse = FALSE,   order = 0,   ... )"},{"path":"https://animint.github.io/animint2/reference/guide_colourbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous colour bar guide. — guide_colourbar","text":"title character string expression indicating title guide. NULL, title shown. default (waiver), name scale object name specified labs used title. title.position character string indicating position  title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text expected. default, theme specified legend.title theme theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label logical. TRUE labels drawn. FALSE labels invisible. label.position character string indicating position label. One \"top\", \"bottom\" (default horizontal guide), \"left\", \"right\" (default vertical guide). label.theme theme object rendering label text. Usually object element_text expected. default, theme specified legend.text theme theme. label.hjust numeric specifying horizontal justification label text. label.vjust numeric specifying vertical justification label text. barwidth numeric unit object specifying width colorbar. Default value legend.key.width legend.key.size theme theme. barheight numeric unit object specifying height colorbar. Default value legend.key.height legend.key.size theme theme. nbin numeric specifying number bins drawing colorbar. smoother colorbar larger value. raster logical. TRUE colorbar rendered raster object. FALSE colorbar rendered set rectangles. Note graphics devices capable rendering raster image. ticks logical specifying tick marks colorbar visible. draw.ulim logical specifying upper limit tick marks visible. draw.llim logical specifying lower limit tick marks visible. direction character string indicating direction guide. One \"horizontal\" \"vertical.\" default.unit character string indicating unit barwidth barheight. reverse logical. TRUE colorbar reversed. default, highest value top lowest value bottom order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. ... ignored.","code":""},{"path":"https://animint.github.io/animint2/reference/guide_colourbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous colour bar guide. — guide_colourbar","text":"guide object","code":""},{"path":"https://animint.github.io/animint2/reference/guide_colourbar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Continuous colour bar guide. — guide_colourbar","text":"Guides can specified scale_* guides. guide=\"legend\" scale_* syntactic sugar guide=guide_legend() (e.g. scale_color_manual(guide = \"legend\")). specify guide scale detail, see guides.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/guide_colourbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous colour bar guide. — guide_colourbar","text":"","code":"df <- reshape2::melt(outer(1:4, 1:4), varnames = c(\"X1\", \"X2\"))  p1 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value)) p2 <- p1 + geom_point(aes(size = value))  # Basic form p1 + scale_fill_continuous(guide = \"colorbar\")  p1 + scale_fill_continuous(guide = guide_colorbar())  p1 + guides(fill = guide_colorbar())   # Control styles  # bar size p1 + guides(fill = guide_colorbar(barwidth = 0.5, barheight = 10))   # no label p1 + guides(fill = guide_colorbar(label = FALSE))   # no tick marks p1 + guides(fill = guide_colorbar(ticks = FALSE))   # label position p1 + guides(fill = guide_colorbar(label.position = \"left\"))   # label theme p1 + guides(fill = guide_colorbar(label.theme = element_text(colour = \"blue\", angle = 0)))   # small number of bins p1 + guides(fill = guide_colorbar(nbin = 3))   # large number of bins p1 + guides(fill = guide_colorbar(nbin = 100))   # make top- and bottom-most ticks invisible p1 + scale_fill_continuous(limits = c(0,20), breaks = c(0, 5, 10, 15, 20),  guide = guide_colorbar(nbin=100, draw.ulim = FALSE, draw.llim = FALSE))   # guides can be controlled independently p2 +   scale_fill_continuous(guide = \"colorbar\") +   scale_size(guide = \"legend\")  p2 + guides(fill = \"colorbar\", size = \"legend\")   p2 +   scale_fill_continuous(guide = guide_colorbar(direction = \"horizontal\")) +   scale_size(guide = guide_legend(direction = \"vertical\"))"},{"path":"https://animint.github.io/animint2/reference/guide_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend guide. — guide_legend","title":"Legend guide. — guide_legend","text":"Legend type guide shows key (.e., geoms) mapped onto values. Legend guides various scales integrated possible.","code":""},{"path":"https://animint.github.io/animint2/reference/guide_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend guide. — guide_legend","text":"","code":"guide_legend(   title = waiver(),   title.position = NULL,   title.theme = NULL,   title.hjust = NULL,   title.vjust = NULL,   label = TRUE,   label.position = NULL,   label.theme = NULL,   label.hjust = NULL,   label.vjust = NULL,   keywidth = NULL,   keyheight = NULL,   direction = NULL,   default.unit = \"line\",   override.aes = list(),   nrow = NULL,   ncol = NULL,   byrow = FALSE,   reverse = FALSE,   order = 0,   ... )"},{"path":"https://animint.github.io/animint2/reference/guide_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend guide. — guide_legend","text":"title character string expression indicating title guide. NULL, title shown. default (waiver), name scale object name specified labs used title. title.position character string indicating position  title. One \"top\" (default vertical guide), \"bottom\", \"left\" (default horizontal guide), \"right.\" title.theme theme object rendering title text. Usually object element_text expected. default, theme specified legend.title theme theme. title.hjust number specifying horizontal justification title text. title.vjust number specifying vertical justification title text. label logical. TRUE labels drawn. FALSE labels invisible. label.position character string indicating position label. One \"top\", \"bottom\" (default horizontal guide), \"left\", \"right\" (default vertical guide). label.theme theme object rendering label text. Usually object element_text expected. default, theme specified legend.text theme theme. label.hjust numeric specifying horizontal justification label text. label.vjust numeric specifying vertical justification label text. keywidth numeric unit object specifying width legend key. Default value legend.key.width legend.key.size theme theme. keyheight numeric unit object specifying height legend key. Default value legend.key.height legend.key.size theme theme. direction character string indicating direction guide. One \"horizontal\" \"vertical.\" default.unit character string indicating unit keywidth keyheight. override.aes list specifying aesthetic parameters legend key. See details examples. nrow desired number rows legends. ncol desired number column legends. byrow logical. FALSE (default) legend-matrix filled columns, otherwise legend-matrix filled rows. reverse logical. TRUE order legends reversed. order positive integer less 99 specifies order guide among multiple guides. controls order multiple guides displayed, contents guide . 0 (default), order determined secret algorithm. ... ignored.","code":""},{"path":"https://animint.github.io/animint2/reference/guide_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legend guide. — guide_legend","text":"guide object","code":""},{"path":"https://animint.github.io/animint2/reference/guide_legend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legend guide. — guide_legend","text":"Guides can specified scale_* guides. guide=\"legend\" scale_* syntactic sugar guide=guide_legend() (e.g. scale_color_manual(guide = \"legend\")). specify guide scale detail, see guides.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/guide_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legend guide. — guide_legend","text":"","code":"# \\donttest{ df <- reshape2::melt(outer(1:4, 1:4), varnames = c(\"X1\", \"X2\"))  p1 <- ggplot(df, aes(X1, X2)) + geom_tile(aes(fill = value)) p2 <- p1 + geom_point(aes(size = value))  # Basic form p1 + scale_fill_continuous(guide = \"legend\")  p1 + scale_fill_continuous(guide = guide_legend())   # Guide title p1 + scale_fill_continuous(guide = guide_legend(title = \"V\")) # title text  p1 + scale_fill_continuous(guide = guide_legend(title = NULL)) # no title   # Control styles  # key size p1 + guides(fill = guide_legend(keywidth = 3, keyheight = 1))   # title position p1 + guides(fill = guide_legend(title = \"LEFT\", title.position = \"left\"))   # title text styles via element_text p1 + guides(fill =   guide_legend(     title.theme = element_text(       size = 15,       face = \"italic\",       colour = \"red\",       angle = 0     )   ) )   # label position p1 + guides(fill = guide_legend(label.position = \"left\", label.hjust = 1))   # label styles p1 + scale_fill_continuous(breaks = c(5, 10, 15),   labels = paste(\"long\", c(5, 10, 15)),   guide = guide_legend(     direction = \"horizontal\",     title.position = \"top\",     label.position = \"bottom\",     label.hjust = 0.5,     label.vjust = 1,     label.theme = element_text(angle = 90)   ) )   # Set aesthetic of legend key  # very low alpha value make it difficult to see legend key p3 <- ggplot(diamonds, aes(carat, price)) +   geom_point(aes(colour = color), alpha = 1/100) p3   # override.aes overwrites the alpha p3 + guides(colour = guide_legend(override.aes = list(alpha = 1)))   # multiple row/col legends df <- data.frame(x = 1:20, y = 1:20, color = letters[1:20]) p <- ggplot(df, aes(x, y)) +   geom_point(aes(colour = color)) p + guides(col = guide_legend(nrow = 8))  p + guides(col = guide_legend(ncol = 8))  p + guides(col = guide_legend(nrow = 8, byrow = TRUE))  p + guides(col = guide_legend(ncol = 8, byrow = TRUE))   # reversed order legend p + guides(col = guide_legend(reverse = TRUE))  # }"},{"path":"https://animint.github.io/animint2/reference/guides.html","id":null,"dir":"Reference","previous_headings":"","what":"Set guides for each scale. — guides","title":"Set guides for each scale. — guides","text":"Guides scale can set call scale_* argument guide, guides.","code":""},{"path":"https://animint.github.io/animint2/reference/guides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set guides for each scale. — guides","text":"","code":"guides(...)"},{"path":"https://animint.github.io/animint2/reference/guides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set guides for each scale. — guides","text":"... List scale guide pairs","code":""},{"path":"https://animint.github.io/animint2/reference/guides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set guides for each scale. — guides","text":"list containing mapping scale guide.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/guides.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set guides for each scale. — guides","text":"","code":"# \\donttest{ # ggplot object  dat <- data.frame(x = 1:5, y = 1:5, p = 1:5, q = factor(1:5),  r = factor(1:5)) p <- ggplot(dat, aes(x, y, colour = p, size = q, shape = r)) + geom_point()  # without guide specification p #> Warning: Using size for a discrete variable is not advised.   # Show colorbar guide for colour. # All these examples below have a same effect.  p + guides(colour = \"colorbar\", size = \"legend\", shape = \"legend\") #> Warning: Using size for a discrete variable is not advised.  p + guides(colour = guide_colorbar(), size = guide_legend(),   shape = guide_legend()) #> Warning: Using size for a discrete variable is not advised.  p +  scale_colour_continuous(guide = \"colorbar\") +  scale_size_discrete(guide = \"legend\") +  scale_shape(guide = \"legend\") #> Warning: Using size for a discrete variable is not advised.    # Remove some guides  p + guides(colour = \"none\") #> Warning: Using size for a discrete variable is not advised.   p + guides(colour = \"colorbar\",size = \"none\") #> Warning: Using size for a discrete variable is not advised.   # Guides are integrated where possible  p + guides(colour = guide_legend(\"title\"), size = guide_legend(\"title\"),   shape = guide_legend(\"title\")) #> Warning: Using size for a discrete variable is not advised.  # same as g <- guide_legend(\"title\") p + guides(colour = g, size = g, shape = g) #> Warning: Using size for a discrete variable is not advised.   p + theme(legend.position = \"bottom\") #> Warning: Using size for a discrete variable is not advised.   # position of guides  p + theme(legend.position = \"bottom\", legend.box = \"horizontal\") #> Warning: Using size for a discrete variable is not advised.   # Set order for multiple guides ggplot(mpg, aes(displ, cty)) +   geom_point(aes(size = hwy, colour = cyl, shape = drv)) +   guides(    colour = guide_colourbar(order = 1),    shape = guide_legend(order = 2),    size = guide_legend(order = 3)  )  # }"},{"path":"https://animint.github.io/animint2/reference/hmisc.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap up a selection of summary functions from Hmisc to make it easy to use with stat_summary. — hmisc","title":"Wrap up a selection of summary functions from Hmisc to make it easy to use with stat_summary. — hmisc","text":"See Hmisc documentation details options.","code":""},{"path":"https://animint.github.io/animint2/reference/hmisc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap up a selection of summary functions from Hmisc to make it easy to use with stat_summary. — hmisc","text":"","code":"mean_cl_boot(x, ...)  mean_cl_normal(x, ...)  mean_sdl(x, ...)  median_hilow(x, ...)"},{"path":"https://animint.github.io/animint2/reference/hmisc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap up a selection of summary functions from Hmisc to make it easy to use with stat_summary. — hmisc","text":"x numeric vector ... arguments passed respective Hmisc function.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/intreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Interval regression — intreg","title":"Interval regression — intreg","text":"Learning model complexity using max-margin interval regression. observed several noisy piecewise constant signals, weak labels many change-points occur several regions. Max margin interval regression algorithm uses information learn penalty function accurate change-point detection.","code":""},{"path":"https://animint.github.io/animint2/reference/intreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interval regression — intreg","text":"","code":"data(intreg)"},{"path":"https://animint.github.io/animint2/reference/intreg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Interval regression — intreg","text":"7 related data.frames: signals contains noisy   piecewise constant signals, annotations contains weak labels,   segments breaks contain segmentation model, selection contains   penalty cost information, intervals contains target   intervals penalty values signal, model describes   learned max margin interval regression model.","code":""},{"path":"https://animint.github.io/animint2/reference/is.Coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this object a coordinate system? — is.Coord","title":"Is this object a coordinate system? — is.Coord","text":"object coordinate system?","code":""},{"path":"https://animint.github.io/animint2/reference/is.Coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this object a coordinate system? — is.Coord","text":"","code":"is.Coord(x)"},{"path":"https://animint.github.io/animint2/reference/is.facet.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this object a facetting specification? — is.facet","title":"Is this object a facetting specification? — is.facet","text":"object facetting specification?","code":""},{"path":"https://animint.github.io/animint2/reference/is.facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this object a facetting specification? — is.facet","text":"","code":"is.facet(x)"},{"path":"https://animint.github.io/animint2/reference/is.facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this object a facetting specification? — is.facet","text":"x object test","code":""},{"path":"https://animint.github.io/animint2/reference/is.gganimintproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an object a gganimintproto object? — is.gganimintproto","title":"Is an object a gganimintproto object? — is.gganimintproto","text":"object gganimintproto object?","code":""},{"path":"https://animint.github.io/animint2/reference/is.gganimintproto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an object a gganimintproto object? — is.gganimintproto","text":"","code":"is.gganimintproto(x)"},{"path":"https://animint.github.io/animint2/reference/is.gganimintproto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an object a gganimintproto object? — is.gganimintproto","text":"x object test.","code":""},{"path":"https://animint.github.io/animint2/reference/is.ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether x is a ggplot object — is.ggplot","title":"Reports whether x is a ggplot object — is.ggplot","text":"Reports whether x ggplot object","code":""},{"path":"https://animint.github.io/animint2/reference/is.ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether x is a ggplot object — is.ggplot","text":"","code":"is.ggplot(x)"},{"path":"https://animint.github.io/animint2/reference/is.ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether x is a ggplot object — is.ggplot","text":"x object test","code":""},{"path":"https://animint.github.io/animint2/reference/is.rel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether x is a rel object — is.rel","title":"Reports whether x is a rel object — is.rel","text":"Reports whether x rel object","code":""},{"path":"https://animint.github.io/animint2/reference/is.rel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether x is a rel object — is.rel","text":"","code":"is.rel(x)"},{"path":"https://animint.github.io/animint2/reference/is.rel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether x is a rel object — is.rel","text":"x object test","code":""},{"path":"https://animint.github.io/animint2/reference/is.rgb.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if character is an RGB hexadecimal color value — is.rgb","title":"Check if character is an RGB hexadecimal color value — is.rgb","text":"Check character RGB hexadecimal color value","code":""},{"path":"https://animint.github.io/animint2/reference/is.rgb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if character is an RGB hexadecimal color value — is.rgb","text":"","code":"is.rgb(x)"},{"path":"https://animint.github.io/animint2/reference/is.rgb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if character is an RGB hexadecimal color value — is.rgb","text":"x character","code":""},{"path":"https://animint.github.io/animint2/reference/is.rgb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if character is an RGB hexadecimal color value — is.rgb","text":"True/False value","code":""},{"path":"https://animint.github.io/animint2/reference/is.theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Reports whether x is a theme object — is.theme","title":"Reports whether x is a theme object — is.theme","text":"Reports whether x theme object","code":""},{"path":"https://animint.github.io/animint2/reference/is.theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reports whether x is a theme object — is.theme","text":"","code":"is.theme(x)"},{"path":"https://animint.github.io/animint2/reference/is.theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reports whether x is a theme object — is.theme","text":"x object test","code":""},{"path":"https://animint.github.io/animint2/reference/issueSelectorWarnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Issue warnings for selectors — issueSelectorWarnings","title":"Issue warnings for selectors — issueSelectorWarnings","text":"Issue warnings selectors","code":""},{"path":"https://animint.github.io/animint2/reference/issueSelectorWarnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Issue warnings for selectors — issueSelectorWarnings","text":"","code":"issueSelectorWarnings(geoms, selector.aes, duration)"},{"path":"https://animint.github.io/animint2/reference/issueSelectorWarnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Issue warnings for selectors — issueSelectorWarnings","text":"geoms geoms check warnings selector.aes selectors geom duration animation variable information check key value","code":""},{"path":"https://animint.github.io/animint2/reference/issueSelectorWarnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Issue warnings for selectors — issueSelectorWarnings","text":"NULL","code":""},{"path":"https://animint.github.io/animint2/reference/knit_print.animint.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert an interactive animation into an R markdown document using a customized print method. — knit_print.animint","title":"Insert an interactive animation into an R markdown document using a customized print method. — knit_print.animint","text":"Insert interactive animation R markdown document using customized print method.","code":""},{"path":"https://animint.github.io/animint2/reference/knit_print.animint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert an interactive animation into an R markdown document using a customized print method. — knit_print.animint","text":"","code":"# S3 method for class 'animint' knit_print(x, options, ...)"},{"path":"https://animint.github.io/animint2/reference/knit_print.animint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert an interactive animation into an R markdown document using a customized print method. — knit_print.animint","text":"x named list ggplots option lists pass animint2dir. options knitr options. ... placeholder.","code":""},{"path":"https://animint.github.io/animint2/reference/knit_print.animint.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Insert an interactive animation into an R markdown document using a customized print method. — knit_print.animint","text":"https://github.com/yihui/knitr/blob/master/vignettes/knit_print.Rmd","code":""},{"path":"https://animint.github.io/animint2/reference/knit_print.animint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert an interactive animation into an R markdown document using a customized print method. — knit_print.animint","text":"Carson Sievert","code":""},{"path":"https://animint.github.io/animint2/reference/label_bquote.html","id":null,"dir":"Reference","previous_headings":"","what":"Backquoted labeller — label_bquote","title":"Backquoted labeller — label_bquote","text":"label_bquote() offers flexible way labelling facet rows columns plotmath expressions. Backquoted variables replaced value facet.","code":""},{"path":"https://animint.github.io/animint2/reference/label_bquote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backquoted labeller — label_bquote","text":"","code":"label_bquote(rows = NULL, cols = NULL, default = label_value)"},{"path":"https://animint.github.io/animint2/reference/label_bquote.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backquoted labeller — label_bquote","text":"rows Backquoted labelling expression rows. cols Backquoted labelling expression columns. default Default labeller function rows columns plotmath expression provided.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/label_bquote.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Backquoted labeller — label_bquote","text":"","code":"# The variables mentioned in the plotmath expression must be # backquoted and referred to by their names. p <- ggplot(mtcars, aes(wt, mpg)) + geom_point() p + facet_grid(vs ~ ., labeller = label_bquote(alpha ^ .(vs)))  p + facet_grid(. ~ vs, labeller = label_bquote(cols = .(vs) ^ .(vs)))  p + facet_grid(. ~ vs + am, labeller = label_bquote(cols = .(am) ^ .(vs)))"},{"path":"https://animint.github.io/animint2/reference/labeller.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic labeller function for facets — labeller","title":"Generic labeller function for facets — labeller","text":"function makes easy assign different labellers different factors. labeller can function can named character vectors serve lookup table.","code":""},{"path":"https://animint.github.io/animint2/reference/labeller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic labeller function for facets — labeller","text":"","code":"labeller(   ...,   .rows = NULL,   .cols = NULL,   keep.as.numeric = NULL,   .multi_line = TRUE,   .default = label_value )"},{"path":"https://animint.github.io/animint2/reference/labeller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic labeller function for facets — labeller","text":"... Named arguments form variable = labeller. labeller passed as_labeller() can lookup table, function taking returning character vectors, simply labeller function. .rows, .cols Labeller whole margin (either rows columns). passed as_labeller(). margin-wide labeller set, make sure mention ... variable belonging margin. keep..numeric Deprecated. supplied labellers -labeller functions able work character labels. .multi_line Whether display labels multiple factors separate lines. passed labeller function. .default Default labeller variables specified. Also used lookup tables non-labeller functions.","code":""},{"path":"https://animint.github.io/animint2/reference/labeller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic labeller function for facets — labeller","text":"labeller function supply facet_grid   argument labeller.","code":""},{"path":"https://animint.github.io/animint2/reference/labeller.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generic labeller function for facets — labeller","text":"case functions, labeller class labeller, directly applied data frame labels. Otherwise, applied columns data frame labels. data frame processed function specified .default argument. intended used functions taking character vector capitalize.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/labeller.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic labeller function for facets — labeller","text":"","code":"# \\donttest{ p1 <- ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point()  # You can assign different labellers to variables: p1 + facet_grid(vs + am ~ gear,   labeller = labeller(vs = label_both, am = label_value))   # Or whole margins: p1 + facet_grid(vs + am ~ gear,   labeller = labeller(.rows = label_both, .cols = label_value))   # You can supply functions operating on strings: capitalize <- function(string) {   substr(string, 1, 1) <- toupper(substr(string, 1, 1))   string } p2 <- ggplot(msleep, aes(x = sleep_total, y = awake)) + geom_point() p2 + facet_grid(vore ~ conservation, labeller = labeller(vore = capitalize))   # Or use character vectors as lookup tables: conservation_status <- c(   cd = \"Conservation Dependent\",   en = \"Endangered\",   lc = \"Least concern\",   nt = \"Near Threatened\",   vu = \"Vulnerable\",   domesticated = \"Domesticated\" ) ## Source: http://en.wikipedia.org/wiki/Wikipedia:Conservation_status  p2 + facet_grid(vore ~ conservation, labeller = labeller(   .default = capitalize,   conservation = conservation_status ))   # In the following example, we rename the levels to the long form, # then apply a wrap labeller to the columns to prevent cropped text msleep$conservation2 <- plyr::revalue(msleep$conservation,   conservation_status)  p2 %+% msleep + facet_grid(vore ~ conservation2)  p2 %+% msleep +   facet_grid(vore ~ conservation2,     labeller = labeller(conservation2 = label_wrap_gen(10))   )   # labeller() is especially useful to act as a global labeller. You # can set it up once and use it on a range of different plots with # different facet specifications.  global_labeller <- labeller(   vore = capitalize,   conservation = conservation_status,   conservation2 = label_wrap_gen(10),   .default = label_both )  p2 + facet_grid(vore ~ conservation, labeller = global_labeller)  p2 + facet_wrap(~vore, labeller = global_labeller)  p2 %+% msleep + facet_wrap(~conservation2, labeller = global_labeller)  # }"},{"path":"https://animint.github.io/animint2/reference/labellers.html","id":null,"dir":"Reference","previous_headings":"","what":"Labeller functions — labellers","title":"Labeller functions — labellers","text":"Labeller functions charge formatting strip labels facet grids wraps. accept multi_line argument control whether multiple factors (defined formulae ~first + second) displayed single line separated commas, line.","code":""},{"path":"https://animint.github.io/animint2/reference/labellers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labeller functions — labellers","text":"","code":"label_value(labels, multi_line = TRUE)  label_both(labels, multi_line = TRUE, sep = \": \")  label_context(labels, multi_line = TRUE, sep = \": \")  label_parsed(labels, multi_line = TRUE)  label_wrap_gen(width = 25, multi_line = TRUE)"},{"path":"https://animint.github.io/animint2/reference/labellers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labeller functions — labellers","text":"labels Data frame labels. Usually contains one element, facetting multiple factors entails multiple label variables. multi_line Whether display labels multiple factors separate lines. sep String separating variables values. width Maximum number characters wrapping strip.","code":""},{"path":"https://animint.github.io/animint2/reference/labellers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Labeller functions — labellers","text":"label_value() displays value factor label_both() displays variable name factor value. label_context() context-dependent uses label_value() single factor facetting label_both() multiple factors involved. label_wrap_gen() uses strwrap() line wrapping. label_parsed() interprets labels plotmath expressions. label_bquote() offers flexible way constructing plotmath expressions. See examples bquote() details syntax argument.","code":""},{"path":"https://animint.github.io/animint2/reference/labellers.html","id":"writing-new-labeller-functions","dir":"Reference","previous_headings":"","what":"Writing New Labeller Functions","title":"Labeller functions — labellers","text":"Note easy way write labeller function   transform function operating character vectors   as_labeller(). labeller function accepts data frame labels (character   vectors) containing one column factor. Multiple factors   occur formula type ~first + second. return value must rectangular list 'row'   characterises single facet. list elements can either   character vectors lists plotmath expressions. multiple   elements returned, get displayed new lines   (.e., facet gets multi-line strip labels). illustrate, say labeller returns list two   character vectors length 3. rectangular list   elements length. first facet get   first elements vector display   line. second facet gets second elements   vector, . useful labeller, can retrieve type   attribute incoming data frame labels. value   attribute reflects kind strips labeller dealing   : \"cols\" columns \"rows\" rows. Note   facet_wrap() columns default rows   strips switched switch option.   facet attribute also provides metadata labels.   takes values \"grid\" \"wrap\". compatibility labeller(), labeller   function must labeller S3 class.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/labellers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labeller functions — labellers","text":"","code":"mtcars$cyl2 <- factor(mtcars$cyl, labels = c(\"alpha\", \"beta\", \"gamma\")) p <- ggplot(mtcars, aes(wt, mpg)) + geom_point()  # Displaying only the values p + facet_grid(. ~ cyl)  p + facet_grid(. ~ cyl, labeller = label_value)   # \\donttest{ # Displaying both the values and the variables p + facet_grid(. ~ cyl, labeller = label_both)   # Displaying only the values or both the values and variables # depending on whether multiple factors are facetted over p + facet_grid(am ~ vs+cyl, labeller = label_context)   # Interpreting the labels as plotmath expressions p + facet_grid(. ~ cyl2)  p + facet_grid(. ~ cyl2, labeller = label_parsed)  p + facet_wrap(~vs + cyl2, labeller = label_parsed)  # }"},{"path":"https://animint.github.io/animint2/reference/labs.html","id":null,"dir":"Reference","previous_headings":"","what":"Change axis labels, legend titles, plot title/subtitle and below-plot caption. — labs","title":"Change axis labels, legend titles, plot title/subtitle and below-plot caption. — labs","text":"Change axis labels, legend titles, plot title/subtitle -plot caption.","code":""},{"path":"https://animint.github.io/animint2/reference/labs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change axis labels, legend titles, plot title/subtitle and below-plot caption. — labs","text":"","code":"labs(...)  xlab(label)  ylab(label)  ggtitle(label, subtitle = NULL)"},{"path":"https://animint.github.io/animint2/reference/labs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change axis labels, legend titles, plot title/subtitle and below-plot caption. — labs","text":"... list new names form aesthetic = \"new name\" label text axis, plot title caption plot. subtitle text subtitle plot displayed title. Leave NULL subtitle.","code":""},{"path":"https://animint.github.io/animint2/reference/labs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change axis labels, legend titles, plot title/subtitle and below-plot caption. — labs","text":"","code":"p <- ggplot(mtcars, aes(mpg, wt)) + geom_point() p + labs(title = \"New plot title\")  p + labs(x = \"New x label\")  p + xlab(\"New x label\")  p + ylab(\"New y label\")  p + ggtitle(\"New plot title\")   # Can add a subtitle to plots with either of the following p + ggtitle(\"New plot title\", subtitle = \"A subtitle\")  p + labs(title = \"New plot title\", subtitle = \"A subtitle\")   # Can add a plot caption underneath the whole plot (for sources, notes or # copyright), similar to the \\code{sub} parameter in base R, with the # following p + labs(caption = \"(based on data from ...)\")   # This should work independently of other functions that modify the # the scale names p + ylab(\"New y label\") + ylim(2, 4) #> Warning: Removed 8 rows containing missing values (geom_point).  p + ylim(2, 4) + ylab(\"New y label\") #> Warning: Removed 8 rows containing missing values (geom_point).   # The labs function also modifies legend labels p <- ggplot(mtcars, aes(mpg, wt, colour = cyl)) + geom_point() p + labs(colour = \"Cylinders\")   # Can also pass in a list, if that is more convenient p + labs(list(title = \"Title\", subtitle = \"Subtitle\", x = \"X\", y = \"Y\"))"},{"path":"https://animint.github.io/animint2/reference/last_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the last plot to be modified or created. — last_plot","title":"Retrieve the last plot to be modified or created. — last_plot","text":"Retrieve last plot modified created.","code":""},{"path":"https://animint.github.io/animint2/reference/last_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the last plot to be modified or created. — last_plot","text":"","code":"last_plot()"},{"path":[]},{"path":"https://animint.github.io/animint2/reference/layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new layer — layer","title":"Create a new layer — layer","text":"layer combination data, stat geom potential position adjustment. Usually layers created using geom_* stat_* calls can also created directly using function.","code":""},{"path":"https://animint.github.io/animint2/reference/layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new layer — layer","text":"","code":"layer(   geom = NULL,   stat = NULL,   data = NULL,   mapping = NULL,   position = NULL,   params = list(),   inherit.aes = TRUE,   subset = NULL,   show.legend = NA )"},{"path":"https://animint.github.io/animint2/reference/layer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new layer — layer","text":"geom geometric object use display data stat statistical transformation use data layer, string. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. position Position adjustment, either string, result call position adjustment function. params Additional parameters geom stat. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders. subset DEPRECATED. older way subsetting dataset used layer. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes.","code":""},{"path":"https://animint.github.io/animint2/reference/layer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new layer — layer","text":"","code":"# geom calls are just a short cut for layer ggplot(mpg, aes(displ, hwy)) + geom_point()  # shortcut for ggplot(mpg, aes(displ, hwy)) +   layer(geom = \"point\", stat = \"identity\", position = \"identity\",     params = list(na.rm = FALSE)   )   # use a function as data to plot a subset of global data ggplot(mpg, aes(displ, hwy)) +   layer(geom = \"point\", stat = \"identity\", position = \"identity\",     data = head, params = list(na.rm = FALSE)   )"},{"path":"https://animint.github.io/animint2/reference/limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate correct scale type for specified limits — limits","title":"Generate correct scale type for specified limits — limits","text":"Generate correct scale type specified limits","code":""},{"path":"https://animint.github.io/animint2/reference/limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate correct scale type for specified limits — limits","text":"","code":"limits(lims, var)"},{"path":"https://animint.github.io/animint2/reference/limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate correct scale type for specified limits — limits","text":"var name variable limits vector limits","code":""},{"path":"https://animint.github.io/animint2/reference/limits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate correct scale type for specified limits — limits","text":"","code":"animint2:::limits(c(1, 5), \"x\") #> <ScaleContinuousPosition> #>  Range:   #>  Limits:    1 --    5 animint2:::limits(c(5, 1), \"x\") #> <ScaleContinuousPosition> #>  Range:   #>  Limits:   -5 --   -1 animint2:::limits(c(\"A\", \"b\", \"c\"), \"x\") #> <gganimintproto object: Class ScaleDiscretePosition, ScaleDiscrete, Scale> #>     aesthetics: x xmin xmax xend #>     break_info: function #>     break_positions: function #>     breaks: waiver #>     call: call #>     clone: function #>     dimension: function #>     drop: TRUE #>     expand: waiver #>     get_breaks: function #>     get_breaks_minor: function #>     get_labels: function #>     get_limits: function #>     guide: none #>     is_discrete: function #>     is_empty: function #>     labels: waiver #>     limits: A b c #>     map: function #>     map_df: function #>     na.value: NA #>     name: waiver #>     palette: function #>     range: <gganimintproto object: Class RangeDiscrete, Range> #>         range: NULL #>         reset: function #>         train: function #>         super:  <gganimintproto object: Class RangeDiscrete, Range> #>     range_c: <gganimintproto object: Class RangeContinuous, Range> #>         range: NULL #>         reset: function #>         train: function #>         super:  <gganimintproto object: Class RangeContinuous, Range> #>     range_is_zero: function #>     reset: function #>     scale_name: position_d #>     train: function #>     train_df: function #>     transform: function #>     transform_df: function #>     super:  <gganimintproto object: Class ScaleDiscretePosition, ScaleDiscrete, Scale> animint2:::limits(c(\"A\", \"b\", \"c\"), \"fill\") #> <gganimintproto object: Class ScaleDiscrete, Scale> #>     aesthetics: fill #>     break_info: function #>     break_positions: function #>     breaks: waiver #>     call: call #>     clone: function #>     dimension: function #>     drop: TRUE #>     expand: waiver #>     get_breaks: function #>     get_breaks_minor: function #>     get_labels: function #>     get_limits: function #>     guide: legend #>     is_discrete: function #>     is_empty: function #>     labels: waiver #>     limits: A b c #>     map: function #>     map_df: function #>     na.value: grey50 #>     name: waiver #>     palette: function #>     range: <gganimintproto object: Class RangeDiscrete, Range> #>         range: NULL #>         reset: function #>         train: function #>         super:  <gganimintproto object: Class RangeDiscrete, Range> #>     range_is_zero: function #>     reset: function #>     scale_name: hue #>     train: function #>     train_df: function #>     transform: function #>     transform_df: function #>     super:  <gganimintproto object: Class ScaleDiscrete, Scale> animint2:::limits(as.Date(c(\"2008-01-01\", \"2009-01-01\")), \"x\") #> <ScaleContinuousDate> #>  Range:   #>  Limits: 1.39e+04 -- 1.42e+04"},{"path":"https://animint.github.io/animint2/reference/lims.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience functions to set the axis limits. — lims","title":"Convenience functions to set the axis limits. — lims","text":"Observations range dropped completely passed layers.  NA value substituted one limits limit automatically calculated.","code":""},{"path":"https://animint.github.io/animint2/reference/lims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience functions to set the axis limits. — lims","text":"","code":"lims(...)  xlim(...)  ylim(...)"},{"path":"https://animint.github.io/animint2/reference/lims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience functions to set the axis limits. — lims","text":"... numeric, create continuous scale, factor character, create discrete scale.  lims, every argument must named.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/lims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience functions to set the axis limits. — lims","text":"","code":"# xlim xlim(15, 20) #> <ScaleContinuousPosition> #>  Range:   #>  Limits:   15 --   20 xlim(20, 15) #> <ScaleContinuousPosition> #>  Range:   #>  Limits:  -20 --  -15 xlim(c(10, 20)) #> <ScaleContinuousPosition> #>  Range:   #>  Limits:   10 --   20 xlim(\"a\", \"b\", \"c\") #> <gganimintproto object: Class ScaleDiscretePosition, ScaleDiscrete, Scale> #>     aesthetics: x xmin xmax xend #>     break_info: function #>     break_positions: function #>     breaks: waiver #>     call: call #>     clone: function #>     dimension: function #>     drop: TRUE #>     expand: waiver #>     get_breaks: function #>     get_breaks_minor: function #>     get_labels: function #>     get_limits: function #>     guide: none #>     is_discrete: function #>     is_empty: function #>     labels: waiver #>     limits: a b c #>     map: function #>     map_df: function #>     na.value: NA #>     name: waiver #>     palette: function #>     range: <gganimintproto object: Class RangeDiscrete, Range> #>         range: NULL #>         reset: function #>         train: function #>         super:  <gganimintproto object: Class RangeDiscrete, Range> #>     range_c: <gganimintproto object: Class RangeContinuous, Range> #>         range: NULL #>         reset: function #>         train: function #>         super:  <gganimintproto object: Class RangeContinuous, Range> #>     range_is_zero: function #>     reset: function #>     scale_name: position_d #>     train: function #>     train_df: function #>     transform: function #>     transform_df: function #>     super:  <gganimintproto object: Class ScaleDiscretePosition, ScaleDiscrete, Scale>  ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   xlim(15, 20) #> Warning: Removed 19 rows containing missing values (geom_point).  # with automatic lower limit ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   xlim(NA, 20) #> Warning: Removed 14 rows containing missing values (geom_point).   # Change both xlim and ylim ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   lims(x = c(10, 20), y = c(3, 5)) #> Warning: Removed 18 rows containing missing values (geom_point)."},{"path":"https://animint.github.io/animint2/reference/luv_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"colors() in Luv space. — luv_colours","title":"colors() in Luv space. — luv_colours","text":"built-colors() translated Luv colour space.","code":""},{"path":"https://animint.github.io/animint2/reference/luv_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colors() in Luv space. — luv_colours","text":"","code":"luv_colours"},{"path":"https://animint.github.io/animint2/reference/luv_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"colors() in Luv space. — luv_colours","text":"data frame 657 observations 4 variables: L,u,v Position Luv colour space col Colour name","code":""},{"path":"https://animint.github.io/animint2/reference/make_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function for an interactive bar that might otherwise be created using stat_summary(geom=","title":"Convenience function for an interactive bar that might otherwise be created using stat_summary(geom=","text":"Convenience function interactive bar might otherwise created using stat_summary(geom=\"bar\").","code":""},{"path":"https://animint.github.io/animint2/reference/make_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function for an interactive bar that might otherwise be created using stat_summary(geom=","text":"","code":"make_bar(data, x.name, alpha = 1)"},{"path":"https://animint.github.io/animint2/reference/make_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function for an interactive bar that might otherwise be created using stat_summary(geom=","text":"data data.frame analyze unique x.name values. x.name variable used x, clickSelects. alpha transparency selected bar, default 1.","code":""},{"path":"https://animint.github.io/animint2/reference/make_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function for an interactive bar that might otherwise be created using stat_summary(geom=","text":"geom_bar layer.","code":""},{"path":"https://animint.github.io/animint2/reference/make_bar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convenience function for an interactive bar that might otherwise be created using stat_summary(geom=","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a clickSelects geom_tallrect that completely tiles the x range. This makes it easy to construct tallrects for the common case of selecting a particular x value. — make_tallrect","title":"Make a clickSelects geom_tallrect that completely tiles the x range. This makes it easy to construct tallrects for the common case of selecting a particular x value. — make_tallrect","text":"Make clickSelects geom_tallrect completely tiles x range. makes easy construct tallrects common case selecting particular x value.","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a clickSelects geom_tallrect that completely tiles the x range. This makes it easy to construct tallrects for the common case of selecting a particular x value. — make_tallrect","text":"","code":"make_tallrect(data, x.name, even = FALSE, alpha = 1/2, ...)"},{"path":"https://animint.github.io/animint2/reference/make_tallrect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a clickSelects geom_tallrect that completely tiles the x range. This makes it easy to construct tallrects for the common case of selecting a particular x value. — make_tallrect","text":"data data.frame analyze unique x.name values. x.name variable used x, clickSelects. even Logical parameter, tallrects even width? alpha transparency selected tallrect, default 1/2. ... passed geom_tallrect.","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a clickSelects geom_tallrect that completely tiles the x range. This makes it easy to construct tallrects for the common case of selecting a particular x value. — make_tallrect","text":"geom_tallrect layer.","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a clickSelects geom_tallrect that completely tiles the x range. This makes it easy to construct tallrects for the common case of selecting a particular x value. — make_tallrect","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect_or_widerect.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a clickSelects geom_widerect or geom_tallrect that completely tiles the x or y range. This function is used internally by make_tallrect or make_widerect, which are more user-friendly. — make_tallrect_or_widerect","title":"Make a clickSelects geom_widerect or geom_tallrect that completely tiles the x or y range. This function is used internally by make_tallrect or make_widerect, which are more user-friendly. — make_tallrect_or_widerect","text":"Make clickSelects geom_widerect geom_tallrect completely tiles x y range. function used internally make_tallrect make_widerect, user-friendly.","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect_or_widerect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a clickSelects geom_widerect or geom_tallrect that completely tiles the x or y range. This function is used internally by make_tallrect or make_widerect, which are more user-friendly. — make_tallrect_or_widerect","text":"","code":"make_tallrect_or_widerect(   aes.prefix,   geom_xrect,   data,   var.name,   even = FALSE,   alpha = 0.5,   ...,   data.fun = identity )"},{"path":"https://animint.github.io/animint2/reference/make_tallrect_or_widerect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a clickSelects geom_widerect or geom_tallrect that completely tiles the x or y range. This function is used internally by make_tallrect or make_widerect, which are more user-friendly. — make_tallrect_or_widerect","text":"aes.prefix \"x\" \"y\" geom_xrect geom_tallrect geom_widerect data data.frame analyze unique var.name values. var.name variable used clickSelects even Logical parameter, xrects even width? alpha transparency selected xrect, default 1/2. ... passed geom_xrect data.fun called data passed geom_xrect(aes(..), data.fun(df)) useful facetted plots, adding columns data.frame, want geom one panel.","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect_or_widerect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a clickSelects geom_widerect or geom_tallrect that completely tiles the x or y range. This function is used internally by make_tallrect or make_widerect, which are more user-friendly. — make_tallrect_or_widerect","text":"geom_xrect layer","code":""},{"path":"https://animint.github.io/animint2/reference/make_tallrect_or_widerect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a clickSelects geom_widerect or geom_tallrect that completely tiles the x or y range. This function is used internally by make_tallrect or make_widerect, which are more user-friendly. — make_tallrect_or_widerect","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/make_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenvience function for a showSelected plot label. — make_text","title":"Convenvience function for a showSelected plot label. — make_text","text":"Convenvience function showSelected plot label.","code":""},{"path":"https://animint.github.io/animint2/reference/make_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenvience function for a showSelected plot label. — make_text","text":"","code":"make_text(data, x, y, label.var, format = NULL)"},{"path":"https://animint.github.io/animint2/reference/make_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenvience function for a showSelected plot label. — make_text","text":"data data.frame relevant data x x coordinate label position y y coordinate label position label.var variable matching showSelected, used obtain label value format String format label. Use %d, %f, etc. insert relevant label.var value.","code":""},{"path":"https://animint.github.io/animint2/reference/make_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenvience function for a showSelected plot label. — make_text","text":"geom_text layer.","code":""},{"path":"https://animint.github.io/animint2/reference/make_text.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convenvience function for a showSelected plot label. — make_text","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/make_widerect.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a clickSelects geom_widerect that completely tiles the y range. This makes it easy to construct widerects for the common case of selecting a particular y value. — make_widerect","title":"Make a clickSelects geom_widerect that completely tiles the y range. This makes it easy to construct widerects for the common case of selecting a particular y value. — make_widerect","text":"Make clickSelects geom_widerect completely tiles y range. makes easy construct widerects common case selecting particular y value.","code":""},{"path":"https://animint.github.io/animint2/reference/make_widerect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a clickSelects geom_widerect that completely tiles the y range. This makes it easy to construct widerects for the common case of selecting a particular y value. — make_widerect","text":"","code":"make_widerect(data, y.name, even = FALSE, alpha = 0.5, ...)"},{"path":"https://animint.github.io/animint2/reference/make_widerect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a clickSelects geom_widerect that completely tiles the y range. This makes it easy to construct widerects for the common case of selecting a particular y value. — make_widerect","text":"data data.frame analyze unique y.name values. y.name variable used y, clickSelects. even Logical parameter, widerects even width? alpha transparency selected widerect, default 1/2. ... passed geom_widerect.","code":""},{"path":"https://animint.github.io/animint2/reference/make_widerect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a clickSelects geom_widerect that completely tiles the y range. This makes it easy to construct widerects for the common case of selecting a particular y value. — make_widerect","text":"geom_widerect layer.","code":""},{"path":"https://animint.github.io/animint2/reference/make_widerect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make a clickSelects geom_widerect that completely tiles the y range. This makes it easy to construct widerects for the common case of selecting a particular y value. — make_widerect","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/malaria.html","id":null,"dir":"Reference","previous_headings":"","what":"Malaria parasite genome variants — malaria","title":"Malaria parasite genome variants — malaria","text":"Two sequencing methods used measure genetic variants   malaria parasite yoelii yoelii, strain N67. High quality gold standard   Sanger sequences obtained 45 amplicons, small subset   14-chromosome genome. Next generation sequencing (NGS) used   find genome-wide variants, lot noise   false positive variants need filtered via thresholding MQ score.","code":""},{"path":"https://animint.github.io/animint2/reference/malaria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Malaria parasite genome variants — malaria","text":"","code":"data(\"malaria\")"},{"path":"https://animint.github.io/animint2/reference/malaria.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Malaria parasite genome variants — malaria","text":"List 8 data.frames:  $ error.variants  :'data.frame':\t18800 obs.  19 variables:  $ regions         :'data.frame':\t14 obs.  6 variables:  $ amplicons       :'data.frame':\t45 obs.  8 variables:  $ chroms          :'data.frame':\t14 obs.  2 variables:  $ error.amplicons :'data.frame':\t1800 obs.  11 variables:  $ filterVar.labels:'data.frame':\t40 obs.  3 variables:  $ error.curves    :'data.frame':\t120 obs.  4 variables:  $ filterVar       :'data.frame':\t1 obs.  2 variables:","code":""},{"path":"https://animint.github.io/animint2/reference/malaria.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Malaria parasite genome variants — malaria","text":"https://github.com/tdhock/malaria-evolution-viz","code":""},{"path":"https://animint.github.io/animint2/reference/map_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame of map data. — map_data","title":"Create a data frame of map data. — map_data","text":"Create data frame map data.","code":""},{"path":"https://animint.github.io/animint2/reference/map_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame of map data. — map_data","text":"","code":"map_data(map, region = \".\", exact = FALSE, ...)"},{"path":"https://animint.github.io/animint2/reference/map_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame of map data. — map_data","text":"map name map provided maps package.  include county, france, italy, nz, state, usa, world, world2. region name subregions include.  Defaults . includes subregion.  See documentation map details. exact region treated regular expression (FALSE) fixed string (TRUE). ... arguments passed map","code":""},{"path":"https://animint.github.io/animint2/reference/map_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data frame of map data. — map_data","text":"","code":"if (require(\"maps\")) { states <- map_data(\"state\") arrests <- USArrests names(arrests) <- tolower(names(arrests)) arrests$region <- tolower(rownames(USArrests))  choro <- merge(states, arrests, sort = FALSE, by = \"region\") choro <- choro[order(choro$order), ] ggplot(choro, aes(long, lat)) +   geom_polygon(aes(group = group, fill = assault)) +   coord_map(\"albers\",  at0 = 45.5, lat1 = 29.5)  ggplot(choro, aes(long, lat)) +   geom_polygon(aes(group = group, fill = assault / murder)) +   coord_map(\"albers\",  at0 = 45.5, lat1 = 29.5) } #> Loading required package: maps #> Warning: there is no package called ‘maps’"},{"path":"https://animint.github.io/animint2/reference/margin.html","id":null,"dir":"Reference","previous_headings":"","what":"Define margins. — margin","title":"Define margins. — margin","text":"convenient function creates grid unit object correct length use setting margins.","code":""},{"path":"https://animint.github.io/animint2/reference/margin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define margins. — margin","text":"","code":"margin(t = 0, r = 0, b = 0, l = 0, unit = \"pt\")"},{"path":"https://animint.github.io/animint2/reference/margin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define margins. — margin","text":"t, r, b, l Dimensions margin. (remember order, think trouble). unit Default units dimensions. Defaults \"pt\" can easily scaled text.","code":""},{"path":"https://animint.github.io/animint2/reference/margin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define margins. — margin","text":"","code":"margin(4) #> [1] 4points 0points 0points 0points margin(4, 2) #> [1] 4points 2points 0points 0points margin(4, 3, 2, 1) #> [1] 4points 3points 2points 1points"},{"path":"https://animint.github.io/animint2/reference/mean_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mean and standard errors on either side. — mean_se","title":"Calculate mean and standard errors on either side. — mean_se","text":"Calculate mean standard errors either side.","code":""},{"path":"https://animint.github.io/animint2/reference/mean_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mean and standard errors on either side. — mean_se","text":"","code":"mean_se(x, mult = 1)"},{"path":"https://animint.github.io/animint2/reference/mean_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mean and standard errors on either side. — mean_se","text":"x numeric vector mult number multiples standard error","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/merge_recurse.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a list of data frames. — merge_recurse","title":"Merge a list of data frames. — merge_recurse","text":"Merge list data frames.","code":""},{"path":"https://animint.github.io/animint2/reference/merge_recurse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a list of data frames. — merge_recurse","text":"","code":"merge_recurse(dfs)"},{"path":"https://animint.github.io/animint2/reference/merge_recurse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a list of data frames. — merge_recurse","text":"dfs list data frames","code":""},{"path":"https://animint.github.io/animint2/reference/merge_recurse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a list of data frames. — merge_recurse","text":"data frame","code":""},{"path":"https://animint.github.io/animint2/reference/midwest.html","id":null,"dir":"Reference","previous_headings":"","what":"Midwest demographics. — midwest","title":"Midwest demographics. — midwest","text":"Demographic information midwest counties","code":""},{"path":"https://animint.github.io/animint2/reference/midwest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Midwest demographics. — midwest","text":"","code":"midwest"},{"path":"https://animint.github.io/animint2/reference/midwest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Midwest demographics. — midwest","text":"data frame 437 rows 28 variables PID county state area poptotal.  Total population popdensity. Population density popwhite.  Number whites. popblack.  Number blacks. popamerindian.  Number American Indians. popasian.  Number Asians. popother.  Number races. percwhite.  Percent white. percblack.  Percent black. percamerindan.  Percent American Indian. percasian. Percent Asian. percother. Percent races. popadults.  Number adults. perchsd. percollege.  Percent college educated. percprof.  Percent profession. poppovertyknown. percpovertyknown percbelowpoverty percchildbelowpovert percadultpoverty percelderlypoverty inmetro.  metro area. category'","code":""},{"path":"https://animint.github.io/animint2/reference/mixtureKNN.html","id":null,"dir":"Reference","previous_headings":"","what":"K-Nearest-Neighbors model of the mixture example data — mixtureKNN","title":"K-Nearest-Neighbors model of the mixture example data — mixtureKNN","text":"Several KNN models fit mixture example data set.","code":""},{"path":"https://animint.github.io/animint2/reference/mixtureKNN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"K-Nearest-Neighbors model of the mixture example data — mixtureKNN","text":"","code":"data(\"mixtureKNN\")"},{"path":"https://animint.github.io/animint2/reference/mixtureKNN.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"K-Nearest-Neighbors model of the mixture example data — mixtureKNN","text":"Named list 9 data.frames.","code":""},{"path":"https://animint.github.io/animint2/reference/mixtureKNN.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"K-Nearest-Neighbors model of the mixture example data — mixtureKNN","text":"animint/inst/examples/knn.R","code":""},{"path":"https://animint.github.io/animint2/reference/mixtureKNN.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"K-Nearest-Neighbors model of the mixture example data — mixtureKNN","text":"help(mixture.example, package=\"ElemStatLearn\")","code":""},{"path":"https://animint.github.io/animint2/reference/montreal.bikes.html","id":null,"dir":"Reference","previous_headings":"","what":"Montreal bikes — montreal.bikes","title":"Montreal bikes — montreal.bikes","text":"Data montreal bike usage, paths, accidents, 2009-2014.","code":""},{"path":"https://animint.github.io/animint2/reference/montreal.bikes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Montreal bikes — montreal.bikes","text":"","code":"data(\"montreal.bikes\")"},{"path":"https://animint.github.io/animint2/reference/montreal.bikes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Montreal bikes — montreal.bikes","text":"named list four data.frames. counter.counts contains dates   counts bikes several locations   Montreal. counter.locations geographical coordinates   counter locations. path.locations geographical coordinates   several Montreal bike paths. accidents   dates/times/locations/severity accidents involving bikes.","code":""},{"path":"https://animint.github.io/animint2/reference/montreal.bikes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Montreal bikes — montreal.bikes","text":"github.com/tdhock/montreal-velos","code":""},{"path":"https://animint.github.io/animint2/reference/mpg.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuel economy data from 1999 and 2008 for 38 popular models of car — mpg","title":"Fuel economy data from 1999 and 2008 for 38 popular models of car — mpg","text":"dataset contains subset fuel economy data EPA makes available https://fueleconomy.gov. contains models new release every year 1999 2008 - used proxy popularity car.","code":""},{"path":"https://animint.github.io/animint2/reference/mpg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuel economy data from 1999 and 2008 for 38 popular models of car — mpg","text":"","code":"mpg"},{"path":"https://animint.github.io/animint2/reference/mpg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fuel economy data from 1999 and 2008 for 38 popular models of car — mpg","text":"data frame 234 rows 11 variables manufacturer. model. displ. engine displacement, litres year. cyl. number cylinders trans. type transmission drv. f = front-wheel drive, r = rear wheel drive, 4 = 4wd cty. city miles per gallon hwy. highway miles per gallon fl. class.","code":""},{"path":"https://animint.github.io/animint2/reference/msleep.html","id":null,"dir":"Reference","previous_headings":"","what":"An updated and expanded version of the mammals sleep dataset. — msleep","title":"An updated and expanded version of the mammals sleep dataset. — msleep","text":"updated expanded version mammals sleep dataset. Updated sleep times weights taken V. M. Savage G. B. West. quantitative, theoretical framework understanding mammalian sleep. Proceedings National Academy Sciences, 104 (3):1051-1056, 2007.","code":""},{"path":"https://animint.github.io/animint2/reference/msleep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An updated and expanded version of the mammals sleep dataset. — msleep","text":"","code":"msleep"},{"path":"https://animint.github.io/animint2/reference/msleep.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An updated and expanded version of the mammals sleep dataset. — msleep","text":"data frame 83 rows 11 variables name. common name genus. vore. carnivore, omnivore herbivore? order. conservation. conservation status animal sleep_total. total amount sleep, hours sleep_rem. rem sleep, hours sleep_cycle. length sleep cycle, hours awake. amount time spent awake, hours brainwt. brain weight kilograms bodywt. body weight kilograms","code":""},{"path":"https://animint.github.io/animint2/reference/msleep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An updated and expanded version of the mammals sleep dataset. — msleep","text":"Additional variables order, conservation status vore added wikipedia.","code":""},{"path":"https://animint.github.io/animint2/reference/newEnvironment.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment to store meta data — newEnvironment","title":"Environment to store meta data — newEnvironment","text":"Get new environment store meta-data. Used alter state lower-level functions","code":""},{"path":"https://animint.github.io/animint2/reference/newEnvironment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment to store meta data — newEnvironment","text":"","code":"newEnvironment()"},{"path":"https://animint.github.io/animint2/reference/newEnvironment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environment to store meta data — newEnvironment","text":"new environment store meta data","code":""},{"path":"https://animint.github.io/animint2/reference/parsePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a ggplot to a list. — parsePlot","title":"Convert a ggplot to a list. — parsePlot","text":"Convert ggplot list.","code":""},{"path":"https://animint.github.io/animint2/reference/parsePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a ggplot to a list. — parsePlot","text":"","code":"parsePlot(meta, plot, plot.name)"},{"path":"https://animint.github.io/animint2/reference/parsePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a ggplot to a list. — parsePlot","text":"meta environment previously calculated plot data, new plot parse, already stored plot plot.name. plot ggplot list object plot.name name plot","code":""},{"path":"https://animint.github.io/animint2/reference/parsePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a ggplot to a list. — parsePlot","text":"nothing, info stored meta.","code":""},{"path":"https://animint.github.io/animint2/reference/pirates.html","id":null,"dir":"Reference","previous_headings":"","what":"Worldwide pirate attacks from 1978 to 2013 — pirates","title":"Worldwide pirate attacks from 1978 to 2013 — pirates","text":"row 1 pirate attack, geographic location   textual descriptions.","code":""},{"path":"https://animint.github.io/animint2/reference/pirates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Worldwide pirate attacks from 1978 to 2013 — pirates","text":"","code":"data(pirates)"},{"path":"https://animint.github.io/animint2/reference/pirates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Worldwide pirate attacks from 1978 to 2013 — pirates","text":"data frame 6636 observations following 14 variables. Reference factor DateOfOcc Date SubReg factor Aggressor factor Victim factor Descript factor Desc1 factor Desc2 factor Desc3 factor Desc4 factor Desc5 factor Desc6 factor coords.x1 numeric vector coords.x2 numeric vector","code":""},{"path":"https://animint.github.io/animint2/reference/pirates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Worldwide pirate attacks from 1978 to 2013 — pirates","text":"http://msi.nga.mil/MSISiteContent/StaticFiles/Files/ASAM_shp.zip","code":""},{"path":"https://animint.github.io/animint2/reference/position_dodge.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust position by dodging overlaps to the side. — position_dodge","title":"Adjust position by dodging overlaps to the side. — position_dodge","text":"Adjust position dodging overlaps side.","code":""},{"path":"https://animint.github.io/animint2/reference/position_dodge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust position by dodging overlaps to the side. — position_dodge","text":"","code":"position_dodge(width = NULL)"},{"path":"https://animint.github.io/animint2/reference/position_dodge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust position by dodging overlaps to the side. — position_dodge","text":"width Dodging width, different width individual elements. useful want align narrow geoms wider geoms. See examples use case.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/position_dodge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust position by dodging overlaps to the side. — position_dodge","text":"","code":"ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) +   geom_bar(position = \"dodge\")  # \\donttest{ ggplot(diamonds, aes(price, fill = cut)) +   geom_histogram(position=\"dodge\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   # To dodge items with different widths, you need to be explicit df <- data.frame(x = c(\"a\",\"a\",\"b\",\"b\"), y = 2:5, g = rep(1:2, 2)) p <- ggplot(df, aes(x, y, group = g)) +   geom_bar(     stat = \"identity\", position = \"dodge\",     fill = \"grey50\", colour = \"black\"   ) p   # A line range has no width: p + geom_linerange(aes(ymin = y-1, ymax = y+1), position = \"dodge\") #> Warning: Width not defined. Set with `position_dodge(width = ?)`  # You need to explicitly specify the width for dodging p + geom_linerange(aes(ymin = y-1, ymax = y+1),   position = position_dodge(width = 0.9))   # Similarly with error bars: p + geom_errorbar(aes(ymin = y-1, ymax = y+1), width = 0.2,   position = \"dodge\")  p + geom_errorbar(aes(ymin = y-1, ymax = y+1, width = 0.2),   position = position_dodge(width = 0.90))  # }"},{"path":"https://animint.github.io/animint2/reference/position_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Don't adjust position — position_identity","title":"Don't adjust position — position_identity","text":"adjust position","code":""},{"path":"https://animint.github.io/animint2/reference/position_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Don't adjust position — position_identity","text":"","code":"position_identity()"},{"path":[]},{"path":"https://animint.github.io/animint2/reference/position_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter points to avoid overplotting. — position_jitter","title":"Jitter points to avoid overplotting. — position_jitter","text":"Jitter points avoid overplotting.","code":""},{"path":"https://animint.github.io/animint2/reference/position_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter points to avoid overplotting. — position_jitter","text":"","code":"position_jitter(width = NULL, height = NULL)"},{"path":"https://animint.github.io/animint2/reference/position_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter points to avoid overplotting. — position_jitter","text":"width, height Amount vertical horizontal jitter. jitter   added positive negative directions, total spread   twice value specified . omitted, defaults 40% resolution data: means   jitter values occupy 80% implied bins. Categorical data   aligned integers, width height 0.5 spread   data possible see distinction categories.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/position_jitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jitter points to avoid overplotting. — position_jitter","text":"","code":"ggplot(mtcars, aes(am, vs)) + geom_point()   # Default amount of jittering will generally be too much for # small datasets: ggplot(mtcars, aes(am, vs)) + geom_jitter()   # Two ways to override ggplot(mtcars, aes(am, vs)) +   geom_jitter(width = 0.1, height = 0.1)  ggplot(mtcars, aes(am, vs)) +   geom_jitter(position = position_jitter(width = 0.1, height = 0.1))"},{"path":"https://animint.github.io/animint2/reference/position_jitterdodge.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust position by simultaneously dodging and jittering — position_jitterdodge","title":"Adjust position by simultaneously dodging and jittering — position_jitterdodge","text":"Adjust position simultaneously dodging jittering","code":""},{"path":"https://animint.github.io/animint2/reference/position_jitterdodge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust position by simultaneously dodging and jittering — position_jitterdodge","text":"","code":"position_jitterdodge(   jitter.width = NULL,   jitter.height = 0,   dodge.width = 0.75 )"},{"path":"https://animint.github.io/animint2/reference/position_jitterdodge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust position by simultaneously dodging and jittering — position_jitterdodge","text":"jitter.width degree jitter x direction. Defaults 40% resolution data. jitter.height degree jitter y direction. Defaults 0. dodge.width amount dodge x direction. Defaults 0.75, default position_dodge() width.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/position_nudge.html","id":null,"dir":"Reference","previous_headings":"","what":"Nudge points. — position_nudge","title":"Nudge points. — position_nudge","text":"useful want nudge labels little ways points.","code":""},{"path":"https://animint.github.io/animint2/reference/position_nudge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nudge points. — position_nudge","text":"","code":"position_nudge(x = 0, y = 0)"},{"path":"https://animint.github.io/animint2/reference/position_nudge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nudge points. — position_nudge","text":"x, y Amount vertical horizontal distance move.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/position_nudge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nudge points. — position_nudge","text":"","code":"df <- data.frame(   x = c(1,3,2,5),   y = c(\"a\",\"c\",\"d\",\"c\") )  ggplot(df, aes(x, y)) +   geom_point() +   geom_text(aes(label = y))   ggplot(df, aes(x, y)) +   geom_point() +   geom_text(aes(label = y), position = position_nudge(y = -0.1))"},{"path":"https://animint.github.io/animint2/reference/position_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Stack overlapping objects on top of one another. — position_fill","title":"Stack overlapping objects on top of one another. — position_fill","text":"position_fill additionally standardises stack unit height.","code":""},{"path":"https://animint.github.io/animint2/reference/position_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stack overlapping objects on top of one another. — position_fill","text":"","code":"position_fill()  position_stack()"},{"path":[]},{"path":"https://animint.github.io/animint2/reference/position_stack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stack overlapping objects on top of one another. — position_fill","text":"","code":"# Stacking is the default behaviour for most area plots: ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) + geom_bar()  # Fill makes it easier to compare proportions ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) +   geom_bar(position = \"fill\")   # To change stacking order, use factor() to change order of levels mtcars$vs <- factor(mtcars$vs, levels = c(1,0)) ggplot(mtcars, aes(factor(cyl), fill = factor(vs))) + geom_bar()   ggplot(diamonds, aes(price, fill = cut)) +   geom_histogram(binwidth = 500)  # When used with a histogram, position_fill creates a conditional density # estimate ggplot(diamonds, aes(price, fill = cut)) +   geom_histogram(binwidth = 500, position = \"fill\")   # Stacking is also useful for time series data.set <- data.frame(   Time = c(rep(1, 4),rep(2, 4), rep(3, 4), rep(4, 4)),   Type = rep(c('a', 'b', 'c', 'd'), 4),   Value = rpois(16, 10) )  ggplot(data.set, aes(Time, Value)) + geom_area(aes(fill = Type))   # If you want to stack lines, you need to say so: ggplot(data.set, aes(Time, Value)) + geom_line(aes(colour = Type))  ggplot(data.set, aes(Time, Value)) +   geom_line(position = \"stack\", aes(colour = Type))   # But realise that this makes it *much* harder to compare individual # trends"},{"path":"https://animint.github.io/animint2/reference/presidential.html","id":null,"dir":"Reference","previous_headings":"","what":"Terms of 11 presidents from Eisenhower to Obama. — presidential","title":"Terms of 11 presidents from Eisenhower to Obama. — presidential","text":"names president, start end date term, party 11 US presidents Eisenhower Obama.","code":""},{"path":"https://animint.github.io/animint2/reference/presidential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terms of 11 presidents from Eisenhower to Obama. — presidential","text":"","code":"presidential"},{"path":"https://animint.github.io/animint2/reference/presidential.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Terms of 11 presidents from Eisenhower to Obama. — presidential","text":"data frame 11 rows 4 variables","code":""},{"path":"https://animint.github.io/animint2/reference/print.animint.html","id":null,"dir":"Reference","previous_headings":"","what":"print animint — print.animint","title":"print animint — print.animint","text":"Print animint rendering local directory.","code":""},{"path":"https://animint.github.io/animint2/reference/print.animint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print animint — print.animint","text":"","code":"# S3 method for class 'animint' print(x, ...)"},{"path":"https://animint.github.io/animint2/reference/print.animint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print animint — print.animint","text":"x List ggplots options. particular .dir option passed along animint2dir. ... passed animint2dir","code":""},{"path":"https://animint.github.io/animint2/reference/print.animint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print animint — print.animint","text":"animint2dir","code":""},{"path":"https://animint.github.io/animint2/reference/print.animint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"print animint — print.animint","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/print.gganimintplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw plot on current graphics device. — print.gganimintplot","title":"Draw plot on current graphics device. — print.gganimintplot","text":"Draw plot current graphics device.","code":""},{"path":"https://animint.github.io/animint2/reference/print.gganimintplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw plot on current graphics device. — print.gganimintplot","text":"","code":"# S3 method for class 'gganimintplot' print(x, newpage = is.null(vp), vp = NULL, ...)  # S3 method for class 'gganimintplot' plot(x, newpage = is.null(vp), vp = NULL, ...)"},{"path":"https://animint.github.io/animint2/reference/print.gganimintplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw plot on current graphics device. — print.gganimintplot","text":"x plot display newpage draw new (empty) page first? vp viewport draw plot ... arguments used method","code":""},{"path":"https://animint.github.io/animint2/reference/print.gganimintplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw plot on current graphics device. — print.gganimintplot","text":"Invisibly returns result ggplot_build,   list components contain plot , data,   information scales, panels etc.","code":""},{"path":"https://animint.github.io/animint2/reference/print.gganimintproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a gganimintproto object — print.gganimintproto","title":"Print a gganimintproto object — print.gganimintproto","text":"gganimintproto object $print method, call method. Otherwise, print members object, optionally, members inherited objects.","code":""},{"path":"https://animint.github.io/animint2/reference/print.gganimintproto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a gganimintproto object — print.gganimintproto","text":"","code":"# S3 method for class 'gganimintproto' print(x, ..., flat = TRUE)"},{"path":"https://animint.github.io/animint2/reference/print.gganimintproto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a gganimintproto object — print.gganimintproto","text":"x gganimintproto object print. ... gganimintproto object print method, arguments passed . Otherwise, arguments unused. flat TRUE (default), show flattened list local inherited members. FALSE, show inheritance hierarchy.","code":""},{"path":"https://animint.github.io/animint2/reference/prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Class prior change — prior","title":"Class prior change — prior","text":"Performance several class prior change models studied across 4 data sets.","code":""},{"path":"https://animint.github.io/animint2/reference/prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class prior change — prior","text":"","code":"data(prior)"},{"path":"https://animint.github.io/animint2/reference/prior.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Class prior change — prior","text":"List 2 data.frames: accuracy contains mean standard error performance measures (sqErr accuracy), data.set.info contains meta-data dimension number positive negative examples data set.","code":""},{"path":"https://animint.github.io/animint2/reference/prior.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Class prior change — prior","text":"MC du Plessis, personal communication.","code":""},{"path":"https://animint.github.io/animint2/reference/prior.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class prior change — prior","text":"du Plessis MC, Sugiyama M.   Semi-Supervised Learning Class Balance Class-Prior Change   Distribution Matching. ICML 2012.","code":""},{"path":"https://animint.github.io/animint2/reference/prostateLasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Lasso model of the prostate cancer data set — prostateLasso","title":"Lasso model of the prostate cancer data set — prostateLasso","text":"lars package used obtain full path lasso solutions.","code":""},{"path":"https://animint.github.io/animint2/reference/prostateLasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lasso model of the prostate cancer data set — prostateLasso","text":"","code":"data(\"prostateLasso\")"},{"path":"https://animint.github.io/animint2/reference/prostateLasso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lasso model of the prostate cancer data set — prostateLasso","text":"list 4 data.frames: path piecewise linear coefficient   path, residuals prediction error every model every data   point, models one row per regularization parameter, error   total train/validation prediction error regularization parameter.","code":""},{"path":"https://animint.github.io/animint2/reference/prostateLasso.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lasso model of the prostate cancer data set — prostateLasso","text":"https://github.com/tdhock/animint-book/blob/master/Ch11-lasso.Rmd","code":""},{"path":"https://animint.github.io/animint2/reference/pt.to.lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert pt value to lines — pt.to.lines","title":"Convert pt value to lines — pt.to.lines","text":"Convert pt value lines","code":""},{"path":"https://animint.github.io/animint2/reference/pt.to.lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert pt value to lines — pt.to.lines","text":"","code":"pt.to.lines(pt_value)"},{"path":"https://animint.github.io/animint2/reference/pt.to.lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert pt value to lines — pt.to.lines","text":"pt_value Value pt converted lines","code":""},{"path":"https://animint.github.io/animint2/reference/pt.to.lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert pt value to lines — pt.to.lines","text":"Value lines","code":""},{"path":"https://animint.github.io/animint2/reference/pt.to.lines.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert pt value to lines — pt.to.lines","text":"work input pt. Input returned .","code":""},{"path":"https://animint.github.io/animint2/reference/qplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick plot — qplot","title":"Quick plot — qplot","text":"qplot basic plotting function ggplot2 package, designed familiar used base plot(). convenient wrapper creating number different types plots using consistent calling scheme.","code":""},{"path":"https://animint.github.io/animint2/reference/qplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick plot — qplot","text":"","code":"qplot(   x,   y = NULL,   ...,   data,   facets = NULL,   margins = FALSE,   geom = \"auto\",   xlim = c(NA, NA),   ylim = c(NA, NA),   log = \"\",   main = NULL,   xlab = deparse(substitute(x)),   ylab = deparse(substitute(y)),   asp = NA,   stat = NULL,   position = NULL )  quickplot(   x,   y = NULL,   ...,   data,   facets = NULL,   margins = FALSE,   geom = \"auto\",   xlim = c(NA, NA),   ylim = c(NA, NA),   log = \"\",   main = NULL,   xlab = deparse(substitute(x)),   ylab = deparse(substitute(y)),   asp = NA,   stat = NULL,   position = NULL )"},{"path":"https://animint.github.io/animint2/reference/qplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick plot — qplot","text":"x, y, ... Aesthetics passed layer data Data frame use (optional).  specified, create one, extracting vectors current environment. facets faceting formula use. Picks facet_wrap facet_grid depending whether formula one- two-sided margins See facet_grid: display marginal facets? geom Character vector specifying geom(s) draw. Defaults \"point\" x y specified, \"histogram\" x specified. xlim, ylim X y axis limits log variables log transform (\"x\", \"y\", \"xy\") main, xlab, ylab Character vector (expression) giving plot title, x axis label, y axis label respectively. asp y/x aspect ratio stat, position DEPRECATED.","code":""},{"path":"https://animint.github.io/animint2/reference/qplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick plot — qplot","text":"","code":"# Use data from data.frame qplot(mpg, wt, data = mtcars)  qplot(mpg, wt, data = mtcars, colour = cyl)  qplot(mpg, wt, data = mtcars, size = cyl)  qplot(mpg, wt, data = mtcars, facets = vs ~ am)   # \\donttest{ qplot(1:10, rnorm(10), colour = runif(10))  qplot(1:10, letters[1:10])  mod <- lm(mpg ~ wt, data = mtcars) qplot(resid(mod), fitted(mod))   f <- function() {    a <- 1:10    b <- a ^ 2    qplot(a, b) } f()   # To set aesthetics, wrap in I() qplot(mpg, wt, data = mtcars, colour = I(\"red\"))   # qplot will attempt to guess what geom you want depending on the input # both x and y supplied = scatterplot qplot(mpg, wt, data = mtcars)  # just x supplied = histogram qplot(mpg, data = mtcars) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  # just y supplied = scatterplot, with x = seq_along(y) qplot(y = mpg, data = mtcars)   # Use different geoms qplot(mpg, wt, data = mtcars, geom = \"path\")  qplot(mpg, data = mtcars, geom = \"dotplot\") #> `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. #> Warning: Unit type of dotdia should be 'npc'  # }"},{"path":"https://animint.github.io/animint2/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. grid arrow, unit scales alpha","code":""},{"path":"https://animint.github.io/animint2/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"ggplot(mpg, aes(displ, hwy)) +   geom_point(alpha = 0.5, colour = \"blue\")   ggplot(mpg, aes(displ, hwy)) +   geom_point(colour = alpha(\"blue\", 0.5))"},{"path":"https://animint.github.io/animint2/reference/rel.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative sizing for theme elements — rel","title":"Relative sizing for theme elements — rel","text":"Relative sizing theme elements","code":""},{"path":"https://animint.github.io/animint2/reference/rel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative sizing for theme elements — rel","text":"","code":"rel(x)"},{"path":"https://animint.github.io/animint2/reference/rel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative sizing for theme elements — rel","text":"x number representing relative size","code":""},{"path":"https://animint.github.io/animint2/reference/rel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative sizing for theme elements — rel","text":"","code":"df <- data.frame(x = 1:3, y = 1:3) ggplot(df, aes(x, y)) +   geom_point() +   theme(axis.title.x = element_text(size = rel(2.5)))"},{"path":"https://animint.github.io/animint2/reference/remove_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to remove missing values from a data.frame — remove_missing","title":"Convenience function to remove missing values from a data.frame — remove_missing","text":"Remove non-complete rows, warning na.rm = FALSE. ggplot somewhat accommodating missing values R generally. stats require complete data, missing values automatically removed warning. na.rm = TRUE supplied statistic, warning suppressed.","code":""},{"path":"https://animint.github.io/animint2/reference/remove_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to remove missing values from a data.frame — remove_missing","text":"","code":"remove_missing(df, na.rm = FALSE, vars = names(df), name = \"\", finite = FALSE)"},{"path":"https://animint.github.io/animint2/reference/remove_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to remove missing values from a data.frame — remove_missing","text":"df data.frame na.rm true, suppress warning message. vars Character vector variables check missings name Optional function name improve error message. finite TRUE, also remove non-finite values.","code":""},{"path":"https://animint.github.io/animint2/reference/renderAnimint.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an animint output element — renderAnimint","title":"Create an animint output element — renderAnimint","text":"Shiny server output function customized animint plots (similar shiny::plotOutput friends).","code":""},{"path":"https://animint.github.io/animint2/reference/renderAnimint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an animint output element — renderAnimint","text":"","code":"renderAnimint(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://animint.github.io/animint2/reference/renderAnimint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an animint output element — renderAnimint","text":"expr expression creates list ggplot objects. env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the ","title":"Compute the ","text":"resolution smallest non-zero distance adjacent values.  one unique value, resolution defined one.","code":""},{"path":"https://animint.github.io/animint2/reference/resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the ","text":"","code":"resolution(x, zero = TRUE)"},{"path":"https://animint.github.io/animint2/reference/resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the ","text":"x numeric vector zero zero value automatically included computation resolution","code":""},{"path":"https://animint.github.io/animint2/reference/resolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the ","text":"x integer vector, assumed represent discrete variable, resolution 1.","code":""},{"path":"https://animint.github.io/animint2/reference/resolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the ","text":"","code":"resolution(1:10) #> [1] 1 resolution((1:10) - 0.5) #> [1] 0.5 resolution((1:10) - 0.5, FALSE) #> [1] 1 resolution(c(1,2, 10, 20, 50)) #> [1] 1 resolution(as.integer(c(1, 10, 20, 50)))  # Returns 1 #> [1] 1"},{"path":"https://animint.github.io/animint2/reference/saveChunks.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data set into chunks and save them to separate files. — saveChunks","title":"Split data set into chunks and save them to separate files. — saveChunks","text":"Split data set chunks save separate files.","code":""},{"path":"https://animint.github.io/animint2/reference/saveChunks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data set into chunks and save them to separate files. — saveChunks","text":"","code":"saveChunks(x, meta)"},{"path":"https://animint.github.io/animint2/reference/saveChunks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data set into chunks and save them to separate files. — saveChunks","text":"x data.frame. meta environment.","code":""},{"path":"https://animint.github.io/animint2/reference/saveChunks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data set into chunks and save them to separate files. — saveChunks","text":"recursive list chunk file names.","code":""},{"path":"https://animint.github.io/animint2/reference/saveChunks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split data set into chunks and save them to separate files. — saveChunks","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/scale_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha scales. — scale_alpha","title":"Alpha scales. — scale_alpha","text":"scale_alpha alias scale_alpha_continuous since common use alpha, saves bit typing.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha scales. — scale_alpha","text":"","code":"scale_alpha(..., range = c(0.1, 1))  scale_alpha_continuous(..., range = c(0.1, 1))  scale_alpha_discrete(..., range = c(0.1, 1))"},{"path":"https://animint.github.io/animint2/reference/scale_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha scales. — scale_alpha","text":"... arguments passed continuous_scale discrete_scale appropriate, control name, limits, breaks, labels forth. range range output alpha values.  lie 0 1.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha scales. — scale_alpha","text":"","code":"(p <- ggplot(mtcars, aes(mpg, cyl)) +   geom_point(aes(alpha = cyl)))  p + scale_alpha(\"cylinders\")  p + scale_alpha(\"number\\nof\\ncylinders\")   p + scale_alpha(range = c(0.4, 0.8))   (p <- ggplot(mtcars, aes(mpg, cyl)) +   geom_point(aes(alpha = factor(cyl))))  p + scale_alpha_discrete(range = c(0.4, 0.8))"},{"path":"https://animint.github.io/animint2/reference/scale_brewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_colour_brewer","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_colour_brewer","text":"ColorBrewer provides sequential, diverging qualitative colour schemes particularly suited tested display discrete values (levels factor) map. ggplot2 can use colours discrete scales. also allows smoothly interpolate 6 colours palette continuous scale (6 colours per palette gives nice gradients; results saturated colours look good). However, original colour schemes (particularly qualitative ones) intended perceptual result left appreciation user. See https://colorbrewer2.org information.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_brewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_colour_brewer","text":"","code":"scale_colour_brewer(..., type = \"seq\", palette = 1, direction = 1)  scale_fill_brewer(..., type = \"seq\", palette = 1, direction = 1)  scale_colour_distiller(   ...,   type = \"seq\",   palette = 1,   direction = -1,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )  scale_fill_distiller(   ...,   type = \"seq\",   palette = 1,   direction = -1,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )"},{"path":"https://animint.github.io/animint2/reference/scale_brewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_colour_brewer","text":"... arguments passed discrete_scale control name, limits, breaks, labels forth. type One \"seq\" (sequential), \"div\" (diverging) \"qual\" (qualitative) palette string, use named palette. number, index list palettes appropriate type direction Sets order colours scale. 1, default, colours output RColorBrewer::brewer.pal(). -1, order colours reversed. values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Colour use missing values guide Type legend. Use \"colourbar\" continuous colour bar, \"legend\" discrete colour legend.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_brewer.html","id":"palettes","dir":"Reference","previous_headings":"","what":"Palettes","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_colour_brewer","text":"following palettes available use scales: Diverging BrBG, PiYG, PRGn, PuOr, RdBu, RdGy, RdYlBu, RdYlGn, Spectral Qualitative Accent, Dark2, Paired, Pastel1, Pastel2, Set1, Set2, Set3 Sequential Blues, BuGn, BuPu, GnBu, Greens, Greys, Oranges,      OrRd, PuBu, PuBuGn, PuRd, Purples, RdPu, Reds, YlGn, YlGnBu, YlOrBr, YlOrRd","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_brewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential, diverging and qualitative colour scales from colorbrewer.org — scale_colour_brewer","text":"","code":"dsamp <- diamonds[sample(nrow(diamonds), 1000), ] (d <- ggplot(dsamp, aes(carat, price)) +   geom_point(aes(colour = clarity)))   # Change scale label d + scale_colour_brewer()  d + scale_colour_brewer(\"Diamond\\nclarity\")   # Select brewer palette to use, see ?scales::brewer_pal for more details d + scale_colour_brewer(palette = \"Greens\")  d + scale_colour_brewer(palette = \"Set1\")   # \\donttest{ # scale_fill_brewer works just the same as # scale_colour_brewer but for fill colours p <- ggplot(diamonds, aes(x = price, fill = cut)) +   geom_histogram(position = \"dodge\", binwidth = 1000) p + scale_fill_brewer()  # the order of colour can be reversed p + scale_fill_brewer(direction = -1)  # the brewer scales look better on a darker background p + scale_fill_brewer(direction = -1) + theme_dark()  # }  # Use distiller variant with continous data v <- ggplot(faithfuld) +   geom_tile(aes(waiting, eruptions, fill = density)) v  v + scale_fill_distiller()  v + scale_fill_distiller(palette = \"Spectral\")"},{"path":"https://animint.github.io/animint2/reference/scale_continuous.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous position scales (x & y). — scale_continuous","title":"Continuous position scales (x & y). — scale_continuous","text":"scale_x_continuous scale_y_continuous key functions. others, scale_x_log10, scale_y_sqrt etc, aliases set trans argument commonly used transformations.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_continuous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous position scales (x & y). — scale_continuous","text":"","code":"scale_x_continuous(   name = waiver(),   breaks = waiver(),   minor_breaks = waiver(),   labels = waiver(),   limits = NULL,   expand = waiver(),   oob = censor,   na.value = NA_real_,   trans = \"identity\" )  scale_y_continuous(   name = waiver(),   breaks = waiver(),   minor_breaks = waiver(),   labels = waiver(),   limits = NULL,   expand = waiver(),   oob = censor,   na.value = NA_real_,   trans = \"identity\" )  scale_x_log10(...)  scale_y_log10(...)  scale_x_reverse(...)  scale_y_reverse(...)  scale_x_sqrt(...)  scale_y_sqrt(...)"},{"path":"https://animint.github.io/animint2/reference/scale_continuous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous position scales (x & y). — scale_continuous","text":"name name scale. Used axis legend title. NULL, default, name scale taken first mapping used aesthetic. breaks One : NULL breaks waiver() default breaks computed     transformation object numeric vector positions function takes limits input returns breaks     output minor_breaks One : NULL minor breaks waiver() default breaks (one minor break     major break) numeric vector positions function given limits returns vector minor breaks. labels One : NULL labels waiver() default labels computed     transformation object character vector giving labels (must length breaks) function takes breaks input returns labels     output limits numeric vector length two providing limits scale. Use NA refer existing minimum maximum. expand numeric vector length two giving multiplicative additive expansion constants. constants ensure data placed distance away axes. defaults c(0.05, 0) continuous variables, c(0, 0.6) discrete variables. oob Function handles limits outside scale limits (bounds). default replaces bounds values NA. na.value Missing values replaced value. trans Either name transformation object,   object . Built-transformations include \"asn\", \"atanh\",   \"boxcox\", \"exp\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\",   \"logit\", \"probability\", \"probit\", \"reciprocal\", \"reverse\" \"sqrt\". transformation object bundles together transform, inverse,   methods generating breaks labels. Transformation objects   defined scales package, called name_trans, e.g.   boxcox_trans. can create   transformation trans_new. ... arguments passed scale_(x|y)_continuous","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_continuous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous position scales (x & y). — scale_continuous","text":"","code":"# \\donttest{ if (require(ggplot2movies)) { m <- ggplot(subset(movies, votes > 1000), aes(rating, votes)) +   geom_point(na.rm = TRUE) m  # Manipulating the default position scales lets you:  #  * change the axis labels m + scale_y_continuous(\"number of votes\") m + scale_y_continuous(quote(votes ^ alpha))  #  * modify the axis limits m + scale_y_continuous(limits = c(0, 5000)) m + scale_y_continuous(limits = c(1000, 10000)) m + scale_x_continuous(limits = c(7, 8))  # you can also use the short hand functions xlim and ylim m + ylim(0, 5000) m + ylim(1000, 10000) m + xlim(7, 8)  #  * choose where the ticks appear m + scale_x_continuous(breaks = 1:10) m + scale_x_continuous(breaks = c(1,3,7,9))  #  * manually label the ticks m + scale_x_continuous(breaks = c(2,5,8), labels = c(\"two\", \"five\", \"eight\")) m + scale_x_continuous(breaks = c(2,5,8), labels = c(\"horrible\", \"ok\", \"awesome\")) m + scale_x_continuous(breaks = c(2,5,8), labels = expression(Alpha, Beta, Omega))  # There are a few built in transformation that you can use: m + scale_y_log10() m + scale_y_sqrt() m + scale_y_reverse() # You can also create your own and supply them to the trans argument. # See ?scales::trans_new  # You can control the formatting of the labels with the formatter # argument.  Some common formats are built into the scales package: df <- data.frame(   x = rnorm(10) * 100000,   y = seq(0, 1, length.out = 10) ) p <- ggplot(df, aes(x, y)) + geom_point() p + scale_y_continuous(labels = scales::percent) p + scale_y_continuous(labels = scales::dollar) p + scale_x_continuous(labels = scales::comma)  # Other shortcut functions ggplot(movies, aes(rating, votes)) +   geom_point() +   ylim(1e4, 5e4) #   * axis labels ggplot(movies, aes(rating, votes)) +   geom_point() +   labs(x = \"My x axis\", y = \"My y axis\") #   * log scaling ggplot(movies, aes(rating, votes)) +   geom_point() +   scale_x_log10() +   scale_y_log10() } #> Loading required package: ggplot2movies #> Warning: there is no package called ‘ggplot2movies’ # }"},{"path":"https://animint.github.io/animint2/reference/scale_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Position scale, date & date times — scale_date","title":"Position scale, date & date times — scale_date","text":"Use scale_*_date Date variables, scale_*_datetime POSIXct variables.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position scale, date & date times — scale_date","text":"","code":"scale_x_date(   name = waiver(),   breaks = waiver(),   date_breaks = waiver(),   labels = waiver(),   date_labels = waiver(),   minor_breaks = waiver(),   date_minor_breaks = waiver(),   limits = NULL,   expand = waiver() )  scale_y_date(   name = waiver(),   breaks = waiver(),   date_breaks = waiver(),   labels = waiver(),   date_labels = waiver(),   minor_breaks = waiver(),   date_minor_breaks = waiver(),   limits = NULL,   expand = waiver() )  scale_x_datetime(   name = waiver(),   breaks = waiver(),   date_breaks = waiver(),   labels = waiver(),   date_labels = waiver(),   minor_breaks = waiver(),   date_minor_breaks = waiver(),   limits = NULL,   expand = waiver() )  scale_y_datetime(   name = waiver(),   breaks = waiver(),   date_breaks = waiver(),   labels = waiver(),   date_labels = waiver(),   minor_breaks = waiver(),   date_minor_breaks = waiver(),   limits = NULL,   expand = waiver() )"},{"path":"https://animint.github.io/animint2/reference/scale_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position scale, date & date times — scale_date","text":"name name scale. Used axis legend title. NULL, default, name scale taken first mapping used aesthetic. breaks One : NULL breaks waiver() default breaks computed     transformation object numeric vector positions function takes limits input returns breaks     output date_breaks string giving distance breaks like \"2 weeks\", \"10 years\". breaks date_breaks specified, date_breaks wins. labels One : NULL labels waiver() default labels computed     transformation object character vector giving labels (must length breaks) function takes breaks input returns labels     output date_labels string giving formatting specification labels. Codes defined strftime. labels date_labels specified, date_labels wins. minor_breaks One : NULL minor breaks waiver() default breaks (one minor break     major break) numeric vector positions function given limits returns vector minor breaks. date_minor_breaks string giving distance minor breaks like \"2 weeks\", \"10 years\". minor_breaks date_minor_breaks specified, date_minor_breaks wins. limits numeric vector length two providing limits scale. Use NA refer existing minimum maximum. expand numeric vector length two giving multiplicative additive expansion constants. constants ensure data placed distance away axes. defaults c(0.05, 0) continuous variables, c(0, 0.6) discrete variables.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position scale, date & date times — scale_date","text":"","code":"last_month <- Sys.Date() - 0:29 df <- data.frame(   date = last_month,   price = runif(30) ) base <- ggplot(df, aes(date, price)) +   geom_line()  # The date scale will attempt to pick sensible defaults for # major and minor tick marks. Override with date_breaks, date_labels # date_minor_breaks arguments. base + scale_x_date(date_labels = \"%b %d\")  base + scale_x_date(date_breaks = \"1 week\", date_labels = \"%W\")  base + scale_x_date(date_minor_breaks = \"1 day\")   # Set limits base + scale_x_date(limits = c(Sys.Date() - 7, NA)) #> Warning: Removed 22 rows containing missing values (geom_path)."},{"path":"https://animint.github.io/animint2/reference/scale_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete position. — scale_x_discrete","title":"Discrete position. — scale_x_discrete","text":"can use continuous positions even discrete position scale - allows (e.g.) place labels bars bar chart. Continuous positions numeric values starting one first level, increasing one level (.e. labels placed integer positions).  allows jittering work.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete position. — scale_x_discrete","text":"","code":"scale_x_discrete(..., expand = waiver())  scale_y_discrete(..., expand = waiver())"},{"path":"https://animint.github.io/animint2/reference/scale_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete position. — scale_x_discrete","text":"... common discrete scale parameters: name, breaks, labels, na.value, limits guide.  See discrete_scale details expand numeric vector length two giving multiplicative additive expansion constants. constants ensure data placed distance away axes.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete position. — scale_x_discrete","text":"","code":"ggplot(diamonds, aes(cut)) + geom_bar()   # \\donttest{ # The discrete position scale is added automatically whenever you # have a discrete position.  (d <- ggplot(subset(diamonds, carat > 1), aes(cut, clarity)) +       geom_jitter())   d + scale_x_discrete(\"Cut\")  d + scale_x_discrete(\"Cut\", labels = c(\"Fair\" = \"F\",\"Good\" = \"G\",   \"Very Good\" = \"VG\",\"Perfect\" = \"P\",\"Ideal\" = \"I\"))   # Use limits to adjust the which levels (and in what order) # are displayed d + scale_x_discrete(limits = c(\"Fair\",\"Ideal\")) #> Warning: Removed 11189 rows containing missing values (geom_point).   # you can also use the short hand functions xlim and ylim d + xlim(\"Fair\",\"Ideal\", \"Good\") #> Warning: Removed 9610 rows containing missing values (geom_point).  d + ylim(\"I1\", \"IF\") #> Warning: Removed 16770 rows containing missing values (geom_point).   # See ?reorder to reorder based on the values of another variable ggplot(mpg, aes(manufacturer, cty)) + geom_point()  ggplot(mpg, aes(reorder(manufacturer, cty), cty)) + geom_point()  ggplot(mpg, aes(reorder(manufacturer, displ), cty)) + geom_point()   # Use abbreviate as a formatter to reduce long names ggplot(mpg, aes(reorder(manufacturer, displ), cty)) +   geom_point() +   scale_x_discrete(labels = abbreviate)  # }"},{"path":"https://animint.github.io/animint2/reference/scale_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth gradient between two colours — scale_colour_gradient","title":"Smooth gradient between two colours — scale_colour_gradient","text":"scale_*_gradient creates two colour gradient (low-high), scale_*_gradient2 creates diverging colour gradient (low-mid-high), scale_*_gradientn creats n-colour gradient.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth gradient between two colours — scale_colour_gradient","text":"","code":"scale_colour_gradient(   ...,   low = \"#132B43\",   high = \"#56B1F7\",   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )  scale_fill_gradient(   ...,   low = \"#132B43\",   high = \"#56B1F7\",   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )  scale_colour_gradient2(   ...,   low = muted(\"red\"),   mid = \"white\",   high = muted(\"blue\"),   midpoint = 0,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )  scale_fill_gradient2(   ...,   low = muted(\"red\"),   mid = \"white\",   high = muted(\"blue\"),   midpoint = 0,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\" )  scale_colour_gradientn(   ...,   colours,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   colors )  scale_fill_gradientn(   ...,   colours,   values = NULL,   space = \"Lab\",   na.value = \"grey50\",   guide = \"colourbar\",   colors )"},{"path":"https://animint.github.io/animint2/reference/scale_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth gradient between two colours — scale_colour_gradient","text":"... arguments passed discrete_scale control name, limits, breaks, labels forth. low, high Colours low high ends gradient. space colour space calculate gradient. Must \"Lab\" - values deprecated. na.value Colour use missing values guide Type legend. Use \"colourbar\" continuous colour bar, \"legend\" discrete colour legend. mid colour mid point midpoint midpoint (data value) diverging scale. Defaults 0. colours, colors Vector colours use n-colour gradient. values colours evenly positioned along gradient vector gives position (0 1) colour colours vector. See rescale() convenience function map arbitrary range 0 1.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_gradient.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth gradient between two colours — scale_colour_gradient","text":"Default colours generated munsell mnsl(c(\"2.5PB 2/4\", \"2.5PB 7/10\"). Generally, continuous colour scales want keep hue constant, vary chroma luminance. munsell package makes easy using Munsell colour system.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_gradient.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth gradient between two colours — scale_colour_gradient","text":"","code":"df <- data.frame(   x = runif(100),   y = runif(100),   z1 = rnorm(100),   z2 = abs(rnorm(100)) )  # Default colour scale colours from light blue to dark blue ggplot(df, aes(x, y)) +   geom_point(aes(colour = z2))   # For diverging colour scales use gradient2 ggplot(df, aes(x, y)) +   geom_point(aes(colour = z1)) +   scale_colour_gradient2()   # Use your own colour scale with gradientn ggplot(df, aes(x, y)) +   geom_point(aes(colour = z1)) +   scale_colour_gradientn(colours = terrain.colors(10))   # Equivalent fill scales do the same job for the fill aesthetic ggplot(faithfuld, aes(waiting, eruptions)) +   geom_raster(aes(fill = density)) +   scale_fill_gradientn(colours = terrain.colors(10))   # Adjust colour choices with low and high ggplot(df, aes(x, y)) +   geom_point(aes(colour = z2)) +   scale_colour_gradient(low = \"white\", high = \"black\")  # Avoid red-green colour contrasts because ~10% of men have difficulty # seeing them"},{"path":"https://animint.github.io/animint2/reference/scale_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential grey colour scale. — scale_colour_grey","title":"Sequential grey colour scale. — scale_colour_grey","text":"Based gray.colors","code":""},{"path":"https://animint.github.io/animint2/reference/scale_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential grey colour scale. — scale_colour_grey","text":"","code":"scale_colour_grey(..., start = 0.2, end = 0.8, na.value = \"red\")  scale_fill_grey(..., start = 0.2, end = 0.8, na.value = \"red\")"},{"path":"https://animint.github.io/animint2/reference/scale_grey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential grey colour scale. — scale_colour_grey","text":"... arguments passed discrete_scale control name, limits, breaks, labels forth. start grey value low end palette end grey value high end palette na.value Colour use missing values","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_grey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequential grey colour scale. — scale_colour_grey","text":"","code":"p <- ggplot(mtcars, aes(mpg, wt)) + geom_point(aes(colour = factor(cyl))) p + scale_colour_grey()  p + scale_colour_grey(end = 0)   # You may want to turn off the pale grey background with this scale p + scale_colour_grey() + theme_bw()   # Colour of missing values is controlled with na.value: miss <- factor(sample(c(NA, 1:5), nrow(mtcars), replace = TRUE)) ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(colour = miss)) +   scale_colour_grey()  ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(colour = miss)) +   scale_colour_grey(na.value = \"green\")"},{"path":"https://animint.github.io/animint2/reference/scale_hue.html","id":null,"dir":"Reference","previous_headings":"","what":"Qualitative colour scale with evenly spaced hues. — scale_colour_hue","title":"Qualitative colour scale with evenly spaced hues. — scale_colour_hue","text":"Qualitative colour scale evenly spaced hues.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_hue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Qualitative colour scale with evenly spaced hues. — scale_colour_hue","text":"","code":"scale_colour_hue(   ...,   h = c(0, 360) + 15,   c = 100,   l = 65,   h.start = 0,   direction = 1,   na.value = \"grey50\" )  scale_fill_hue(   ...,   h = c(0, 360) + 15,   c = 100,   l = 65,   h.start = 0,   direction = 1,   na.value = \"grey50\" )"},{"path":"https://animint.github.io/animint2/reference/scale_hue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Qualitative colour scale with evenly spaced hues. — scale_colour_hue","text":"... arguments passed discrete_scale control name, limits, breaks, labels forth. h range hues use, [0, 360] c chroma (intensity colour), maximum value varies depending combination hue luminance. l luminance (lightness), [0, 100] h.start hue start direction direction travel around colour wheel, 1 = clockwise, -1 = counter-clockwise na.value Colour use missing values","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_hue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Qualitative colour scale with evenly spaced hues. — scale_colour_hue","text":"","code":"# \\donttest{ dsamp <- diamonds[sample(nrow(diamonds), 1000), ] (d <- ggplot(dsamp, aes(carat, price)) + geom_point(aes(colour = clarity)))   # Change scale label d + scale_colour_hue()  d + scale_colour_hue(\"clarity\")  d + scale_colour_hue(expression(clarity[beta]))   # Adjust luminosity and chroma d + scale_colour_hue(l = 40, c = 30)  d + scale_colour_hue(l = 70, c = 30)  d + scale_colour_hue(l = 70, c = 150)  d + scale_colour_hue(l = 80, c = 150)   # Change range of hues used d + scale_colour_hue(h = c(0, 90))  d + scale_colour_hue(h = c(90, 180))  d + scale_colour_hue(h = c(180, 270))  d + scale_colour_hue(h = c(270, 360))   # Vary opacity # (only works with pdf, quartz and cairo devices) d <- ggplot(dsamp, aes(carat, price, colour = clarity)) d + geom_point(alpha = 0.9)  d + geom_point(alpha = 0.5)  d + geom_point(alpha = 0.2)   # Colour of missing values is controlled with na.value: miss <- factor(sample(c(NA, 1:5), nrow(mtcars), replace = TRUE)) ggplot(mtcars, aes(mpg, wt)) + geom_point(aes(colour = miss))  ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(colour = miss)) +   scale_colour_hue(na.value = \"black\")  # }"},{"path":"https://animint.github.io/animint2/reference/scale_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Use values without scaling. — scale_identity","title":"Use values without scaling. — scale_identity","text":"Use values without scaling.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use values without scaling. — scale_identity","text":"","code":"scale_colour_identity(..., guide = \"none\")  scale_fill_identity(..., guide = \"none\")  scale_shape_identity(..., guide = \"none\")  scale_linetype_identity(..., guide = \"none\")  scale_alpha_identity(..., guide = \"none\")  scale_size_identity(..., guide = \"none\")"},{"path":"https://animint.github.io/animint2/reference/scale_identity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use values without scaling. — scale_identity","text":"... arguments passed discrete_scale continuous_scale guide Guide use scale - defaults \"none\".","code":""},{"path":"https://animint.github.io/animint2/reference/scale_identity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use values without scaling. — scale_identity","text":"","code":"ggplot(luv_colours, aes(u, v)) +   geom_point(aes(colour = col), size = 3) +   scale_color_identity() +   coord_equal()   df <- data.frame(   x = 1:4,   y = 1:4,   colour = c(\"red\", \"green\", \"blue\", \"yellow\") ) ggplot(df, aes(x, y)) + geom_tile(aes(fill = colour))  ggplot(df, aes(x, y)) +   geom_tile(aes(fill = colour)) +   scale_fill_identity()   # To get a legend guide, specify guide = \"legend\" ggplot(df, aes(x, y)) +   geom_tile(aes(fill = colour)) +   scale_fill_identity(guide = \"legend\")  # But you'll typically also need to supply breaks and labels: ggplot(df, aes(x, y)) +   geom_tile(aes(fill = colour)) +   scale_fill_identity(\"trt\", labels = letters[1:4], breaks = df$colour,   guide = \"legend\")   # cyl scaled to appropriate size ggplot(mtcars, aes(mpg, wt)) + geom_point(aes(size = cyl))   # cyl used as point size ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(size = cyl)) +   scale_size_identity()"},{"path":"https://animint.github.io/animint2/reference/scale_linetype.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale for line patterns. — scale_linetype","title":"Scale for line patterns. — scale_linetype","text":"Default line types based set supplied Richard Pearson, University Manchester.  Line types can mapped continuous values.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_linetype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale for line patterns. — scale_linetype","text":"","code":"scale_linetype(..., na.value = \"blank\")  scale_linetype_continuous(...)  scale_linetype_discrete(..., na.value = \"blank\")"},{"path":"https://animint.github.io/animint2/reference/scale_linetype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale for line patterns. — scale_linetype","text":"... common discrete scale parameters: name, breaks, labels, na.value, limits guide.  See discrete_scale details na.value linetype use NA values.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_linetype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale for line patterns. — scale_linetype","text":"","code":"base <- ggplot(economics_long, aes(date, value01)) base + geom_line(aes(group = variable))  base + geom_line(aes(linetype = variable))   # See scale_manual for more flexibility"},{"path":"https://animint.github.io/animint2/reference/scale_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Create your own discrete scale. — scale_manual","title":"Create your own discrete scale. — scale_manual","text":"Create discrete scale.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create your own discrete scale. — scale_manual","text":"","code":"scale_colour_manual(..., values)  scale_fill_manual(..., values)  scale_size_manual(..., values)  scale_shape_manual(..., values)  scale_linetype_manual(..., values)  scale_alpha_manual(..., values)"},{"path":"https://animint.github.io/animint2/reference/scale_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create your own discrete scale. — scale_manual","text":"... common discrete scale parameters: name, breaks, labels, na.value, limits guide.  See discrete_scale details values set aesthetic values map data values .  named vector, values matched based names. unnamed, values matched order (usually alphabetical) limits scale.  data values match given na.value.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create your own discrete scale. — scale_manual","text":"","code":"# \\donttest{ p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(colour = factor(cyl)))  p + scale_colour_manual(values = c(\"red\",\"blue\", \"green\"))  p + scale_colour_manual(   values = c(\"8\" = \"red\",\"4\" = \"blue\",\"6\" = \"green\"))  # With rgb hex values p + scale_colour_manual(values = c(\"#FF0000\", \"#0000FF\", \"#00FF00\"))   # As with other scales you can use breaks to control the appearance # of the legend cols <- c(\"8\" = \"red\",\"4\" = \"blue\",\"6\" = \"darkgreen\", \"10\" = \"orange\") p + scale_colour_manual(values = cols)  p + scale_colour_manual(values = cols, breaks = c(\"4\", \"6\", \"8\"))  p + scale_colour_manual(values = cols, breaks = c(\"8\", \"6\", \"4\"))  p + scale_colour_manual(values = cols, breaks = c(\"4\", \"6\", \"8\"),   labels = c(\"four\", \"six\", \"eight\"))   # And limits to control the possible values of the scale p + scale_colour_manual(values = cols, limits = c(\"4\", \"8\"))  p + scale_colour_manual(values = cols, limits = c(\"4\", \"6\", \"8\", \"10\"))   # Notice that the values are matched with limits, and not breaks p + scale_colour_manual(limits = c(6, 8, 4), breaks = c(8, 4, 6),   values = c(\"grey50\", \"grey80\", \"black\"))  # }"},{"path":"https://animint.github.io/animint2/reference/scale_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale for shapes, aka glyphs. — scale_shape","title":"Scale for shapes, aka glyphs. — scale_shape","text":"continuous variable can mapped shape.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale for shapes, aka glyphs. — scale_shape","text":"","code":"scale_shape(..., solid = TRUE)"},{"path":"https://animint.github.io/animint2/reference/scale_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale for shapes, aka glyphs. — scale_shape","text":"... common discrete scale parameters: name, breaks, labels, na.value, limits guide.  See discrete_scale details solid shapes solid, TRUE, hollow FALSE?","code":""},{"path":"https://animint.github.io/animint2/reference/scale_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale for shapes, aka glyphs. — scale_shape","text":"","code":"dsmall <- diamonds[sample(nrow(diamonds), 100), ]  (d <- ggplot(dsmall, aes(carat, price)) + geom_point(aes(shape = cut)))  d + scale_shape(solid = TRUE) # the default  d + scale_shape(solid = FALSE)  d + scale_shape(name = \"Cut of diamond\")  d + scale_shape(name = \"Cut of\\ndiamond\")   # To change order of levels, change order of # underlying factor levels(dsmall$cut) <- c(\"Fair\", \"Good\", \"Very Good\", \"Premium\", \"Ideal\")  # Need to recreate plot to pick up new data ggplot(dsmall, aes(price, carat)) + geom_point(aes(shape = cut))   # Or for short: d %+% dsmall"},{"path":"https://animint.github.io/animint2/reference/scale_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale size (area or radius). — scale_size","title":"Scale size (area or radius). — scale_size","text":"scale_size scales area, scale_radius scales radius. size aesthetic commonly used points text, humans perceive area points (radius), provides optimal perception. scale_size_area ensures value 0 mapped size 0.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale size (area or radius). — scale_size","text":"","code":"scale_radius(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   range = c(1, 6),   trans = \"identity\",   guide = \"legend\" )  scale_size(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   range = c(1, 6),   trans = \"identity\",   guide = \"legend\" )  scale_size_area(..., max_size = 6)"},{"path":"https://animint.github.io/animint2/reference/scale_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale size (area or radius). — scale_size","text":"name name scale. Used axis legend title. NULL, default, name scale taken first mapping used aesthetic. breaks One : NULL breaks waiver() default breaks computed     transformation object numeric vector positions function takes limits input returns breaks     output labels One : NULL labels waiver() default labels computed     transformation object character vector giving labels (must length breaks) function takes breaks input returns labels     output limits numeric vector length two providing limits scale. Use NA refer existing minimum maximum. range numeric vector length 2 specifies minimum maximum size plotting symbol transformation. trans Either name transformation object,   object . Built-transformations include \"asn\", \"atanh\",   \"boxcox\", \"exp\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\",   \"logit\", \"probability\", \"probit\", \"reciprocal\", \"reverse\" \"sqrt\". transformation object bundles together transform, inverse,   methods generating breaks labels. Transformation objects   defined scales package, called name_trans, e.g.   boxcox_trans. can create   transformation trans_new. guide Name guide object, object . ... arguments passed continuous_scale control name, limits, breaks, labels forth. max_size Size largest points.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/scale_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale size (area or radius). — scale_size","text":"","code":"p <- ggplot(mpg, aes(displ, hwy, size = hwy)) +    geom_point() p  p + scale_size(\"Highway mpg\")  p + scale_size(range = c(0, 10))   # If you want zero value to have zero size, use scale_size_area: p + scale_size_area()   # This is most useful when size is a count ggplot(mpg, aes(class, cyl)) +   geom_count() +   scale_size_area()   # If you want to map size to radius (usually bad idea), use scale_radius p + scale_radius()"},{"path":"https://animint.github.io/animint2/reference/scale_size_animint.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale point sizes using circle area, but specifying the radius in pixels. — scale_size_animint","title":"Scale point sizes using circle area, but specifying the radius in pixels. — scale_size_animint","text":"Scale point sizes using circle area, specifying radius pixels.","code":""},{"path":"https://animint.github.io/animint2/reference/scale_size_animint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale point sizes using circle area, but specifying the radius in pixels. — scale_size_animint","text":"","code":"scale_size_animint(pixel.range = c(2, 20), ...)"},{"path":"https://animint.github.io/animint2/reference/scale_size_animint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale point sizes using circle area, but specifying the radius in pixels. — scale_size_animint","text":"pixel.range min max circle radius pixels. ... passed continuous_scale.","code":""},{"path":"https://animint.github.io/animint2/reference/seals.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector field of seal movements. — seals","title":"Vector field of seal movements. — seals","text":"vector field produced data described Brillinger, D.R., Preisler, H.K., Ager, .. Kie, J.G. \"exploratory data analysis (EDA) paths moving animals\". J. Statistical Planning Inference 122 (2004), 43-63, using methods Brillinger, D.R., \"Learning potential function trajectory\", Signal Processing Letters. December (2007).","code":""},{"path":"https://animint.github.io/animint2/reference/seals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector field of seal movements. — seals","text":"","code":"seals"},{"path":"https://animint.github.io/animint2/reference/seals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vector field of seal movements. — seals","text":"data frame 1155 rows 4 variables","code":""},{"path":"https://animint.github.io/animint2/reference/seals.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vector field of seal movements. — seals","text":"https://www.stat.berkeley.edu/~brill/Papers/jspifinal.pdf","code":""},{"path":"https://animint.github.io/animint2/reference/selectSSandCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate .variable/.value selectors — selectSSandCS","title":"Separate .variable/.value selectors — selectSSandCS","text":"Separate .variable/.value selectors","code":""},{"path":"https://animint.github.io/animint2/reference/selectSSandCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate .variable/.value selectors — selectSSandCS","text":"","code":"selectSSandCS(aesthetics_list)"},{"path":"https://animint.github.io/animint2/reference/selectSSandCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate .variable/.value selectors — selectSSandCS","text":"aesthetics_list aesthetics mapping layer","code":""},{"path":"https://animint.github.io/animint2/reference/selectSSandCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate .variable/.value selectors — selectSSandCS","text":"Modified aes.list list separated showSelected.variable/value","code":""},{"path":"https://animint.github.io/animint2/reference/setPlotSizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set plot width and height for all plots — setPlotSizes","title":"Set plot width and height for all plots — setPlotSizes","text":"Set plot width height plots","code":""},{"path":"https://animint.github.io/animint2/reference/setPlotSizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set plot width and height for all plots — setPlotSizes","text":"","code":"setPlotSizes(meta, AllPlotsInfo)"},{"path":"https://animint.github.io/animint2/reference/setPlotSizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set plot width and height for all plots — setPlotSizes","text":"meta meta object information AllPlotsInfo plot info list","code":""},{"path":"https://animint.github.io/animint2/reference/setPlotSizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set plot width and height for all plots — setPlotSizes","text":"NULL. Sizes stored meta object","code":""},{"path":"https://animint.github.io/animint2/reference/should_stop.html","id":null,"dir":"Reference","previous_headings":"","what":"Used in examples to illustrate when errors should occur. — should_stop","title":"Used in examples to illustrate when errors should occur. — should_stop","text":"Used examples illustrate errors occur.","code":""},{"path":"https://animint.github.io/animint2/reference/should_stop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used in examples to illustrate when errors should occur. — should_stop","text":"","code":"should_stop(expr)"},{"path":"https://animint.github.io/animint2/reference/should_stop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used in examples to illustrate when errors should occur. — should_stop","text":"expr code evaluate.","code":""},{"path":"https://animint.github.io/animint2/reference/should_stop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Used in examples to illustrate when errors should occur. — should_stop","text":"","code":"should_stop(stop(\"Hi!\")) should_stop(should_stop(\"Hi!\")) #> [1] \"Hi!\""},{"path":"https://animint.github.io/animint2/reference/split_recursive.html","id":null,"dir":"Reference","previous_headings":"","what":"Split data.frame into recursive list of data.frame. — split_recursive","title":"Split data.frame into recursive list of data.frame. — split_recursive","text":"Split data.frame recursive list data.frame.","code":""},{"path":"https://animint.github.io/animint2/reference/split_recursive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split data.frame into recursive list of data.frame. — split_recursive","text":"","code":"split_recursive(x, vars)"},{"path":"https://animint.github.io/animint2/reference/split_recursive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split data.frame into recursive list of data.frame. — split_recursive","text":"x data.frame. vars character vector variable names split .","code":""},{"path":"https://animint.github.io/animint2/reference/split_recursive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split data.frame into recursive list of data.frame. — split_recursive","text":"recursive list data.frame.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ecdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical Cumulative Density Function — stat_ecdf","title":"Empirical Cumulative Density Function — stat_ecdf","text":"Empirical Cumulative Density Function","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ecdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical Cumulative Density Function — stat_ecdf","text":"","code":"stat_ecdf(   mapping = NULL,   data = NULL,   geom = \"step\",   position = \"identity\",   ...,   n = NULL,   pad = TRUE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_ecdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical Cumulative Density Function — stat_ecdf","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. n NULL, interpolate. NULL, number points interpolate . pad TRUE, pad ecdf additional points (-Inf, 0) (Inf, 1) na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ecdf.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Empirical Cumulative Density Function — stat_ecdf","text":"x x data y cumulative density corresponding x","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ecdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Empirical Cumulative Density Function — stat_ecdf","text":"","code":"# \\donttest{ df <- data.frame(x = rnorm(1000)) ggplot(df, aes(x)) + stat_ecdf(geom = \"step\")   df <- data.frame(x = c(rnorm(100, 0, 3), rnorm(100, 0, 10)),                  g = gl(2, 100))  ggplot(df, aes(x, colour = g)) + stat_ecdf()  # }"},{"path":"https://animint.github.io/animint2/reference/stat_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data ellipses. — stat_ellipse","title":"Plot data ellipses. — stat_ellipse","text":"method calculating ellipses modified car::ellipse (Fox Weisberg, 2011)","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data ellipses. — stat_ellipse","text":"","code":"stat_ellipse(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   ...,   type = \"t\",   level = 0.95,   segments = 51,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data ellipses. — stat_ellipse","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. type type ellipse. default \"t\" assumes multivariate t-distribution, \"norm\" assumes multivariate normal distribution. \"euclid\" draws circle radius equal level, representing euclidean distance center. ellipse probably appear circular unless coord_fixed() applied. level confidence level draw ellipse (default 0.95), , type=\"euclid\", radius circle drawn. segments number segments used drawing ellipse. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ellipse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot data ellipses. — stat_ellipse","text":"John Fox Sanford Weisberg (2011). R Companion   Applied Regression, Second Edition. Thousand Oaks CA: Sage.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot data ellipses. — stat_ellipse","text":"","code":"ggplot(faithful, aes(waiting, eruptions)) +   geom_point() +   stat_ellipse()   ggplot(faithful, aes(waiting, eruptions, color = eruptions > 3)) +   geom_point() +   stat_ellipse()   ggplot(faithful, aes(waiting, eruptions, color = eruptions > 3)) +   geom_point() +   stat_ellipse(type = \"norm\", linetype = 2) +   stat_ellipse(type = \"t\")   ggplot(faithful, aes(waiting, eruptions, color = eruptions > 3)) +   geom_point() +   stat_ellipse(type = \"norm\", linetype = 2) +   stat_ellipse(type = \"euclid\", level = 3) +   coord_fixed()   ggplot(faithful, aes(waiting, eruptions, fill = eruptions > 3)) +   stat_ellipse(geom = \"polygon\")"},{"path":"https://animint.github.io/animint2/reference/stat_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Superimpose a function. — stat_function","title":"Superimpose a function. — stat_function","text":"Superimpose function.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Superimpose a function. — stat_function","text":"","code":"stat_function(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   ...,   fun,   xlim = NULL,   n = 101,   args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Superimpose a function. — stat_function","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. fun function use xlim Optionally, restrict range function range. n number points interpolate along args list additional arguments pass fun na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_function.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Superimpose a function. — stat_function","text":"stat_function understands following aesthetics (required aesthetics bold): y","code":""},{"path":"https://animint.github.io/animint2/reference/stat_function.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Superimpose a function. — stat_function","text":"x x's along grid y value function evaluated corresponding x","code":""},{"path":"https://animint.github.io/animint2/reference/stat_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Superimpose a function. — stat_function","text":"","code":"set.seed(1492) df <- data.frame(   x = rnorm(100) ) x <- df$x base <- ggplot(df, aes(x)) + geom_density() base + stat_function(fun = dnorm, colour = \"red\")  base + stat_function(fun = dnorm, colour = \"red\", args = list(mean = 3))   # Plot functions without data # Examples adapted from Kohske Takahashi  # Specify range of x-axis ggplot(data.frame(x = c(0, 2)), aes(x)) +   stat_function(fun = exp, geom = \"line\")   # Plot a normal curve ggplot(data.frame(x = c(-5, 5)), aes(x)) + stat_function(fun = dnorm)   # To specify a different mean or sd, use the args parameter to supply new values ggplot(data.frame(x = c(-5, 5)), aes(x)) +   stat_function(fun = dnorm, args = list(mean = 2, sd = .5))   # Two functions on the same plot f <- ggplot(data.frame(x = c(0, 10)), aes(x)) f + stat_function(fun = sin, colour = \"red\") +   stat_function(fun = cos, colour = \"blue\")   # Using a custom function test <- function(x) {x ^ 2 + x + 20} f + stat_function(fun = test)"},{"path":"https://animint.github.io/animint2/reference/stat_identity.html","id":null,"dir":"Reference","previous_headings":"","what":"Identity statistic. — stat_identity","title":"Identity statistic. — stat_identity","text":"identity statistic leaves data unchanged.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_identity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identity statistic. — stat_identity","text":"","code":"stat_identity(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_identity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identity statistic. — stat_identity","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_identity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identity statistic. — stat_identity","text":"","code":"p <- ggplot(mtcars, aes(wt, mpg)) p + stat_identity()"},{"path":"https://animint.github.io/animint2/reference/stat_qq.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation for quantile-quantile plot. — stat_qq","title":"Calculation for quantile-quantile plot. — stat_qq","text":"Calculation quantile-quantile plot.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_qq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation for quantile-quantile plot. — stat_qq","text":"","code":"stat_qq(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   distribution = stats::qnorm,   dparams = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  geom_qq(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   distribution = stats::qnorm,   dparams = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_qq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation for quantile-quantile plot. — stat_qq","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. distribution Distribution function use, x specified dparams Additional parameters passed distribution function. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_qq.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Calculation for quantile-quantile plot. — stat_qq","text":"stat_qq understands following aesthetics (required aesthetics bold): sample x y","code":""},{"path":"https://animint.github.io/animint2/reference/stat_qq.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Calculation for quantile-quantile plot. — stat_qq","text":"sample sample quantiles theoretical theoretical quantiles","code":""},{"path":"https://animint.github.io/animint2/reference/stat_qq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation for quantile-quantile plot. — stat_qq","text":"","code":"# \\donttest{ df <- data.frame(y = rt(200, df = 5)) p <- ggplot(df, aes(sample = y)) p + stat_qq()  p + geom_point(stat = \"qq\")   # Use fitdistr from MASS to estimate distribution params params <- as.list(MASS::fitdistr(df$y, \"t\")$estimate) #> Warning: NaNs produced #> Warning: NaNs produced ggplot(df, aes(sample = y)) +   stat_qq(distribution = qt, dparams = params[\"df\"])   # Using to explore the distribution of a variable ggplot(mtcars) +   stat_qq(aes(sample = mpg))  ggplot(mtcars) +   stat_qq(aes(sample = mpg, colour = factor(cyl)))  # }"},{"path":"https://animint.github.io/animint2/reference/stat_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise y values at unique/binned x x. — stat_summary_bin","title":"Summarise y values at unique/binned x x. — stat_summary_bin","text":"stat_summary operates unique x; stat_summary_bin operators binned x. flexible versions stat_bin: instead just counting, can compute aggregate.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise y values at unique/binned x x. — stat_summary_bin","text":"","code":"stat_summary_bin(   mapping = NULL,   data = NULL,   geom = \"pointrange\",   position = \"identity\",   ...,   fun.data = NULL,   fun.y = NULL,   fun.ymax = NULL,   fun.ymin = NULL,   fun.args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_summary(   mapping = NULL,   data = NULL,   geom = \"pointrange\",   position = \"identity\",   ...,   fun.data = NULL,   fun.y = NULL,   fun.ymax = NULL,   fun.ymin = NULL,   fun.args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise y values at unique/binned x x. — stat_summary_bin","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. fun.data function given complete data return data frame variables ymin, y, ymax. fun.ymin, fun.y, fun.ymax Alternatively, supply three individual functions passed vector x's return single number. fun.args Optional additional arguments passed functions. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_summary.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Summarise y values at unique/binned x x. — stat_summary_bin","text":"stat_summary understands following aesthetics (required aesthetics bold): x y","code":""},{"path":"https://animint.github.io/animint2/reference/stat_summary.html","id":"summary-functions","dir":"Reference","previous_headings":"","what":"Summary functions","title":"Summarise y values at unique/binned x x. — stat_summary_bin","text":"can either supply summary functions individually (fun.y, fun.ymax, fun.ymin), single function (fun.data): fun.data Complete summary function. take numeric vector      input return data frame output fun.ymin ymin summary function (take numeric vector     return single number) fun.y y summary function (take numeric vector return     single number) fun.ymax ymax summary function (take numeric vector     return single number) simple vector function easiest work can return single number, somewhat less flexible. summary function computes multiple values (e.g. ymin ymax), use fun.data. aggregation functions suppled, default mean_se.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/stat_summary_2d.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","title":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","text":"stat_summary_2d 2d variation stat_summary. stat_summary_hex hexagonal variation stat_summary_2d. data divided bins defined x y, values z cell summarised fun.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_summary_2d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","text":"","code":"stat_summary_2d(   mapping = NULL,   data = NULL,   geom = \"tile\",   position = \"identity\",   ...,   bins = 30,   binwidth = NULL,   drop = TRUE,   fun = \"mean\",   fun.args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  stat_summary_hex(   mapping = NULL,   data = NULL,   geom = \"hex\",   position = \"identity\",   ...,   bins = 30,   binwidth = NULL,   drop = TRUE,   fun = \"mean\",   fun.args = list(),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_summary_2d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. bins numeric vector giving number bins vertical horizontal directions. Set 30 default. binwidth Numeric vector giving bin width vertical horizontal directions. Overrides bins set. drop drop output fun NA. fun function summary. fun.args list extra arguments pass fun na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_summary_2d.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","text":"x: horizontal position y: vertical position z: value passed summary function","code":""},{"path":"https://animint.github.io/animint2/reference/stat_summary_2d.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","text":"x,y Location value Value summary statistic.","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/stat_summary_2d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin and summarise in 2d (rectangle & hexagons) — stat_summary_2d","text":"","code":"d <- ggplot(diamonds, aes(carat, depth, z = price)) d + stat_summary_2d()   # Specifying function d + stat_summary_2d(fun = function(x) sum(x^2))  d + stat_summary_2d(fun = var)  d + stat_summary_2d(fun = \"quantile\", fun.args = list(probs = 0.1))   if (requireNamespace(\"hexbin\")) { d + stat_summary_hex() } #> Loading required namespace: hexbin"},{"path":"https://animint.github.io/animint2/reference/stat_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicates. — stat_unique","title":"Remove duplicates. — stat_unique","text":"Remove duplicates.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicates. — stat_unique","text":"","code":"stat_unique(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://animint.github.io/animint2/reference/stat_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicates. — stat_unique","text":"mapping Set aesthetic mappings created aes aes_. specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three    options: NULL, default, data inherited plot    data specified call ggplot. data.frame, object, override plot    data. objects fortified produce data frame. See    fortify variables created. function called single argument,    plot data. return value must data.frame.,    used layer data. geom geometric object use display data position Position adjustment, either string, result call position adjustment function. ... arguments passed layer. often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE (default), removes missing values warning.  TRUE silently removes missing values. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders.","code":""},{"path":"https://animint.github.io/animint2/reference/stat_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicates. — stat_unique","text":"","code":"ggplot(mtcars, aes(vs, am)) + geom_point(alpha = 0.1)  ggplot(mtcars, aes(vs, am)) + geom_point(alpha = 0.1, stat=\"unique\")"},{"path":"https://animint.github.io/animint2/reference/summary.gganimintplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Displays a useful description of a ggplot object — summary.gganimintplot","title":"Displays a useful description of a ggplot object — summary.gganimintplot","text":"Displays useful description ggplot object","code":""},{"path":"https://animint.github.io/animint2/reference/summary.gganimintplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Displays a useful description of a ggplot object — summary.gganimintplot","text":"","code":"# S3 method for class 'gganimintplot' summary(object, ...)"},{"path":"https://animint.github.io/animint2/reference/summary.gganimintplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Displays a useful description of a ggplot object — summary.gganimintplot","text":"object ggplot2 object summarise ... arguments ignored (compatibility generic)","code":""},{"path":"https://animint.github.io/animint2/reference/summary.gganimintplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Displays a useful description of a ggplot object — summary.gganimintplot","text":"","code":"p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point() summary(p) #> data: mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb [32x11] #> mapping:  x = mpg, y = wt #> faceting: facet_null()  #> ----------------------------------- #> geom_point: na.rm = FALSE #> stat_identity: na.rm = FALSE #> position_identity  #>"},{"path":"https://animint.github.io/animint2/reference/switch_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip axes in case of coord_flip Switches column names. Eg. xmin to ymin, yntercept to xintercept etc. — switch_axes","title":"Flip axes in case of coord_flip Switches column names. Eg. xmin to ymin, yntercept to xintercept etc. — switch_axes","text":"Flip axes case coord_flip Switches column names. Eg. xmin ymin, yntercept xintercept etc.","code":""},{"path":"https://animint.github.io/animint2/reference/switch_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip axes in case of coord_flip Switches column names. Eg. xmin to ymin, yntercept to xintercept etc. — switch_axes","text":"","code":"switch_axes(col.names)"},{"path":"https://animint.github.io/animint2/reference/switch_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip axes in case of coord_flip Switches column names. Eg. xmin to ymin, yntercept to xintercept etc. — switch_axes","text":"col.names Column names need switched","code":""},{"path":"https://animint.github.io/animint2/reference/switch_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip axes in case of coord_flip Switches column names. Eg. xmin to ymin, yntercept to xintercept etc. — switch_axes","text":"Column names x y axes switched","code":""},{"path":"https://animint.github.io/animint2/reference/theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Set theme elements — theme","title":"Set theme elements — theme","text":"Use function modify theme settings.","code":""},{"path":"https://animint.github.io/animint2/reference/theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set theme elements — theme","text":"","code":"theme(..., complete = FALSE, validate = TRUE)"},{"path":"https://animint.github.io/animint2/reference/theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set theme elements — theme","text":"... list element name, element pairings modify existing theme. complete set TRUE complete theme, one returned theme_grey(). Complete themes behave differently added ggplot object. validate TRUE run validate_element, FALSE bypass checks.","code":""},{"path":"https://animint.github.io/animint2/reference/theme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set theme elements — theme","text":"Theme elements can inherit properties theme elements. example, axis.title.x inherits axis.title, turn inherits text. text elements inherit directly indirectly text; lines inherit line, rectangular objects inherit rect. examples modifying properties using inheritance, %+replace%. see graphical representation inheritance tree, see last example .","code":""},{"path":"https://animint.github.io/animint2/reference/theme.html","id":"theme-elements","dir":"Reference","previous_headings":"","what":"Theme elements","title":"Set theme elements — theme","text":"individual theme elements :","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/theme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set theme elements — theme","text":"","code":"# \\donttest{ p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point() p  p + theme(panel.background = element_rect(colour = \"pink\"))  p + theme_bw()   # Scatter plot of gas mileage by vehicle weight p <- ggplot(mtcars, aes(wt, mpg)) +   geom_point() # Calculate slope and intercept of line of best fit coef(lm(mpg ~ wt, data = mtcars)) #> (Intercept)          wt  #>   37.285126   -5.344472  p + geom_abline(intercept = 37, slope = -5)  # Calculate correlation coefficient with(mtcars, cor(wt, mpg, use = \"everything\", method = \"pearson\")) #> [1] -0.8676594 #annotate the plot p + geom_abline(intercept = 37, slope = -5) + geom_text(data = data.frame(), aes(4.5, 30, label = \"Pearson-R = -.87\"))   # Change the axis labels # Original plot p  p + labs(x = \"Vehicle Weight\", y = \"Miles per Gallon\")  # Or p + labs(x = \"Vehicle Weight\", y = \"Miles per Gallon\")   # Change title appearance p <- p + labs(title = \"Vehicle Weight-Gas Mileage Relationship\") # Set title to twice the base font size p + theme(plot.title = element_text(size = rel(2)))  p + theme(plot.title = element_text(size = rel(2), colour = \"blue\"))   # Add a subtitle and adjust bottom margin p + labs(title = \"Vehicle Weight-Gas Mileage Relationship\",          subtitle = \"You need to wrap long subtitleson manually\") +     theme(plot.subtitle = element_text(margin = margin(b = 20)))   # Changing plot look with themes DF <- data.frame(x = rnorm(400)) m <- ggplot(DF, aes(x = x)) +   geom_histogram() # Default is theme_grey() m #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  # Compare with m + theme_bw() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   # Manipulate Axis Attributes m + theme(axis.line = element_line(size = 3, colour = \"red\", linetype = \"dotted\")) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  m + theme(axis.text = element_text(colour = \"blue\")) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  m + theme(axis.text.y = element_blank()) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  m + theme(axis.ticks = element_line(size = 2)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  m + theme(axis.title.y = element_text(size = rel(1.5), angle = 90)) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  m + theme(axis.title.x = element_blank()) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  m + theme(axis.ticks.length = unit(.85, \"cm\")) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   # Legend Attributes z <- ggplot(mtcars, aes(wt, mpg)) +   geom_point(aes(colour = factor(cyl))) z  z + theme(legend.position = \"none\")  z + theme(legend.position = \"bottom\")  # Or use relative coordinates between 0 and 1 z + theme(legend.position = c(.5, .5))  # Add a border to the whole legend z + theme(legend.background = element_rect(colour = \"black\"))  # Legend margin controls extra space around outside of legend: z + theme(legend.background = element_rect(),           legend.margin = unit(1, \"cm\"))  z + theme(legend.background = element_rect(),           legend.margin = unit(0, \"cm\"))  # Or to just the keys z + theme(legend.key = element_rect(colour = \"black\"))  z + theme(legend.key = element_rect(fill = \"yellow\"))  z + theme(legend.key.size = unit(2.5, \"cm\"))  z + theme(legend.text = element_text(size = 20, colour = \"red\", angle = 45))  z + theme(legend.title = element_text(face = \"italic\"))   # To change the title of the legend use the name argument # in one of the scale options z + scale_colour_brewer(name = \"My Legend\")  z + scale_colour_grey(name = \"Number of \\nCylinders\")   # Panel and Plot Attributes z + theme(panel.background = element_rect(fill = \"black\"))  z + theme(panel.border = element_rect(linetype = \"dashed\", colour = \"black\"))  z + theme(panel.grid.major = element_line(colour = \"blue\"))  z + theme(panel.grid.minor = element_line(colour = \"red\", linetype = \"dotted\"))  z + theme(panel.grid.major = element_line(size = 2))  z + theme(panel.grid.major.y = element_blank(),           panel.grid.minor.y = element_blank())  z + theme(plot.background = element_rect())  z + theme(plot.background = element_rect(fill = \"green\"))   # Faceting Attributes set.seed(4940) dsmall <- diamonds[sample(nrow(diamonds), 1000), ] k <- ggplot(dsmall, aes(carat, ..density..)) +   geom_histogram(binwidth = 0.2) +   facet_grid(. ~ cut) k + theme(strip.background = element_rect(colour = \"purple\", fill = \"pink\",                                           size = 3, linetype = \"dashed\"))  k + theme(strip.text.x = element_text(colour = \"red\", angle = 45, size = 10,                                       hjust = 0.5, vjust = 0.5))  k + theme(panel.margin = unit(5, \"lines\"))  k + theme(panel.margin.y = unit(0, \"lines\"))   # Put gridlines on top meanprice <- tapply(diamonds$price, diamonds$cut, mean) cut <- factor(levels(diamonds$cut), levels = levels(diamonds$cut)) df <- data.frame(meanprice, cut) g <- ggplot(df, aes(cut, meanprice)) + geom_bar(stat = \"identity\") g + geom_bar(stat = \"identity\") +     theme(panel.background = element_blank(),           panel.grid.major.x = element_blank(),           panel.grid.minor.x = element_blank(),           panel.grid.minor.y = element_blank(),           panel.ontop = TRUE)   # Modify a theme and save it mytheme <- theme_grey() + theme(plot.title = element_text(colour = \"red\")) p + mytheme   # }"},{"path":"https://animint.github.io/animint2/reference/theme_animint.html","id":null,"dir":"Reference","previous_headings":"","what":"theme for passing animint specific params — theme_animint","title":"theme for passing animint specific params — theme_animint","text":"Theme without checks. allows us write theme_animint(width=500), instead theme(animint.width=500) gives error ggplot2 users informed mis-type standard theme element names. https://github.com/hadley/ggplot2/issues/938","code":""},{"path":"https://animint.github.io/animint2/reference/theme_animint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"theme for passing animint specific params — theme_animint","text":"","code":"theme_animint(...)"},{"path":"https://animint.github.io/animint2/reference/theme_animint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"theme for passing animint specific params — theme_animint","text":"... theme options width. Use update_axes=c(\"x\", \"y\") update axes plots. Works single selection variables.","code":""},{"path":"https://animint.github.io/animint2/reference/theme_animint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"theme for passing animint specific params — theme_animint","text":"ggplot theme list names animint.width.","code":""},{"path":"https://animint.github.io/animint2/reference/theme_animint.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"theme for passing animint specific params — theme_animint","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/theme_animint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"theme for passing animint specific params — theme_animint","text":"","code":"mtcars$cyl <- as.factor(mtcars$cyl) p <- ggplot() +   geom_point(aes(x=wt, y=mpg, colour=cyl),              data=mtcars) +   ## set width and height values and update both axes   theme_animint(width=600, height=600, update_axes=c(\"x\", \"y\")) viz <- list(plot=p, selector.types=list(cyl=\"single\")) animint2dir(viz)"},{"path":"https://animint.github.io/animint2/reference/theme_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Get, set and update themes. — theme_update","title":"Get, set and update themes. — theme_update","text":"Use theme_get get current theme, theme_set completely override . theme_update theme_replace shorthands changing individual elements current theme. theme_update uses + operator, unspecified values theme element default values set theme. theme_replace completely replace element, unspecified values overwrite current value theme NULLs.","code":""},{"path":"https://animint.github.io/animint2/reference/theme_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get, set and update themes. — theme_update","text":"","code":"theme_update(...)  theme_replace(...)  theme_get()  theme_set(new)"},{"path":"https://animint.github.io/animint2/reference/theme_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get, set and update themes. — theme_update","text":"... named list theme settings new new theme (list theme elements)","code":""},{"path":[]},{"path":"https://animint.github.io/animint2/reference/theme_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get, set and update themes. — theme_update","text":"","code":"p <- ggplot(mtcars, aes(mpg, wt)) +   geom_point() p  old <- theme_set(theme_bw()) p  theme_set(old) p   #theme_replace NULLs out the fill attribute of panel.background, #resulting in a white background: theme_get()$panel.background #> List of 4 #>  $ fill    : chr \"grey92\" #>  $ colour  : logi NA #>  $ size    : NULL #>  $ linetype: NULL #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" old <- theme_replace(panel.background = element_rect(colour = \"pink\")) theme_get()$panel.background #> List of 4 #>  $ fill    : NULL #>  $ colour  : chr \"pink\" #>  $ size    : NULL #>  $ linetype: NULL #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" p  theme_set(old)  #theme_update only changes the colour attribute, leaving the others intact: old <- theme_update(panel.background = element_rect(colour = \"pink\")) theme_get()$panel.background #> List of 4 #>  $ fill    : chr \"grey92\" #>  $ colour  : chr \"pink\" #>  $ size    : NULL #>  $ linetype: NULL #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" p  theme_set(old)  theme_get() #> List of 46 #>  $ line                 :List of 4 #>   ..$ colour  : chr \"black\" #>   ..$ size    : num 0.5 #>   ..$ linetype: num 1 #>   ..$ lineend : chr \"butt\" #>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  $ rect                 :List of 4 #>   ..$ fill    : chr \"white\" #>   ..$ colour  : chr \"black\" #>   ..$ size    : num 0.5 #>   ..$ linetype: num 1 #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  $ text                 :List of 10 #>   ..$ family    : chr \"\" #>   ..$ face      : chr \"plain\" #>   ..$ colour    : chr \"black\" #>   ..$ size      : num 11 #>   ..$ hjust     : num 0.5 #>   ..$ vjust     : num 0.5 #>   ..$ angle     : num 0 #>   ..$ lineheight: num 0.9 #>   ..$ margin    : 'margin' num [1:4] 0points 0points 0points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : logi FALSE #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ axis.line            :List of 4 #>   ..$ colour  : NULL #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..$ lineend : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  $ axis.line.x          : list() #>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\" #>  $ axis.line.y          : list() #>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\" #>  $ axis.text            :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : chr \"grey30\" #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : NULL #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ axis.text.x          :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : num 1 #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 2.2points 0points 0points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ axis.text.y          :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : num 1 #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 0points 2.2points 0points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ axis.ticks           :List of 4 #>   ..$ colour  : chr \"grey20\" #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..$ lineend : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  $ axis.ticks.length    : 'simpleUnit' num 2.75points #>   ..- attr(*, \"unit\")= int 8 #>  $ axis.title.x         :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 4.4points 0points 2.2points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ axis.title.y         :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : num 90 #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 0points 4.4points 0points 2.2points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ legend.background    :List of 4 #>   ..$ fill    : NULL #>   ..$ colour  : logi NA #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  $ legend.margin        : 'simpleUnit' num 0.2cm #>   ..- attr(*, \"unit\")= int 1 #>  $ legend.key           :List of 4 #>   ..$ fill    : chr \"grey95\" #>   ..$ colour  : chr \"white\" #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  $ legend.key.size      : 'simpleUnit' num 1.2lines #>   ..- attr(*, \"unit\")= int 3 #>  $ legend.key.height    : NULL #>  $ legend.key.width     : NULL #>  $ legend.text          :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : 'rel' num 0.8 #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : NULL #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ legend.text.align    : NULL #>  $ legend.title         :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : num 0 #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : NULL #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ legend.title.align   : NULL #>  $ legend.position      : chr \"right\" #>  $ legend.direction     : NULL #>  $ legend.justification : chr \"center\" #>  $ legend.box           : NULL #>  $ panel.background     :List of 4 #>   ..$ fill    : chr \"grey92\" #>   ..$ colour  : logi NA #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  $ panel.border         : list() #>   ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\" #>  $ panel.grid.major     :List of 4 #>   ..$ colour  : chr \"white\" #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..$ lineend : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  $ panel.grid.minor     :List of 4 #>   ..$ colour  : chr \"white\" #>   ..$ size    : num 0.25 #>   ..$ linetype: NULL #>   ..$ lineend : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\" #>  $ panel.margin         : 'simpleUnit' num 5.5points #>   ..- attr(*, \"unit\")= int 8 #>  $ panel.margin.x       : NULL #>  $ panel.margin.y       : NULL #>  $ panel.ontop          : logi FALSE #>  $ strip.background     :List of 4 #>   ..$ fill    : chr \"grey85\" #>   ..$ colour  : logi NA #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  $ strip.text           :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : chr \"grey10\" #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : NULL #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ strip.text.x         :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 5.5points 0points 5.5points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ strip.text.y         :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : NULL #>   ..$ hjust     : NULL #>   ..$ vjust     : NULL #>   ..$ angle     : num -90 #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 0points 5.5points 0points 5.5points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ strip.switch.pad.grid: 'simpleUnit' num 0.1cm #>   ..- attr(*, \"unit\")= int 1 #>  $ strip.switch.pad.wrap: 'simpleUnit' num 0.1cm #>   ..- attr(*, \"unit\")= int 1 #>  $ plot.background      :List of 4 #>   ..$ fill    : NULL #>   ..$ colour  : chr \"white\" #>   ..$ size    : NULL #>   ..$ linetype: NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\" #>  $ plot.title           :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : 'rel' num 1.2 #>   ..$ hjust     : num 0 #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 0points 0points 6.6points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ plot.subtitle        :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : 'rel' num 0.9 #>   ..$ hjust     : num 0 #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 0points 0points 4.95points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ plot.caption         :List of 10 #>   ..$ family    : NULL #>   ..$ face      : NULL #>   ..$ colour    : NULL #>   ..$ size      : 'rel' num 0.9 #>   ..$ hjust     : num 1 #>   ..$ vjust     : NULL #>   ..$ angle     : NULL #>   ..$ lineheight: NULL #>   ..$ margin    : 'margin' num [1:4] 0points 0points 4.95points 0points #>   .. ..- attr(*, \"unit\")= int 8 #>   ..$ debug     : NULL #>   ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\" #>  $ plot.margin          : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points #>   ..- attr(*, \"unit\")= int 8 #>  - attr(*, \"class\")= chr [1:2] \"theme\" \"gganimint\" #>  - attr(*, \"complete\")= logi TRUE #>  - attr(*, \"validate\")= logi TRUE   ggplot(mtcars, aes(mpg, wt)) +   geom_point(aes(color = mpg)) +   theme(legend.position = c(0.95, 0.95),         legend.justification = c(1, 1))  last_plot() +  theme(legend.background = element_rect(fill = \"white\", colour = \"white\", size = 3))"},{"path":"https://animint.github.io/animint2/reference/toRGB.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R colors to RGB hexadecimal color values — toRGB","title":"Convert R colors to RGB hexadecimal color values — toRGB","text":"Convert R colors RGB hexadecimal color values","code":""},{"path":"https://animint.github.io/animint2/reference/toRGB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R colors to RGB hexadecimal color values — toRGB","text":"","code":"toRGB(x)"},{"path":"https://animint.github.io/animint2/reference/toRGB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R colors to RGB hexadecimal color values — toRGB","text":"x character","code":""},{"path":"https://animint.github.io/animint2/reference/toRGB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R colors to RGB hexadecimal color values — toRGB","text":"hexadecimal color value \"transparent\" .na","code":""},{"path":"https://animint.github.io/animint2/reference/train_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Train position scales with data — train_position","title":"Train position scales with data — train_position","text":"panel-specific scales already present, clone scales provided parameter","code":""},{"path":"https://animint.github.io/animint2/reference/train_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train position scales with data — train_position","text":"","code":"train_position(panel, data, x_scale, y_scale)"},{"path":"https://animint.github.io/animint2/reference/train_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train position scales with data — train_position","text":"panel panel object train data list data frames (one layer) x_scale x scale plot y_scale y scale plot","code":""},{"path":"https://animint.github.io/animint2/reference/transform_position.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to transform all position variables. — transform_position","title":"Convenience function to transform all position variables. — transform_position","text":"Convenience function transform position variables.","code":""},{"path":"https://animint.github.io/animint2/reference/transform_position.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to transform all position variables. — transform_position","text":"","code":"transform_position(df, trans_x = NULL, trans_y = NULL, ...)"},{"path":"https://animint.github.io/animint2/reference/transform_position.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to transform all position variables. — transform_position","text":"trans_x, trans_y Transformation functions x y aesthetics. (transform x, xmin, xmax, xend etc) ... Additional arguments passed trans_x trans_y.","code":""},{"path":"https://animint.github.io/animint2/reference/transform_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to transform R shapes into d3 shapes... — transform_shape","title":"Function to transform R shapes into d3 shapes... — transform_shape","text":"Function transform R shapes d3 shapes...","code":""},{"path":"https://animint.github.io/animint2/reference/transform_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to transform R shapes into d3 shapes... — transform_shape","text":"","code":"transform_shape(dframe)"},{"path":"https://animint.github.io/animint2/reference/transform_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to transform R shapes into d3 shapes... — transform_shape","text":"dframe Data frame columns shape, fill, colour.","code":""},{"path":"https://animint.github.io/animint2/reference/transform_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to transform R shapes into d3 shapes... — transform_shape","text":"Data frame transformed shape corresponds d3 shape. Also includes Rshape column debugging.","code":""},{"path":"https://animint.github.io/animint2/reference/translate_qplot_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Translating between qplot and ggplot — translate_qplot_ggplot","title":"Translating between qplot and ggplot — translate_qplot_ggplot","text":"Within ggplot2, two basic methods create plots, qplot() ggplot(). qplot() designed primarily interactive use: makes number assumptions speed cases, designing multilayered plots different data sources can get way. section describes defaults , map fuller ggplot() syntax.","code":""},{"path":"https://animint.github.io/animint2/reference/translate_qplot_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translating between qplot and ggplot — translate_qplot_ggplot","text":"","code":"# By default, qplot() assumes that you want a scatterplot, # i.e., you want to use geom_point() # qplot(x, y, data = data) # ggplot(data, aes(x, y)) + geom_point()  # Using Aesthetics  # If you map additional aesthetics, these will be added to the defaults. With # qplot() there is no way to use different aesthetic mappings (or data) in # different layers # qplot(x, y, data = data, shape = shape, colour = colour) # ggplot(data, aes(x, y, shape = shape, colour = colour)) + geom_point() # # Aesthetic parameters in qplot() always try to map the aesthetic to a # variable. If the argument is not a variable but a value, effectively a new column # is added to the original dataset with that value. To set an aesthetic to a # value and override the default appearance, you surround the value with I() in # qplot(), or pass it as a parameter to the layer. # qplot(x, y, data = data, colour = I(\"red\")) # ggplot(data, aes(x, y)) + geom_point(colour = \"red\")  # Changing the geom parameter changes the geom added to the plot # qplot(x, y, data = data, geom = \"line\") # ggplot(data, aes(x, y)) + geom_line()  # Not all geoms require both x and y, e.g., geom_bar() and geom_histogram(). # For these two geoms, if the y aesthetic is not supplied, both qplot and # ggplot commands default to \"count\" on the y-axis # ggplot(data, aes(x)) + geom_bar() # qplot(x, data = data, geom = \"bar\")  # If a vector of multiple geom names is supplied to the geom argument, each # geom will be added in turn # qplot(x, y, data = data, geom = c(\"point\", \"smooth\")) # ggplot(data, aes(x, y)) + geom_point() + geom_smooth()  # Unlike the rest of ggplot2, stats and geoms are independent # qplot(x, y, data = data, stat = \"bin\") # ggplot(data, aes(x, y)) + geom_point(stat = \"bin\") # # Any layer parameters will be passed on to all layers. Most layers will ignore # parameters that they don't need # qplot(x, y, data = data, geom = c(\"point\", \"smooth\"), method = \"lm\") # ggplot(data, aes(x, y)) + geom_point(method = \"lm\") + geom_smooth(method = \"lm\")  # Scales and axes  # You can control basic properties of the x and y scales with the xlim, ylim, # xlab and ylab arguments # qplot(x, y, data = data, xlim = c(1, 5), xlab = \"my label\") # ggplot(data, aes(x, y)) + geom_point() + # scale_x_continuous(\"my label\", limits = c(1, 5))  # qplot(x, y, data = data, xlim = c(1, 5), ylim = c(10, 20)) # ggplot(data, aes(x, y)) + geom_point() + # scale_x_continuous(limits = c(1, 5)) + scale_y_continuous(limits = c(10, 20))  # Like plot(), qplot() has a convenient way of log transforming the axes. # qplot(x, y, data = data, log = \"xy\") # ggplot(data, aes(x, y)) + geom_point() + scale_x_log10() + scale_y_log10() # There are many other possible transformations, but not all are # accessible from within qplot(), see ?scale_continuous for more  # Plot options  # qplot() recognises the same options as plot does, and converts them to their # ggplot2 equivalents. See ?theme for more on ggplot options # qplot(x, y, data = data, main=\"title\", asp = 1) # ggplot(data, aes(x, y)) + geom_point() + labs(title = \"title\") + theme(aspect.ratio = 1)"},{"path":"https://animint.github.io/animint2/reference/translate_qplot_lattice.html","id":null,"dir":"Reference","previous_headings":"","what":"Translating between qplot and lattice — translate_qplot_lattice","title":"Translating between qplot and lattice — translate_qplot_lattice","text":"major difference lattice ggplot2 lattice uses formula based interface. ggplot2 formula generalise well complicated situations.","code":""},{"path":"https://animint.github.io/animint2/reference/translate_qplot_lattice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translating between qplot and lattice — translate_qplot_lattice","text":"","code":"# \\donttest{ library(lattice)  if (require(\"ggplot2movies\")) { xyplot(rating ~ year, data=movies) qplot(year, rating, data=movies)  xyplot(rating ~ year | Comedy + Action, data = movies) qplot(year, rating, data = movies, facets = ~ Comedy + Action) # Or maybe qplot(year, rating, data = movies, facets = Comedy ~ Action)  # While lattice has many different functions to produce different types of # graphics (which are all basically equivalent to setting the panel argument), # ggplot2 has qplot().  stripplot(~ rating, data = movies, jitter.data = TRUE) qplot(rating, 1, data = movies, geom = \"jitter\")  histogram(~ rating, data = movies) qplot(rating, data = movies, geom = \"histogram\")  xyplot(wt ~ mpg, mtcars, type = c(\"p\",\"smooth\")) qplot(mpg, wt, data = mtcars, geom = c(\"point\",\"smooth\")) } #> Loading required package: ggplot2movies #> Warning: there is no package called ‘ggplot2movies’  # The capabilities for scale manipulations are similar in both ggplot2 and # lattice, although the syntax is a little different.  xyplot(wt ~ mpg | cyl, mtcars, scales = list(y = list(relation = \"free\")))  qplot(mpg, wt, data = mtcars) + facet_wrap(~ cyl, scales = \"free\")   xyplot(wt ~ mpg | cyl, mtcars, scales = list(log = 10))  qplot(mpg, wt, data = mtcars, log = \"xy\")   xyplot(wt ~ mpg | cyl, mtcars, scales = list(log = 2))  qplot(mpg, wt, data = mtcars) +   scale_x_continuous(trans = scales::log2_trans()) +   scale_y_continuous(trans = scales::log2_trans())   xyplot(wt ~ mpg, mtcars, group = cyl, auto.key = TRUE)  # Map directly to an aesthetic like colour, size, or shape. qplot(mpg, wt, data = mtcars, colour = cyl)   xyplot(wt ~ mpg, mtcars, xlim = c(20,30))  # Works like lattice, except you can't specify a different limit # for each panel/facet qplot(mpg, wt, data = mtcars, xlim = c(20,30)) #> Warning: Removed 22 rows containing missing values (geom_point).   # Both lattice and ggplot2 have similar options for controlling labels on the plot.  xyplot(wt ~ mpg, mtcars, xlab = \"Miles per gallon\", ylab = \"Weight\",   main = \"Weight-efficiency tradeoff\")  qplot(mpg, wt, data = mtcars, xlab = \"Miles per gallon\", ylab = \"Weight\",   main = \"Weight-efficiency tradeoff\")   xyplot(wt ~ mpg, mtcars, aspect = 1)  qplot(mpg, wt, data = mtcars, asp = 1)   # par.settings() is equivalent to + theme() and trellis.options.set() # and trellis.par.get() to theme_set() and theme_get(). # More complicated lattice formulas are equivalent to rearranging the data # before using ggplot2. # }"},{"path":"https://animint.github.io/animint2/reference/txhousing.html","id":null,"dir":"Reference","previous_headings":"","what":"Housing sales in TX. — txhousing","title":"Housing sales in TX. — txhousing","text":"Information housing market Texas provided TAMU real estate center.","code":""},{"path":"https://animint.github.io/animint2/reference/txhousing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Housing sales in TX. — txhousing","text":"","code":"txhousing"},{"path":"https://animint.github.io/animint2/reference/txhousing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Housing sales in TX. — txhousing","text":"data frame 8602 observations 9 variables: city Name MLS area year,month,date Date sales Number sales volume Total value sales median Median sale price listings Total active listings inventory \"Months inventory\": amount time take sell   current listings current pace sales.","code":""},{"path":"https://animint.github.io/animint2/reference/update_defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify geom/stat aesthetic defaults for future plots — update_geom_defaults","title":"Modify geom/stat aesthetic defaults for future plots — update_geom_defaults","text":"Modify geom/stat aesthetic defaults future plots","code":""},{"path":"https://animint.github.io/animint2/reference/update_defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify geom/stat aesthetic defaults for future plots — update_geom_defaults","text":"","code":"update_geom_defaults(geom, new)  update_stat_defaults(stat, new)"},{"path":"https://animint.github.io/animint2/reference/update_defaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify geom/stat aesthetic defaults for future plots — update_geom_defaults","text":"new Named list aesthetics. stat, geom Name geom/stat modify (like \"point\" \"bin\"), Geom/Stat object (like GeomPoint StatBin).","code":""},{"path":"https://animint.github.io/animint2/reference/update_defaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify geom/stat aesthetic defaults for future plots — update_geom_defaults","text":"","code":"update_geom_defaults(\"point\", list(colour = \"darkblue\")) ggplot(mtcars, aes(mpg, wt)) + geom_point()  update_geom_defaults(\"point\", list(colour = \"black\"))"},{"path":"https://animint.github.io/animint2/reference/update_gallery.html","id":null,"dir":"Reference","previous_headings":"","what":"Update gallery — update_gallery","title":"Update gallery — update_gallery","text":"gallery collection meta-data animints published github pages. gallery defined github repo two source files gh-pages branch: repos.txt (list github repositories, one owner/repo per line) index.Rmd (source web page links animints). perform update, first repos.txt read, clone repo already present meta.csv, parse meta-data (title, source, Capture.PNG) gh-pages branch, write meta.csv/error.csv/Capture.PNG files, render index.Rmd index.html, commit, push origin. example, see main gallery, https://github.com/animint/gallery/tree/gh-pages updated using function.","code":""},{"path":"https://animint.github.io/animint2/reference/update_gallery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update gallery — update_gallery","text":"","code":"update_gallery(gallery_path = \"~/R/gallery\")"},{"path":"https://animint.github.io/animint2/reference/update_gallery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update gallery — update_gallery","text":"gallery_path path local github repo gh-pages active.","code":""},{"path":"https://animint.github.io/animint2/reference/update_gallery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update gallery — update_gallery","text":"named list data tables (meta error).","code":""},{"path":"https://animint.github.io/animint2/reference/update_gallery.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Update gallery — update_gallery","text":"Toby Dylan Hocking","code":""},{"path":"https://animint.github.io/animint2/reference/update_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Update axis/legend labels — update_labels","title":"Update axis/legend labels — update_labels","text":"Update axis/legend labels","code":""},{"path":"https://animint.github.io/animint2/reference/update_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update axis/legend labels — update_labels","text":"","code":"update_labels(p, labels)"},{"path":"https://animint.github.io/animint2/reference/update_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update axis/legend labels — update_labels","text":"p plot modify labels named list new labels","code":""},{"path":"https://animint.github.io/animint2/reference/update_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update axis/legend labels — update_labels","text":"","code":"p <- ggplot(mtcars, aes(mpg, wt)) + geom_point() update_labels(p, list(x = \"New x\"))  update_labels(p, list(x = expression(x / y ^ 2)))  update_labels(p, list(x = \"New x\", y = \"New Y\"))  update_labels(p, list(colour = \"Fail silently\"))"},{"path":"https://animint.github.io/animint2/reference/varied.chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract subset for each data.frame in a list of data.frame — varied.chunk","title":"Extract subset for each data.frame in a list of data.frame — varied.chunk","text":"Extract subset data.frame list data.frame","code":""},{"path":"https://animint.github.io/animint2/reference/varied.chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract subset for each data.frame in a list of data.frame — varied.chunk","text":"","code":"varied.chunk(dt.or.list, cols)"},{"path":"https://animint.github.io/animint2/reference/varied.chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract subset for each data.frame in a list of data.frame — varied.chunk","text":"dt..list data.table list data.table. cols cols data.frame keep.","code":""},{"path":"https://animint.github.io/animint2/reference/varied.chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract subset for each data.frame in a list of data.frame — varied.chunk","text":"list data.frame.","code":""},{"path":"https://animint.github.io/animint2/reference/vervet.html","id":null,"dir":"Reference","previous_headings":"","what":"Vervet monkey intestinal microbiome — vervet","title":"Vervet monkey intestinal microbiome — vervet","text":"DNA sequences (55mers) bacteria gastrointestinal tract 23 vervet (African green) monkeys Wake Forest University Primate Center Vervet Research Colony. monkeys measured several locations, total 64 samples. goal analyzing data determine whether similar bacteria detected nearby locations, assuming 55mer uniquely identifies bacterium.","code":""},{"path":"https://animint.github.io/animint2/reference/vervet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vervet monkey intestinal microbiome — vervet","text":"","code":"data(vervet)"},{"path":"https://animint.github.io/animint2/reference/vervet.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vervet monkey intestinal microbiome — vervet","text":"format named list data.frames: samples contains 64 rows   sample-specific info, counts contains 1190208 rows counts   55mers observed sample, monkeys contains 23 rows   monkey-specific information.","code":""},{"path":"https://animint.github.io/animint2/reference/vervet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Vervet monkey intestinal microbiome — vervet","text":"DNA sequencing funded Genome Quebec generated McGill   Innovation Center. info Vervet Microbiome project   http://www.genomequebec.mcgill.ca/compgen/vervet_research/   http://genome.wustl.edu/projects/detail/vervet-microbiome/","code":""},{"path":"https://animint.github.io/animint2/reference/waiver.html","id":null,"dir":"Reference","previous_headings":"","what":"A waiver object. — waiver","title":"A waiver object. — waiver","text":"waiver \"flag\" object, similar NULL, indicates calling function just use default value.  used certain functions distinguish displaying nothing (NULL) displaying default value calculated elsewhere (waiver())","code":""},{"path":"https://animint.github.io/animint2/reference/waiver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A waiver object. — waiver","text":"","code":"waiver()"},{"path":"https://animint.github.io/animint2/reference/worldPop.html","id":null,"dir":"Reference","previous_headings":"","what":"World population by subcontinent — worldPop","title":"World population by subcontinent — worldPop","text":"World population data used simple example polychart.js website, data can used recreate example using animint.","code":""},{"path":"https://animint.github.io/animint2/reference/worldPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World population by subcontinent — worldPop","text":"","code":"data(worldPop)"},{"path":"https://animint.github.io/animint2/reference/worldPop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World population by subcontinent — worldPop","text":"data frame 294 observations following 4 variables. subcontinent factor: subcontinent name year integer: year measurement population integer: number people       subcontinent year type factor levels actual estimate","code":""},{"path":"https://animint.github.io/animint2/reference/worldPop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World population by subcontinent — worldPop","text":"https://github.com/Polychart/polychart2/blob/master/example/population.coffee","code":""},{"path":"https://animint.github.io/animint2/reference/zeroGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"The zero grob draws nothing and has zero size. — zeroGrob","title":"The zero grob draws nothing and has zero size. — zeroGrob","text":"zero grob draws nothing zero size.","code":""},{"path":"https://animint.github.io/animint2/reference/zeroGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The zero grob draws nothing and has zero size. — zeroGrob","text":"","code":"zeroGrob()"},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-20241010-pr154","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.10.10 (PR#154)","title":"Changes in version 2024.10.10 (PR#154)","text":"Updated animint.js use CSS classes instead IDs source links.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-2024918-pr131","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.9.18 (PR#131)","title":"Changes in version 2024.9.18 (PR#131)","text":"Added functionality capture screenshot animint2pages.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-2024917","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.9.17","title":"Changes in version 2024.9.17","text":"@export internal S3 methods, quiet roxygen2::document() messages.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-2024829-pr147","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.8.29 (PR#147)","title":"Changes in version 2024.8.29 (PR#147)","text":"animint2pages initial commit README.md uses viz title. animint2pages gains owner argument, default taken gh::gh_whoami (, always returns user, even token permissions org); allows user specify org user/token write permissions. used new test-compiler-ghpages.R, now assumes PAT_GITHUB Administration Contents permissions repos animint-test org, test code can delete animint2pages_test_repo, create new one, use animint2pages twice, test results creation/update.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-2024827-pr144","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.8.27 (PR#144)","title":"Changes in version 2024.8.27 (PR#144)","text":"Remove selenium, combine renderer tests single CI job.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-202466-pr126","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.6.6 (PR#126)","title":"Changes in version 2024.6.6 (PR#126)","text":"Add chromote headless browser testing remove phantomjs/firefox support","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-2024312-pr119","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.3.12 (PR#119)","title":"Changes in version 2024.3.12 (PR#119)","text":"Add validation checks duplicate args passed geom aes","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-202424-pr116","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.2.4 (PR#116)","title":"Changes in version 2024.2.4 (PR#116)","text":"Add validation checks duplicate missing args passed animint.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-2024124-pr112","dir":"Changelog","previous_headings":"","what":"Changes in version 2024.1.24 (PR#112)","title":"Changes in version 2024.1.24 (PR#112)","text":"move servr Suggests Imports, user-friendly installation / getting started newbies (need separate install command servr). bugfix compiler height_proportion computation, occured ggplots space=free vertical/horizontal panels. vertical panels always size, now can different sizes.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-20231121","dir":"Changelog","previous_headings":"","what":"Changes in version 2023.11.21","title":"Changes in version 2023.11.21","text":"setDTthreads(1) CRAN testthat.R (created build.sh). use servr default open.browser=TRUE.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-version-20231116-pr88","dir":"Changelog","previous_headings":"","what":"Changes in version 2023.11.16 (PR#88)","title":"Changes in version 2023.11.16 (PR#88)","text":"creating new .dir, remove old .dir, instead stop error, .dir already exists, animint.js .","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-20231115-pr101","dir":"Changelog","previous_headings":"","what":"Changes in 2023.11.15 (PR#101)","title":"Changes in 2023.11.15 (PR#101)","text":"New function animint2pages(viz,\"new_github_repo\") publishing/sharing animints, replacement animint2gist, stopped working recently. New option animint(source=\"http://path./source.R\") URL data viz source code, used display link rendered viz. New function update_gallery(\"path//gallery_repo\") updating galleries https://animint.github.io/gallery/ Bugfix: geom_text renders color svg fill style (rendering stroke style, regression introduced initial implementation fill_off). re-organization animint.js order reduce duplication / emphasize similarities differences geoms. geom rect tile now default color=“black” instead transparent, consistency geoms (case using clickSelects, defaults black color selected, transparent ). get old behavior, specify color=“transparent” (non-clickSelects).","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2023106","dir":"Changelog","previous_headings":"","what":"Changes in 2023.10.6","title":"Changes in 2023.10.6","text":"User-configurable selection style - fill_off.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2023611","dir":"Changelog","previous_headings":"","what":"Changes in 2023.6.11","title":"Changes in 2023.6.11","text":"Remove maptools dependency. split.x -> split_recursive silence new CRAN check. setDTthreads(1) examples CRAN.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2023314","dir":"Changelog","previous_headings":"","what":"Changes in 2023.3.14","title":"Changes in 2023.3.14","text":"Changes satisfy CRAN (import , consistent function args, graphical-units.Rd, rm Fox book URL stat_ellipse.Rd). facet plot title text size configurable via theme(strip.text, axis.text).","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2022914","dir":"Changelog","previous_headings":"","what":"Changes in 2022.9.14","title":"Changes in 2022.9.14","text":"Include Yufan Fei contributor DESCRIPTION. Allow configurable legend/axis text size via theme.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2022831","dir":"Changelog","previous_headings":"","what":"Changes in 2022.8.31","title":"Changes in 2022.8.31","text":"User-configurable selection styles, alpha_off colour_off.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2022825","dir":"Changelog","previous_headings":"","what":"Changes in 2022.8.25","title":"Changes in 2022.8.25","text":"import data.table, faster compilation.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2022525","dir":"Changelog","previous_headings":"","what":"Changes in 2022.5.25","title":"Changes in 2022.5.25","text":"Add ability rotate geom_text labels, following ggplot2’s semantics rotation direction.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2022524","dir":"Changelog","previous_headings":"","what":"Changes in 2022.5.24","title":"Changes in 2022.5.24","text":"Fixed small test regression set Github Actions. Neither user facing.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-202222","dir":"Changelog","previous_headings":"","what":"Changes in 2022.2.2","title":"Changes in 2022.2.2","text":"Default x/y axis text size increased 16px 11px animint.js. Suggest RColorBrewer avoid CRAN NOTE “Undeclared package RColorBrewer Rd xrefs”.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2022125","dir":"Changelog","previous_headings":"","what":"Changes in 2022.1.25","title":"Changes in 2022.1.25","text":"Remove geom/stat_boxplot/quantile due errors CRAN check.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2020918","dir":"Changelog","previous_headings":"","what":"Changes in 2020.9.18","title":"Changes in 2020.9.18","text":"update moved mcmaster URL docs.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2020819","dir":"Changelog","previous_headings":"","what":"Changes in 2020.8.19","title":"Changes in 2020.8.19","text":"Move geom-specific code saveLayer/-else Geom$export_animint pre_process methods Geom sub-classes.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-202079","dir":"Changelog","previous_headings":"","what":"Changes in 2020.7.9","title":"Changes in 2020.7.9","text":"Using RSelenium 1.7.4. Removed Defunct Redundant code/examples. User can test using docker avoid incompatibility issues. imports knitr knit_print imported namespace. Use new grid::unitType() determine unit type margin pt/points line conversion.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-202032","dir":"Changelog","previous_headings":"","what":"Changes in 2020.3.2","title":"Changes in 2020.3.2","text":"data.frame(stringsAsFactors=TRUE) tests.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2019712","dir":"Changelog","previous_headings":"","what":"Changes in 2019.7.12","title":"Changes in 2019.7.12","text":"Added three authors mentioned Rd/R files.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-201973","dir":"Changelog","previous_headings":"","what":"Changes in 2019.7.3","title":"Changes in 2019.7.3","text":"ggsave(file.path(tempdir(), f)) examples.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-201972","dir":"Changelog","previous_headings":"","what":"Changes in 2019.7.2","title":"Changes in 2019.7.2","text":"animint2dir writes temp dir rather user dir examples/tests.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-201964","dir":"Changelog","previous_headings":"","what":"Changes in 2019.6.4","title":"Changes in 2019.6.4","text":"bugfix facet_grid(scales/space=“free”) bugfix update_axes geom_abline bugfix graph height computation, showed lots rows facet spec.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-20181214","dir":"Changelog","previous_headings":"","what":"Changes in 2018.12.14","title":"Changes in 2018.12.14","text":"animint fun, export print method. infinite values converted range min/max saving tsv files.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-2018104","dir":"Changelog","previous_headings":"","what":"Changes in 2018.10.4","title":"Changes in 2018.10.4","text":"DEP: longer depend branch ggplot2. train_layout ggplot2 - R/panel.r function now g_train_layout. train_layout animint2 - R/z_facet.R function . internal functions.","code":""},{"path":"https://animint.github.io/animint2/news/index.html","id":"changes-in-20170824","dir":"Changelog","previous_headings":"","what":"Changes in 2017.08.24","title":"Changes in 2017.08.24","text":"DSL: clickSelects/showSelected now specified parameters rather aesthetics.","code":""}]
